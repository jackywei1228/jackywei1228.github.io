<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>彪彪</title>
  
  <subtitle>嫑嫑</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ifonly.me/"/>
  <updated>2018-12-14T02:48:37.564Z</updated>
  <id>https://ifonly.me/</id>
  
  <author>
    <name>彪彪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LOG工具设计</title>
    <link href="https://ifonly.me/2018/12/14/kuang-jia-she-ji/001-log-gong-ju-she-ji/"/>
    <id>https://ifonly.me/2018/12/14/kuang-jia-she-ji/001-log-gong-ju-she-ji/</id>
    <published>2018-12-14T02:48:37.564Z</published>
    <updated>2018-12-14T02:48:37.564Z</updated>
    
    <content type="html"><![CDATA[<pre class="mermaid">graph TD;    A-->B;    A-->C;    B-->D;    C-->D;</pre><pre class="mermaid">gantt        dateFormat  YYYY-MM-DD        title Adding GANTT diagram functionality to mermaid        section A section        Completed task            :done,    des1, 2014-01-06,2014-01-08        Active task               :active,  des2, 2014-01-09, 3d        Future task               :         des3, after des2, 5d        Future task2               :         des4, after des3, 5d        section Critical tasks        Completed task in the critical line :crit, done, 2014-01-06,24h        Implement parser and jison          :crit, done, after des1, 2d        Create tests for parser             :crit, active, 3d        Future task in critical line        :crit, 5d        Create tests for renderer           :2d        Add to mermaid                      :1d</pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre class=&quot;mermaid&quot;&gt;graph TD;
    A--&gt;B;
    A--&gt;C;
    B--&gt;D;
    C--&gt;D;&lt;/pre&gt;


&lt;pre class=&quot;mermaid&quot;&gt;gantt
        dateFormat  YYYY-MM-DD
      
    
    </summary>
    
      <category term="框架设计" scheme="https://ifonly.me/categories/%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>业务逻辑规划</title>
    <link href="https://ifonly.me/2018/12/14/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/ye-wu-luo-ji-gui-hua/"/>
    <id>https://ifonly.me/2018/12/14/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/ye-wu-luo-ji-gui-hua/</id>
    <published>2018-12-14T02:17:43.619Z</published>
    <updated>2018-12-14T02:17:43.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本设计"><a href="#基本设计" class="headerlink" title="基本设计"></a>基本设计</h1><h2 id="Fota交互序列图"><a href="#Fota交互序列图" class="headerlink" title="Fota交互序列图"></a>Fota交互序列图</h2><hr><pre class="mermaid">sequenceDiagramtitle: Fota序列图participant Deviceparticipant Device Managerparticipant 业务逻辑participant 数据库participant 下载服务器Device->Device Manager: 查询是否需要升级Device Manager->业务逻辑: 设备ID是否需要升级业务逻辑-->>数据库: 记录查询动作业务逻辑->数据库: 查询设备ID & 生成并初始Session ID数据库->业务逻辑: 返回升级查询结果 & Session ID业务逻辑->Device Manager: 返回升级查询结果 & Session IDDevice Manager->Device: 返回升级查询结果 & Session IDDevice->Device Manager: 发起升级请求 & Session IDDevice Manager->业务逻辑: 查询升级请求 & Session ID业务逻辑->数据库: 查询升级请求 & 改Session ID状态为下载数据库->业务逻辑: 返回升级包信息业务逻辑->Device Manager: 返回升级包信息Device Manager->Device: 返回升级包信息Device-->>下载服务器: 下载差分包下载服务器-->>Device: 下载完成Device->Device: check 数据Device-->>Device Manager: 通知下载完成 & 准备升级Device Manager-->>业务逻辑: 通知下载完成 & 准备升级业务逻辑-->>数据库: 记录Session ID状态为下载成功Device->Device: 执行升级Device->Device Manager: 通知升级成功Device Manager->业务逻辑: 通知升级成功业务逻辑->数据库: 记录升级成功 & 改Session ID 状态为升级成功归档</pre><hr><pre class="mermaid">flow:st=>start: 开始e1=>end: 结束(配置手机信息)e2=>end: 分区问题e3=>end: 其他问题op1=>operation: 检查是否有新版本op6=>operation: 记录查询动作cond1=>condition: 有新版本?op2=>operation: 获取新版本信息返回给终端op3=>operation: 终端发起下载请求cond3=>condition: 有对应文件?op4=>operation: 返回文件地址op5=>operation: 返回错误404cond2=>condition: 能否复现?op7=>operation: 告知服务器准备下载op8=>operation: 下载cond4=>condition: 成功?op9=>operation: 告知服务器下载成功op10=>operation: 告知服务器下载失败st->op1->op6->cond1->op2->op3->cond3->op4->op7->op8->cond4->op9cond1(yes)->op2cond1(no)->e1cond2(yes)->e2cond2(no)->e3cond3(yes)->op4cond3(no)->op5cond4(yes)->op9cond4(no)->op10</pre><hr><pre class="mermaid">sequenceDiagramtitle: Fota序列图participant Deviceparticipant Device Managerparticipant 业务逻辑participant 数据库participant 下载服务器Device->Device Manager: 查询是否需要升级Device Manager->业务逻辑: 设备ID是否需要升级业务逻辑-->>数据库: 记录查询动作业务逻辑->数据库: 查询设备ID & Session ID数据库->业务逻辑: 返回升级查询结果 & Session ID业务逻辑->Device Manager: 返回升级查询结果 & Session IDDevice Manager->Device: 返回升级查询结果 & Session IDDevice->Device Manager: 发起升级请求 & Session IDDevice Manager->业务逻辑: 查询升级请求 & Session ID业务逻辑->数据库: 查询升级请求 & Session ID数据库->业务逻辑: 返回升级包信息业务逻辑->Device Manager: 返回升级包信息Device Manager->Device: 返回升级包信息Device-->>下载服务器: 下载差分包下载服务器-->>Device: 下载完成Device->Device: check 数据Device-->>Device Manager: 通知下载完成 & 准备升级Device Manager-->>业务逻辑: 通知下载完成 & 准备升级业务逻辑-->>数据库: 记录状态Device->Device: 执行升级Device->Device Manager: 通知升级成功Device Manager->业务逻辑: 通知升级成功业务逻辑->数据库: 记录升级成功</pre><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本设计&quot;&gt;&lt;a href=&quot;#基本设计&quot; class=&quot;headerlink&quot; title=&quot;基本设计&quot;&gt;&lt;/a&gt;基本设计&lt;/h1&gt;&lt;h2 id=&quot;Fota交互序列图&quot;&gt;&lt;a href=&quot;#Fota交互序列图&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="需求实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/"/>
    
      <category term="Fota功能的实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/Fota%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>工作笔记</title>
    <link href="https://ifonly.me/2018/12/14/gong-zuo-xiao-tie-shi/gong-zuo-bi-ji/"/>
    <id>https://ifonly.me/2018/12/14/gong-zuo-xiao-tie-shi/gong-zuo-bi-ji/</id>
    <published>2018-12-14T02:14:28.195Z</published>
    <updated>2018-12-14T02:14:28.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从ffbm切回android："><a href="#从ffbm切回android：" class="headerlink" title="从ffbm切回android："></a>从ffbm切回android：</h2><ul><li><code>adb root</code>    (如果前面有过这个就不用重新root了）</li><li><code>adb shell &quot;echo normal &gt; /dev/block/bootdevice/by-name/misc&quot;</code></li><li><code>adb reboot</code>  等待重新开机即可</li></ul><h2 id="MMITEST-暗码"><a href="#MMITEST-暗码" class="headerlink" title="MMITEST 暗码"></a>MMITEST 暗码</h2><font size="5"><br><code>*#*#83789#*#*</code><br></font><h2 id="编译遇到的错误"><a href="#编译遇到的错误" class="headerlink" title="编译遇到的错误"></a>编译遇到的错误</h2><font size="5"><br><code>.te 无法查找, 原因是文件名字里面有空格 -____-!</code><br></font><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><pre class="mermaid">st=>start: 开始e=>end: 结束op=>operation: 我的操作cond=>condition: 确认？st->op->condcond(yes)->econd(no)->op</pre><h2 id="服务器添加新仓库后，本地使用repo如何同步更新代码"><a href="#服务器添加新仓库后，本地使用repo如何同步更新代码" class="headerlink" title="服务器添加新仓库后，本地使用repo如何同步更新代码"></a>服务器添加新仓库后，本地使用repo如何同步更新代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~/xxx/.repo/manifest</span><br><span class="line">git fetch origin</span><br><span class="line">git rebase -i origin/master (hipad)</span><br></pre></td></tr></table></figure><h2 id="调高CPU频率-QCOM"><a href="#调高CPU频率-QCOM" class="headerlink" title="调高CPU频率 QCOM"></a>调高CPU频率 QCOM</h2><ul><li><p>Open:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb shell setenforce 0</span><br><span class="line">adb remount</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu0/online&quot;</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu1/online&quot;</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu2/online&quot;</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu3/online&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor&quot;</span><br></pre></td></tr></table></figure></li><li><p>Check:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq</span><br><span class="line">adb shell cat /sys/devices/system/cpu/cpu1/cpufreq/cpuinfo_cur_freq</span><br><span class="line">adb shell cat /sys/devices/system/cpu/cpu2/cpufreq/cpuinfo_cur_freq</span><br><span class="line">adb shell cat /sys/devices/system/cpu/cpu3/cpufreq/cpuinfo_cur_freq</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看EMMC供应商信息"><a href="#查看EMMC供应商信息" class="headerlink" title="查看EMMC供应商信息:"></a>查看EMMC供应商信息:</h2><p>QS5509QL:/ # cat sys/emmc_info/name<br>manfid:0xf4:emmc type:Biwin </p><h2 id="IO-Performance"><a href="#IO-Performance" class="headerlink" title="IO Performance"></a>IO Performance</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in $(seq 1 100);do iotop | head -n 10;done</span><br><span class="line"></span><br><span class="line">for i in &#123;1..1000&#125;;do adb shell dumpsys  -t 20 cpuinfo | tail -n 1;done</span><br><span class="line"></span><br><span class="line">cut -d&quot; &quot; -f 1,2,42 /proc/*/stat | sort -n -k +3 </span><br><span class="line"></span><br><span class="line">sort -n -k 10 /proc/diskstats </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">372 (irq/77-mbhc 50</span><br></pre></td></tr></table></figure><h2 id="ATT-mnc-mcc"><a href="#ATT-mnc-mcc" class="headerlink" title="ATT mnc,mcc"></a>ATT mnc,mcc</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;CDR-SMCD-2100&gt;Definition of an AT&amp;T SIM</span><br><span class="line">Summary: SIM cards with one of the following IMSI’s are to be considered an AT&amp;T</span><br><span class="line">SIM card:</span><br><span class="line">• 310-030</span><br><span class="line">• 310 170</span><br><span class="line">• 310-280</span><br><span class="line">• 310-380</span><br><span class="line">310 410</span><br><span class="line">• 310 560</span><br><span class="line">• 311 180</span><br><span class="line">• 310-950 – used for AT&amp;T Lab purposes</span><br><span class="line">&lt;CDR-SMCD-2102&gt;Definition of a FirstNet SIM</span><br><span class="line">Summary: The SIM cards with one of the following IMSI’s are to be considered as</span><br><span class="line">FirstNet SIM cards:</span><br><span class="line">• 313-100</span><br><span class="line">• 312-670</span><br><span class="line">&lt;CKT-SMCD-2100&gt;Definition of a Cricket SIM</span><br><span class="line">Summary:</span><br><span class="line">The SIM cards the following IMSI’s constitutes as a Cricket SIM card:</span><br><span class="line">• 310-150</span><br></pre></td></tr></table></figure><h2 id="强制优化为odex"><a href="#强制优化为odex" class="headerlink" title="强制优化为odex"></a>强制优化为odex</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell pm force-dex-opt</span><br></pre></td></tr></table></figure><h2 id="git-设置和取消代理"><a href="#git-设置和取消代理" class="headerlink" title="git 设置和取消代理"></a>git 设置和取消代理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global https.proxy http://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy https://127.0.0.1:1080</span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy &apos;socks5://127.0.0.1:1080&apos;</span><br><span class="line">git config --global https.proxy &apos;socks5://127.0.0.1:1080&apos;</span><br></pre></td></tr></table></figure><h2 id="npm-config-delete-proxy"><a href="#npm-config-delete-proxy" class="headerlink" title="npm config delete proxy"></a>npm config delete proxy</h2><h2 id="上一次的Kernel-LOG"><a href="#上一次的Kernel-LOG" class="headerlink" title="上一次的Kernel LOG"></a>上一次的Kernel LOG</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">QS5509QL:/sys/fs/pstore # cat console-ramoops</span><br><span class="line">QS5509QL:/ # cat /proc/bootmsg</span><br></pre></td></tr></table></figure><h2 id="代码里面获取最顶层的ACTIVITY"><a href="#代码里面获取最顶层的ACTIVITY" class="headerlink" title="代码里面获取最顶层的ACTIVITY"></a>代码里面获取最顶层的ACTIVITY</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ActivityManager.getService().getTasks(1,0).get(0).topActivity.getClassName()</span><br></pre></td></tr></table></figure><h2 id="远程mount-black服务器"><a href="#远程mount-black服务器" class="headerlink" title="远程mount black服务器"></a>远程mount black服务器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/QS5509-QL.dint.xml_0423$ sudo mount -t cifs -o username=&quot;android&quot;,password=&quot;mobile#5&quot; //10.1.6.32/android /mnt/10.1.6.32</span><br><span class="line">android@NSGWD180021:/data/workspace/QS5509-QL.dint.xml_0423$ cd /mnt/10.1.6.32/</span><br></pre></td></tr></table></figure><h2 id="查看内存压力"><a href="#查看内存压力" class="headerlink" title="查看内存压力"></a>查看内存压力</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usage=`adb shell cat /dev/memcg/memory.usage_in_bytes` &amp;&amp; memsw=`adb shell cat /dev/memcg/memory.memsw.usage_in_bytes` &amp;&amp; let resu=$usage*100 &amp;&amp; let res=$resu/$memsw &amp;&amp; echo $res</span><br></pre></td></tr></table></figure><h2 id="退出FFBM模式"><a href="#退出FFBM模式" class="headerlink" title="退出FFBM模式"></a>退出FFBM模式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &apos;normal&apos; &gt; /dev/block/platform/soc/7824900.sdhci/by-name/misc</span><br></pre></td></tr></table></figure><h2 id="函数调用堆栈"><a href="#函数调用堆栈" class="headerlink" title="函数调用堆栈"></a>函数调用堆栈</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Slog.w(TAG,android.util.Log.getStackTraceString(new Throwable()));</span><br><span class="line">android.util.Log.w(TAG,android.util.Log.getStackTraceString(new Throwable()));</span><br><span class="line">android.util.Log.w(&quot;jackywei&quot;,&quot;jackywei log&quot;);</span><br></pre></td></tr></table></figure><h2 id="获取binder的pid-uid"><a href="#获取binder的pid-uid" class="headerlink" title="获取binder的pid uid"></a>获取binder的pid uid</h2><h2 id="发送广播"><a href="#发送广播" class="headerlink" title="发送广播"></a>发送广播</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell am broadcast -a &quot;com.han.enable.collapsed&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell ps | grep -i systemui | awk &apos;&#123;print $2&#125;&apos; | xargs adb shell kill -9</span><br><span class="line">adb root &amp;&amp; adb remount &amp;&amp; adb push SystemUI.apk /system/priv-app/SystemUI/</span><br></pre></td></tr></table></figure><h2 id="Open-the-MPE"><a href="#Open-the-MPE" class="headerlink" title="Open the MPE"></a>Open the MPE</h2><p>When trying to open the preview (both with Ctrl+Shift+M and Ctrl+Shift+P &gt; ‘Markdown Preview Enhanced: Open Preview’, the following error message appears.</p><h2 id="scp命令使用"><a href="#scp命令使用" class="headerlink" title="scp命令使用"></a>scp命令使用</h2><ul><li>把本地文件夹上传到服务器上面:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp -r /home/android/fotaNodeRespon/fotaservice android@10.1.152.145:/home/android/weibiao/</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装virbox的内核"><a href="#安装virbox的内核" class="headerlink" title="安装virbox的内核"></a>安装virbox的内核</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">切换 GCC 版本到 7.0</span><br><span class="line">sudo /usr/bin/gcc_to_7.sh</span><br><span class="line">编译vbox driver</span><br><span class="line">sudo /sbin/vboxconfig</span><br><span class="line">切换 GCC 到原来4.8版本</span><br><span class="line">sudo /usr/bin/gcc_to_48.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;从ffbm切回android：&quot;&gt;&lt;a href=&quot;#从ffbm切回android：&quot; class=&quot;headerlink&quot; title=&quot;从ffbm切回android：&quot;&gt;&lt;/a&gt;从ffbm切回android：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adb ro
      
    
    </summary>
    
      <category term="工作小贴士" scheme="https://ifonly.me/categories/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>DatabasesInfo</title>
    <link href="https://ifonly.me/2018/12/13/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/databasesinfo/"/>
    <id>https://ifonly.me/2018/12/13/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/databasesinfo/</id>
    <published>2018-12-13T07:56:55.813Z</published>
    <updated>2018-12-13T07:56:30.358Z</updated>
    
    <content type="html"><![CDATA[<p>CREATE TABLE activation (<br>    <code>id</code> INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>    <code>code</code> varchar(20) NOT NULL,<br>    <code>puid</code> varchar(20) NOT NULL,<br>    <code>current</code> varchar(10) NOT NULL,<br>    <code>createTime</code> datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,<br>    <code>updateTime</code> datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;</p><p>CREATE UNIQUE INDEX index_code_activation ON activation (<code>code</code>);<br>CREATE INDEX index_puid_activation ON activation (<code>puid</code>);</p><p> select * from activation;<br>+—-+—————–+—————–+———+———————+———————+<br>| id | code            | puid            | current | createTime          | updateTime          |<br>+—-+—————–+—————–+———+———————+———————+<br>|  8 | 111111111111    | QS5509-FOTATEST | v1A73   | 2018-11-30 15:08:24 | 2018-11-30 15:08:24 |<br>| 12 | 123456789012345 | QS5509A         | v1A74   | 2018-11-30 15:08:24 | 2018-11-30 15:08:24 |<br>| 13 | 123456789123456 | QS5509A         | v1A73   | 2018-11-30 15:08:24 | 2018-11-30 15:08:24 |<br>| 14 | 144444444444449 | QS5509A         | v1A73   | 2018-11-30 15:08:24 | 2018-11-30 15:08:24 |<br>+—-+—————–+—————–+———+———————+———————+</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CREATE TABLE activation (&lt;br&gt;    &lt;code&gt;id&lt;/code&gt; INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,&lt;br&gt;    &lt;code&gt;code&lt;/code&gt; varchar(20) N
      
    
    </summary>
    
      <category term="需求实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/"/>
    
      <category term="Fota功能的实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/Fota%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>数据库表的建立</title>
    <link href="https://ifonly.me/2018/12/13/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/shu-ju-ku-biao-de-jian-li/"/>
    <id>https://ifonly.me/2018/12/13/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/shu-ju-ku-biao-de-jian-li/</id>
    <published>2018-12-13T07:56:50.468Z</published>
    <updated>2018-12-13T07:55:54.066Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表的创建"><a href="#表的创建" class="headerlink" title="表的创建"></a>表的创建</h1><p>CREATE DATABASE fota;<br>use fota;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;表的创建&quot;&gt;&lt;a href=&quot;#表的创建&quot; class=&quot;headerlink&quot; title=&quot;表的创建&quot;&gt;&lt;/a&gt;表的创建&lt;/h1&gt;&lt;p&gt;CREATE DATABASE fota;&lt;br&gt;use fota;&lt;/p&gt;

      
    
    </summary>
    
      <category term="需求实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/"/>
    
      <category term="Fota功能的实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/Fota%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>备份</title>
    <link href="https://ifonly.me/2018/12/13/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/bei-fen/"/>
    <id>https://ifonly.me/2018/12/13/xu-qiu-shi-xian/fota-gong-neng-de-shi-xian/bei-fen/</id>
    <published>2018-12-13T07:56:45.220Z</published>
    <updated>2018-12-13T07:55:30.293Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e1=&gt;end: 其他问题</span><br><span class="line">e2=&gt;end: 分区问题</span><br><span class="line">e3=&gt;end: 其他问题</span><br><span class="line">op1=&gt;operation: 恢复出厂设置</span><br><span class="line">cond1=&gt;condition: 可以开机？</span><br><span class="line">op2=&gt;operation: 写入大量数据</span><br><span class="line">cond2=&gt;condition: 能否复现?</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;cond1-&gt;op2-&gt;cond2</span><br><span class="line">cond1(yes)-&gt;op2</span><br><span class="line">cond1(no)-&gt;e1</span><br><span class="line">cond2(yes)-&gt;e2</span><br><span class="line">cond2(no)-&gt;e3</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 序列图(示例)</span><br><span class="line">participant A</span><br><span class="line">participant B</span><br><span class="line">participant C</span><br><span class="line"></span><br><span class="line">note left of A: A左侧说明</span><br><span class="line">note over B: 覆盖B的说明</span><br><span class="line">note right of C: C右侧说明</span><br><span class="line"></span><br><span class="line">A-&gt;A:自己到自己</span><br><span class="line">A-&gt;B:实线实箭头</span><br><span class="line">A--&gt;C:虚线实箭头</span><br><span class="line">B-&gt;&gt;C:实线虚箭头</span><br><span class="line">B--&gt;&gt;A:虚线虚箭头</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: Fota序列图</span><br><span class="line">participant Device</span><br><span class="line">participant Device Manager</span><br><span class="line">participant 业务逻辑</span><br><span class="line">participant 数据库</span><br><span class="line"></span><br><span class="line">note left of Device: 手机端</span><br><span class="line">note over Device Manager: Web服务端</span><br><span class="line">note right of C: C右侧说明</span><br><span class="line"></span><br><span class="line">Device-&gt;Device:自己到自己</span><br><span class="line">Device-&gt;Device Manager:实线实箭头</span><br><span class="line">Device--&gt;C:虚线实箭头</span><br><span class="line">Device Manager-&gt;&gt;C:实线虚箭头</span><br><span class="line">Device Manager--&gt;&gt;Device:虚线虚箭头</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;st=&amp;gt;start: 开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e1=&amp;gt;end
      
    
    </summary>
    
      <category term="需求实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/"/>
    
      <category term="Fota功能的实现" scheme="https://ifonly.me/categories/%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0/Fota%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Whatsapp 来电启动慢的问题</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/whatsapp-lai-dian-qi-dong-man-de-wen-ti/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/whatsapp-lai-dian-qi-dong-man-de-wen-ti/</id>
    <published>2018-12-13T07:54:25.221Z</published>
    <updated>2018-12-13T07:41:48.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h1><ul><li>手机按POWER_OFF之后,被Whatsapp呼入,唤醒手机的时间长达10-40秒,目前有疑问:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/whatsapp_wechat_log_videos/hipadLogs/logs/adb$ grep -ri &apos;Displayed com.whatsapp\|setPowerMode\|Set power mode=\|setTransactionState timed out waiting for previous animation frame&apos; main_log_20180329_100741.log</span><br><span class="line">03-29 10:06:35.996 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:06:35.997 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:06:36.388 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:07:08.331 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:07:08.331 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:07:08.660 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:07:42.621 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:07:42.622 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:07:43.008 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:07:43.013 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 392ms</span><br><span class="line">03-29 10:07:49.282 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:07:49.282 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:07:49.487 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:07:49.494 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 211ms</span><br><span class="line">03-29 10:07:49.711 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:07:49.713 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:07:50.088 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:07:50.088 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 377ms</span><br><span class="line">03-29 10:07:50.256 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s390ms (total +1s400ms)</span><br><span class="line">03-29 10:07:50.308 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:07:50.308 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:07:50.656 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:07:50.657 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 349ms</span><br><span class="line">03-29 10:07:56.754 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:07:56.760 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:07:57.144 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:07:57.144 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 393ms</span><br><span class="line">03-29 10:08:01.174 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:01.174 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:08:01.373 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:08:01.374 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 199ms</span><br><span class="line">03-29 10:08:01.400 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:01.483 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:08:01.848 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:08:01.849 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 448ms</span><br><span class="line">03-29 10:08:02.151 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s286ms (total +1s297ms)</span><br><span class="line">03-29 10:08:02.200 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:02.200 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:08:02.548 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:08:02.554 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 353ms</span><br><span class="line">03-29 10:08:08.811 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:08.820 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:08:09.202 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:08:09.206 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 395ms</span><br><span class="line">03-29 10:08:12.920 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:12.920 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:08:13.120 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:08:13.122 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 203ms</span><br><span class="line">03-29 10:08:13.283 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:13.286 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:08:13.668 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:08:13.668 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 385ms</span><br><span class="line">03-29 10:08:13.719 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s112ms (total +1s125ms)</span><br><span class="line">03-29 10:08:13.800 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:13.800 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:08:14.229 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:08:14.231 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 431ms</span><br><span class="line">03-29 10:08:33.799 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:08:33.807 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:08:34.219 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:08:34.220 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 428ms</span><br><span class="line">03-29 10:09:30.210 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:30.210 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:09:30.420 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:09:30.423 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 213ms</span><br><span class="line">03-29 10:09:31.580 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:31.583 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:09:32.004 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:09:32.006 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 425ms</span><br><span class="line">03-29 10:09:32.051 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s687ms (total +1s707ms)</span><br><span class="line">03-29 10:09:32.133 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:32.133 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:09:32.528 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:09:32.529 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 396ms</span><br><span class="line">03-29 10:09:39.985 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:39.985 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:09:40.407 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:09:40.408 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 423ms</span><br><span class="line">03-29 10:09:46.933 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:46.933 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:09:47.138 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:09:47.141 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 210ms</span><br><span class="line">03-29 10:09:47.253 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:47.257 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:09:47.623 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:09:47.624 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 384ms</span><br><span class="line">03-29 10:09:48.046 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s495ms (total +1s507ms)</span><br><span class="line">03-29 10:09:48.113 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:48.113 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:09:48.482 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:09:48.491 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 378ms</span><br><span class="line">03-29 10:09:58.077 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:09:58.084 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:09:58.463 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:09:58.463 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 387ms</span><br><span class="line">03-29 10:10:04.380 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +700ms (total +713ms)</span><br><span class="line">03-29 10:10:04.445 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:10:04.445 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:10:04.786 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:10:04.786 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 342ms</span><br><span class="line">03-29 10:11:32.899 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:11:32.909 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:11:33.286 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:11:33.290 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 391ms</span><br><span class="line">03-29 10:11:46.826 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:11:46.826 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:11:47.024 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:11:47.025 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 199ms</span><br><span class="line">03-29 10:11:47.140 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:11:47.141 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:11:47.508 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:11:47.509 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 418ms</span><br><span class="line">03-29 10:11:47.841 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s353ms (total +1s365ms)</span><br><span class="line">03-29 10:11:47.912 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:11:47.912 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:11:48.243 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:11:48.243 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 332ms</span><br><span class="line">03-29 10:11:54.559 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:11:54.561 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:11:54.944 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:11:54.947 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 393ms</span><br><span class="line">03-29 10:12:00.247 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:00.248 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:12:00.447 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:12:00.448 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 201ms</span><br><span class="line">03-29 10:12:00.604 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:00.607 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:12:00.989 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:12:00.989 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 389ms</span><br><span class="line">03-29 10:12:01.057 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s110ms (total +1s123ms)</span><br><span class="line">03-29 10:12:01.120 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:01.120 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:12:01.459 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:12:01.461 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 342ms</span><br><span class="line">03-29 10:12:07.794 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:07.799 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:12:08.182 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:12:08.183 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 389ms</span><br><span class="line">03-29 10:12:11.794 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:11.794 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:12:11.995 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:12:11.996 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 202ms</span><br><span class="line">03-29 10:12:12.120 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:12.121 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:12:12.497 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:12:12.498 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 434ms</span><br><span class="line">03-29 10:12:12.578 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s79ms (total +1s91ms)</span><br><span class="line">03-29 10:12:12.650 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:12.650 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:12:12.991 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:12:12.992 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 342ms</span><br><span class="line">03-29 10:12:19.242 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:19.242 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:12:19.625 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:12:19.627 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 392ms</span><br><span class="line">03-29 10:12:23.276 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +651ms (total +661ms)</span><br><span class="line">03-29 10:12:23.354 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:23.354 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:12:23.710 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:12:23.710 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 356ms</span><br><span class="line">03-29 10:12:31.077 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:31.086 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:12:31.493 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:12:31.498 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 422ms</span><br><span class="line">03-29 10:12:35.282 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:35.282 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:12:35.480 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:12:35.482 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 200ms</span><br><span class="line">03-29 10:12:35.628 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:35.637 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:12:36.014 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:12:36.014 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 386ms</span><br><span class="line">03-29 10:12:36.081 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +1s119ms (total +1s135ms)</span><br><span class="line">03-29 10:12:36.168 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:12:36.168 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:12:36.495 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:12:36.497 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 329ms</span><br><span class="line">03-29 10:13:13.554 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:13:13.569 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:13:13.947 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:13:13.952 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 399ms</span><br><span class="line">03-29 10:13:29.979 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:13:29.979 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:13:30.179 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:13:30.187 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 207ms</span><br><span class="line">03-29 10:13:30.312 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:13:30.315 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:13:35.332 W/SurfaceFlinger(  307): setTransactionState timed out waiting for previous animation frame</span><br><span class="line">03-29 10:13:39.744 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:13:39.746 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 9437ms</span><br><span class="line">03-29 10:13:39.882 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +10s199ms (total +45s962ms)</span><br><span class="line">03-29 10:13:39.962 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:13:39.962 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:13:40.284 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:13:40.285 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 323ms</span><br><span class="line">03-29 10:13:47.661 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:13:47.662 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:13:48.075 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:13:48.079 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 430ms</span><br><span class="line">03-29 10:14:02.664 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:02.664 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:14:02.870 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:14:02.871 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 207ms</span><br><span class="line">03-29 10:14:03.055 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:03.056 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:14:08.221 W/SurfaceFlinger(  307): setTransactionState timed out waiting for previous animation frame</span><br><span class="line">03-29 10:14:12.477 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:14:12.478 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 9423ms</span><br><span class="line">03-29 10:14:12.571 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +10s214ms (total +10s221ms)</span><br><span class="line">03-29 10:14:12.630 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:12.630 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:14:12.960 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:14:12.961 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 330ms</span><br><span class="line">03-29 10:14:27.596 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:27.610 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:14:28.000 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:14:28.000 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 404ms</span><br><span class="line">03-29 10:14:32.253 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:32.253 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:14:32.451 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:14:32.457 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 204ms</span><br><span class="line">03-29 10:14:32.577 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:32.577 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:14:37.500 W/SurfaceFlinger(  307): setTransactionState timed out waiting for previous animation frame</span><br><span class="line">03-29 10:14:41.984 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:14:41.987 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 9463ms</span><br><span class="line">03-29 10:14:42.113 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +10s248ms (total +10s272ms)</span><br><span class="line">03-29 10:14:42.166 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:42.166 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:14:42.509 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:14:42.511 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 345ms</span><br><span class="line">03-29 10:14:49.404 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:49.413 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:14:49.788 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:14:49.791 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 387ms</span><br><span class="line">03-29 10:14:53.201 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:53.201 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:14:53.403 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:14:53.406 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 205ms</span><br><span class="line">03-29 10:14:53.517 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:14:53.517 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:14:58.453 W/SurfaceFlinger(  307): setTransactionState timed out waiting for previous animation frame</span><br><span class="line">03-29 10:15:03.002 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:15:03.019 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 9544ms</span><br><span class="line">03-29 10:15:03.109 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +10s211ms (total +10s222ms)</span><br><span class="line">03-29 10:15:03.182 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:03.182 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:15:03.525 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:15:03.526 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 344ms</span><br><span class="line">03-29 10:15:12.194 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:12.195 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:15:12.586 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:15:12.591 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 397ms</span><br><span class="line">03-29 10:15:25.813 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:25.813 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:15:26.015 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:15:26.017 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 203ms</span><br><span class="line">03-29 10:15:26.137 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:26.141 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:15:31.126 W/SurfaceFlinger(  307): setTransactionState timed out waiting for previous animation frame</span><br><span class="line">03-29 10:15:35.554 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:15:35.555 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 9458ms</span><br><span class="line">03-29 10:15:35.634 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +10s121ms (total +10s135ms)</span><br><span class="line">03-29 10:15:35.734 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:35.734 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:15:36.073 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:15:36.073 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 343ms</span><br><span class="line">03-29 10:15:44.412 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:44.416 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:15:44.797 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:15:44.800 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 402ms</span><br><span class="line">03-29 10:15:59.235 D/SurfaceFlinger(  307): Set power mode=1, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:59.235 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 1 on display: 0</span><br><span class="line">03-29 10:15:59.435 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 1 on display 0</span><br><span class="line">03-29 10:15:59.436 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 201ms</span><br><span class="line">03-29 10:15:59.557 D/SurfaceFlinger(  307): Set power mode=0, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:15:59.557 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 0 on display: 0</span><br><span class="line">03-29 10:16:04.485 W/SurfaceFlinger(  307): setTransactionState timed out waiting for previous animation frame</span><br><span class="line">03-29 10:16:08.985 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 0 on display 0</span><br><span class="line">03-29 10:16:08.987 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 9478ms</span><br><span class="line">03-29 10:16:09.346 I/ActivityManager( 2374): Displayed com.whatsapp/.voipcalling.VoipActivityV2: +10s422ms (total +10s429ms)</span><br><span class="line">03-29 10:16:09.403 D/SurfaceFlinger(  307): Set power mode=2, type=0 flinger=0xacaa8000</span><br><span class="line">03-29 10:16:09.403 D/qdhwcomposer(  307): hwc_setPowerMode: Setting mode 2 on display: 0</span><br><span class="line">03-29 10:16:09.770 D/qdhwcomposer(  307): hwc_setPowerMode: Done setting mode 2 on display 0</span><br><span class="line">03-29 10:16:09.772 D/SurfaceControl( 2374): Excessive delay in setPowerMode(): 369ms</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;现象描述&quot;&gt;&lt;a href=&quot;#现象描述&quot; class=&quot;headerlink&quot; title=&quot;现象描述&quot;&gt;&lt;/a&gt;现象描述&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;手机按POWER_OFF之后,被Whatsapp呼入,唤醒手机的时间长达10-40秒,目前有疑问:&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>手机反应速度变慢</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/shou-ji-fan-ying-ji-su-bian-man/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/shou-ji-fan-ying-ji-su-bian-man/</id>
    <published>2018-12-13T07:54:16.437Z</published>
    <updated>2018-12-13T07:50:30.490Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初步分析"><a href="#初步分析" class="headerlink" title="初步分析"></a>初步分析</h1><ul><li>首先怀疑是CPU暂用率过高导致的</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell dumpsys cpuinfo</span><br></pre></td></tr></table></figure><p><img src="amWiki/images/device_been_to_slowly01.png" alt="device_been_to_slowly01" title="device_been_to_slowly01"></p><p>感觉不像是CPU过高导致的,感觉像是IO  </p><ul><li>其次怀疑是IO导致的</li></ul><p>所以用iotop来看,一些问题.  </p><p>查看PID,明显是百度地图:<br><img src="amWiki/images/device_been_to_slowly02.png" alt="device_been_to_slowly02" title="device_been_to_slowly02"></p><p>但是,目前没有查询到 到底是哪个线程读写哪个设备???<br>待查….</p><ul><li>systrace 查看问题  </li></ul><p><img src="amWiki/images/device_been_to_slowly03.png" alt="device_been_to_slowly03" title="device_been_to_slowly03"></p><p><img src="amWiki/images/device_been_to_slowly04.png" alt="device_been_to_slowly04" title="device_been_to_slowly04"></p><p>目前来看感觉像是一个死循环  </p><p>APP层的Trace 源头 Choreographer#doFrame  </p><p><img src="amWiki/images/device_been_to_slowly05.png" alt="device_been_to_slowly05" title="device_been_to_slowly05"></p><p>代码在Choreographer.java里面,所以,先假设是View控件出现了问题,可以用git 来查看相关文件的修改.  </p><p><img src="amWiki/images/device_been_to_slowly06.png" alt="device_been_to_slowly06" title="device_been_to_slowly06"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitk core/java/android/view/</span><br></pre></td></tr></table></figure><p>发现一个问题<br><img src="amWiki/images/device_been_to_slowly07.png" alt="device_been_to_slowly07" title="device_been_to_slowly07"></p><p>关键字: ThreadedRender.java 这个比较敏感.</p><p>而且,函数里面有返回一个false. 猜测可能是返回false导致的一个死循环.</p><p>其中关键字:<br>persist.sys.force_sw_gles</p><p>查找这个关键字,相关的地方,并且做一个开关控制.</p><p>后面待续…</p><h1 id="top-分析"><a href="#top-分析" class="headerlink" title="top 分析"></a>top 分析</h1><p>kswap 和 mmcqd 占比过高<br> 91 root         20   0    0    0    0 S 30.0   0.0   6:58.13 [kswapd0]<br> 232 root         20   0    0    0    0 S 16.6   0.0   4:24.71 [mmcqd/0]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;初步分析&quot;&gt;&lt;a href=&quot;#初步分析&quot; class=&quot;headerlink&quot; title=&quot;初步分析&quot;&gt;&lt;/a&gt;初步分析&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;首先怀疑是CPU暂用率过高导致的&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>Diag 口慢的问题</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/diag-kou-man-de-wen-ti/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/diag-kou-man-de-wen-ti/</id>
    <published>2018-12-13T07:54:10.869Z</published>
    <updated>2018-12-13T07:50:58.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Diag-口慢的问题"><a href="#Diag-口慢的问题" class="headerlink" title="Diag 口慢的问题"></a>Diag 口慢的问题</h1><h2 id="1-去除earlyprintk"><a href="#1-去除earlyprintk" class="headerlink" title="1. 去除earlyprintk"></a>1. 去除earlyprintk</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">androidboot.bootdevice=7824900.sdhci lpm_levels.sleep_disabled=1 earlyprintk</span><br><span class="line">BOARD_KERNEL_CMDLINE := g_android.luns=1 g_android.removable=1 g_android.cdrom=1 console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 androidboot.hardware=qcom msm_rtb.filter=0x237 ehci-hcd.park=3 androidboot.bootdevice=7824900.sdhci lpm_levels.sleep_disabled=1 earlyprintk</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h2 id="2-重新设置KERNEL-DEFCONFIG"><a href="#2-重新设置KERNEL-DEFCONFIG" class="headerlink" title="2. 重新设置KERNEL_DEFCONFIG"></a>2. 重新设置KERNEL_DEFCONFIG</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">KERNEL_DEFCONFIG := msm8909_defconfig</span><br></pre></td></tr></table></figure><p>主要是串口LOG没有关:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CONFIG_SERIAL_MSM_HS=y</span><br><span class="line">CONFIG_SERIAL_MSM_HSL=y</span><br><span class="line">CONFIG_SERIAL_MSM_HSL_CONSOLE=y</span><br></pre></td></tr></table></figure></p><h2 id="3-LK启动异常"><a href="#3-LK启动异常" class="headerlink" title="3. LK启动异常"></a>3. LK启动异常</h2><p>adb shell cat /proc/morelog<br>信息显示LK比对比样机要慢 2 秒左右.</p><h2 id="4-屏蔽了写Property的LOG"><a href="#4-屏蔽了写Property的LOG" class="headerlink" title="4. 屏蔽了写Property的LOG."></a>4. 屏蔽了写Property的LOG.</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// Don&apos;t write properties to disk until after we have read all default</span><br><span class="line">// properties to prevent them from being overwritten by default values.</span><br><span class="line">//LOG(ERROR) &lt;&lt; &quot;write_persistent_property: &quot; &lt;&lt; name &lt;&lt; &quot;,value : &quot; &lt;&lt; value;</span><br><span class="line">//modify by weibiao@hipad.com PR165777</span><br><span class="line">if (persistent_properties_loaded &amp;&amp; (android::base::StartsWith(name, &quot;persist.&quot;) </span><br><span class="line">    || android::base::StartsWith(name, &quot;ro.com.google.clientidbase&quot;))) &#123;</span><br><span class="line">    write_persistent_property(name.c_str(), value.c_str());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Diag-口慢的问题&quot;&gt;&lt;a href=&quot;#Diag-口慢的问题&quot; class=&quot;headerlink&quot; title=&quot;Diag 口慢的问题&quot;&gt;&lt;/a&gt;Diag 口慢的问题&lt;/h1&gt;&lt;h2 id=&quot;1-去除earlyprintk&quot;&gt;&lt;a href=&quot;#1-去除ea
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>闪屏分析</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/shan-ping-fen-xi/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/shan-ping-fen-xi/</id>
    <published>2018-12-13T07:54:06.189Z</published>
    <updated>2018-12-13T07:53:12.405Z</updated>
    
    <content type="html"><![CDATA[<h2 id="闪屏和不闪屏的区别"><a href="#闪屏和不闪屏的区别" class="headerlink" title="闪屏和不闪屏的区别"></a>闪屏和不闪屏的区别</h2><p>闪屏有两个 animation</p><p>而不闪屏的只有一个(设置同时设置lock screen和home screen的background image)</p><p>不闪屏的:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01-02 02:39:03.159   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,9.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:39:03.173   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,247.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:39:03.229   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,484.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:39:03.242   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,577.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:39:03.254   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,669.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:39:03.268   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,771.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:39:03.285   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,879.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:39:03.302   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,939.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">android@NSGWD180021:/data/workspace/issueAnalysis/systemui/0614$ </span><br><span class="line">android@NSGWD180021:/data/workspace/issueAnalysis/systemui/0614$ </span><br><span class="line">android@NSGWD180021:/data/workspace/issueAnalysis/systemui/0614$ </span><br><span class="line">android@NSGWD180021:/data/workspace/issueAnalysis/systemui/0614$ </span><br><span class="line">android@NSGWD180021:/data/workspace/issueAnalysis/systemui/0614$</span><br></pre></td></tr></table></figure></p><p>闪屏的:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/issueAnalysis/systemui/0614$ grep -i &apos;SURFACE POS&apos; main003_bad.log </span><br><span class="line">01-02 02:16:53.380   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,9.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 02:16:53.388   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,9.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:16:53.400   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,322.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 02:16:53.408   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,322.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:16:53.470   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,616.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 02:16:53.475   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,616.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:16:53.539   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,777.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 02:16:53.543   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,777.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:16:53.617   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,939.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 02:16:53.622   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,939.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 02:16:53.727   752  3074 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,0.0): com.android.systemui.ImageWallpaper</span><br></pre></td></tr></table></figure></p><h1 id="这里调用动画"><a href="#这里调用动画" class="headerlink" title="这里调用动画"></a>这里调用动画</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01-02 03:41:37.199   745  3054 W jackywei: at com.android.server.wm.WindowContainer.forAllWindows(WindowContainer.java:633)</span><br><span class="line">01-02 03:41:37.199   745  3054 W jackywei: at com.android.server.wm.DisplayContent.prepareWindowSurfaces(DisplayContent.java:2637)</span><br><span class="line">01-02 03:41:37.199   745  3054 W jackywei: at com.android.server.wm.WindowAnimator.animate(WindowAnimator.java:208)</span><br></pre></td></tr></table></figure><h1 id="差异LOG-闪屏的-SURFACE-POS-被执行了两次"><a href="#差异LOG-闪屏的-SURFACE-POS-被执行了两次" class="headerlink" title="差异LOG: 闪屏的 SURFACE POS 被执行了两次"></a>差异LOG: 闪屏的 SURFACE POS 被执行了两次</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01-02 08:12:43.067   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.068   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,9.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 08:12:43.070   932  3088 W jackywei: this = Surface(name=com.android.systemui.ImageWallpaper),mSurfaceControl = Surface(name=com.android.systemui.ImageWallpaper),hashCode = 129717571</span><br><span class="line">01-02 08:12:43.074   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;9291c89 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 153689225</span><br><span class="line">01-02 08:12:43.075   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,9.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:12:43.078   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 8255557</span><br><span class="line">01-02 08:12:43.087   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.128   932  3088 W jackywei: mCurrentTime = 177639,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.131   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.132   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,369.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 08:12:43.135   932  3088 W jackywei: this = Surface(name=com.android.systemui.ImageWallpaper),mSurfaceControl = Surface(name=com.android.systemui.ImageWallpaper),hashCode = 129717571</span><br><span class="line">01-02 08:12:43.137   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;9291c89 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 153689225</span><br><span class="line">01-02 08:12:43.139   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,369.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:12:43.141   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 8255557</span><br><span class="line">01-02 08:12:43.145   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.164   932  3088 W jackywei: mCurrentTime = 177689,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.167   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.167   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,633.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 08:12:43.169   932  3088 W jackywei: this = Surface(name=com.android.systemui.ImageWallpaper),mSurfaceControl = Surface(name=com.android.systemui.ImageWallpaper),hashCode = 129717571</span><br><span class="line">01-02 08:12:43.171   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;9291c89 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 153689225</span><br><span class="line">01-02 08:12:43.173   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,633.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:12:43.175   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 8255557</span><br><span class="line">01-02 08:12:43.179   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.328   932  3088 W jackywei: mCurrentTime = 177722,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.332   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.332   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,834.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 08:12:43.334   932  3088 W jackywei: this = Surface(name=com.android.systemui.ImageWallpaper),mSurfaceControl = Surface(name=com.android.systemui.ImageWallpaper),hashCode = 129717571</span><br><span class="line">01-02 08:12:43.336   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;9291c89 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 153689225</span><br><span class="line">01-02 08:12:43.337   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,834.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:12:43.340   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 8255557</span><br><span class="line">01-02 08:12:43.345   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.360   932  3088 W jackywei: mCurrentTime = 177889,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.364   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.365   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,939.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 08:12:43.367   932  3088 W jackywei: this = Surface(name=com.android.systemui.ImageWallpaper),mSurfaceControl = Surface(name=com.android.systemui.ImageWallpaper),hashCode = 129717571</span><br><span class="line">01-02 08:12:43.371   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;9291c89 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 153689225</span><br><span class="line">01-02 08:12:43.372   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,939.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:12:43.374   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 8255557</span><br><span class="line">01-02 08:12:43.379   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.412   932  3088 W jackywei: mCurrentTime = 177922,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.415   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.420   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;9291c89 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 153689225</span><br><span class="line">01-02 08:12:43.427   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.476   932  3088 W jackywei: mCurrentTime = 177972,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.521   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,0.0): com.android.systemui.ImageWallpaper</span><br><span class="line">01-02 08:12:43.524   932  3088 W jackywei: this = Surface(name=com.android.systemui.ImageWallpaper),mSurfaceControl = Surface(name=com.android.systemui.ImageWallpaper),hashCode = 129717571</span><br><span class="line">01-02 08:12:43.539   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.545   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.560   932  3088 W jackywei: mCurrentTime = 178089,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.563   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.570   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:12:43.631   932  3088 W jackywei: mCurrentTime = 178172,hashCode = 210511779</span><br><span class="line">01-02 08:12:43.634   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:12:43.641   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br></pre></td></tr></table></figure><h1 id="差异LOG-闪屏的-SURFACE-POS只执行了一次"><a href="#差异LOG-闪屏的-SURFACE-POS只执行了一次" class="headerlink" title="差异LOG: 闪屏的 SURFACE POS只执行了一次"></a>差异LOG: 闪屏的 SURFACE POS只执行了一次</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01-02 08:11:36.840   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,9.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:11:36.843   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 29961845</span><br><span class="line">01-02 08:11:36.847   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:11:36.852   932  3088 W jackywei: mCurrentTime = 111399,hashCode = 210511779</span><br><span class="line">01-02 08:11:36.855   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:11:36.857   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;5886ab2 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 92826290</span><br><span class="line">01-02 08:11:36.858   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,403.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:11:36.861   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 29961845</span><br><span class="line">01-02 08:11:36.866   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:11:36.935   932  3088 W jackywei: mCurrentTime = 111432,hashCode = 210511779</span><br><span class="line">01-02 08:11:36.938   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:11:36.940   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;5886ab2 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 92826290</span><br><span class="line">01-02 08:11:36.941   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,577.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:11:36.943   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 29961845</span><br><span class="line">01-02 08:11:36.946   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;68cbced StatusBar&#125;, recoveringMemory = true,hashCode = 109886701</span><br><span class="line">01-02 08:11:36.956   932  3088 W jackywei: mCurrentTime = 111499,hashCode = 210511779</span><br><span class="line">01-02 08:11:36.959   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;8cb7a54 com.android.systemui.ImageWallpaper&#125;, recoveringMemory = true,hashCode = 147552852</span><br><span class="line">01-02 08:11:36.960   932  3088 W jackywei: setSurfaceBoundariesLocked this = WindowStateAnimator&#123;5886ab2 com.android.phone/com.android.phone.EmergencyDialer&#125;, recoveringMemory = true,hashCode = 92826290</span><br><span class="line">01-02 08:11:36.961   932  3088 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,939.0): com.android.phone/com.android.phone.EmergencyDialer</span><br><span class="line">01-02 08:11:36.963   932  3088 W jackywei: this = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),mSurfaceControl = Surface(name=com.android.phone/com.android.phone.EmergencyDialer),hashCode = 29961845</span><br></pre></td></tr></table></figure><h1 id="这一段很重要"><a href="#这一段很重要" class="headerlink" title="这一段很重要:"></a>这一段很重要:</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01-02 09:08:37.871   924  3080 W jackywei: at com.android.server.wm.WindowState.forAllWindows(WindowState.java:4035)</span><br><span class="line">01-02 09:08:37.871   924  3080 W jackywei: at com.android.server.wm.WindowContainer.forAllWindows(WindowContainer.java:623)</span><br><span class="line">01-02 09:08:37.871   924  3080 W jackywei: at com.android.server.wm.WindowContainer.forAllWindows(WindowContainer.java:623)</span><br><span class="line">01-02 09:08:37.871   924  3080 W jackywei: at com.android.server.wm.DisplayContent.forAllWindows(DisplayContent.java:1546)</span><br><span class="line">01-02 09:08:37.871   924  3080 W jackywei: at com.android.server.wm.WindowContainer.forAllWindows(WindowContainer.java:636)</span><br><span class="line">01-02 09:08:37.871   924  3080 W jackywei: at com.android.server.wm.DisplayContent.prepareWindowSurfaces(DisplayContent.java:2637)</span><br><span class="line">01-02 09:08:37.871   924  3080 W jackywei: at com.android.server.wm.WindowAnimator.animate(WindowAnimator.java:208)</span><br></pre></td></tr></table></figure><h1 id="不闪屏时"><a href="#不闪屏时" class="headerlink" title="不闪屏时:"></a>不闪屏时:</h1><p>mTmpSize.set : w.mShownPosition.x = 0,w.mShownPosition.y = 9 这里的这个Y的值是不会变的mShownPosition.y 一直都是0</p><p>WP target app xform: 这个LOG和上面的mShownPosition 有关系</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (wpAppAnimator != null &amp;&amp; wpAppAnimator.hasTransformation</span><br><span class="line">    &amp;&amp; wpAppAnimator.animation != null</span><br><span class="line">    &amp;&amp; !wpAppAnimator.animation.getDetachWallpaper()) &#123;</span><br><span class="line">appTransformation = wpAppAnimator.transformation;//jackywei</span><br><span class="line">if (DEBUG_WALLPAPER &amp;&amp; appTransformation != null) &#123;</span><br><span class="line">    Slog.v(TAG, &quot;WP target app xform: &quot; + appTransformation);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    android.util.Log.w(&quot;jackywei&quot;,&quot;this = &quot;+this.hashCode()+&quot;,WP target app xform: = null&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WP target app xform 和这个wpAppAnimator变量有关系</p><h1 id="可以Fix的代码"><a href="#可以Fix的代码" class="headerlink" title="可以Fix的代码"></a>可以Fix的代码</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void computeShownFrameLocked() &#123;</span><br><span class="line">    final boolean selfTransformation = mHasLocalTransformation;</span><br><span class="line">    Transformation attachedTransformation =</span><br><span class="line">            (mParentWinAnimator != null &amp;&amp; mParentWinAnimator.mHasLocalTransformation)</span><br><span class="line">            ? mParentWinAnimator.mTransformation : null;</span><br><span class="line">    Transformation appTransformation = (mAppAnimator != null &amp;&amp; mAppAnimator.hasTransformation)</span><br><span class="line">            ? mAppAnimator.transformation : null;</span><br><span class="line">    appTransformation = null; //jackywei is can fix the bug.这个代码可以解BUG,但是,不知道会引起其他什么问题.</span><br><span class="line">    // Wallpapers are animated based on the &quot;real&quot; window they</span><br><span class="line">    // are currently targeting.</span><br><span class="line">    final WindowState wallpaperTarget = mWallpaperControllerLocked.getWallpaperTarget();</span><br><span class="line">    android.util.Log.w(&quot;jackywei&quot;,&quot;this = &quot;+this.hashCode()+&quot;,wallpaperTarget= &quot;+wallpaperTarget+&quot;,mIsWallpaper = &quot;+mIsWallpaper);</span><br><span class="line">    android.util.Log.w(&quot;jackywei&quot;,&quot;this = &quot;+this.hashCode()+&quot;,mService.mAnimateWallpaperWithTarget= &quot;+mService.mAnimateWallpaperWithTarget);</span><br><span class="line">            wpAppAnimator.hasTransformation = false;//jackywei is can fix the bug.we must check where is the hasTransformation value from.这个代码可以解BUG,但是,不知道会引起其他什么问题.</span><br><span class="line">            if (wpAppAnimator != null &amp;&amp; wpAppAnimator.hasTransformation</span><br><span class="line">                &amp;&amp; wpAppAnimator.animation != null</span><br><span class="line">                &amp;&amp; !wpAppAnimator.animation.getDetachWallpaper()) &#123;</span><br><span class="line">            appTransformation = wpAppAnimator.transformation;//jackywei</span><br><span class="line">            if (DEBUG_WALLPAPER &amp;&amp; appTransformation != null) &#123;</span><br><span class="line">                Slog.v(TAG, &quot;WP target app xform: &quot; + appTransformation);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                android.util.Log.w(&quot;jackywei&quot;,&quot;this = &quot;+this.hashCode()+&quot;,WP target app xform: = null&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;闪屏和不闪屏的区别&quot;&gt;&lt;a href=&quot;#闪屏和不闪屏的区别&quot; class=&quot;headerlink&quot; title=&quot;闪屏和不闪屏的区别&quot;&gt;&lt;/a&gt;闪屏和不闪屏的区别&lt;/h2&gt;&lt;p&gt;闪屏有两个 animation&lt;/p&gt;
&lt;p&gt;而不闪屏的只有一个(设置同时设置loc
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>长时间使用之后手机变慢</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/chang-shi-jian-shi-yong-zhi-hou-shou-ji-fan-ying-bian-man/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/chang-shi-jian-shi-yong-zhi-hou-shou-ji-fan-ying-bian-man/</id>
    <published>2018-12-13T07:54:01.173Z</published>
    <updated>2018-12-13T07:52:00.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="长时间使用之后手机变慢"><a href="#长时间使用之后手机变慢" class="headerlink" title="长时间使用之后手机变慢"></a>长时间使用之后手机变慢</h1><h2 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述:"></a>现象描述:</h2><pre><code>长时间使用之后手机变慢</code></pre><h2 id="抓取java-traceview如下显示"><a href="#抓取java-traceview如下显示" class="headerlink" title="抓取java traceview如下显示:"></a>抓取java traceview如下显示:</h2><p><img src="amWiki/images/system_server_slowly01.png" alt="system_server_slowly01" title="system_server_slowly01"></p><h3 id="traceview显示是"><a href="#traceview显示是" class="headerlink" title="traceview显示是:"></a>traceview显示是:</h3><pre><code>WindowsContianer.forAllWindows()占了大量CPU时间.怀疑是anmimation相关的对象没有释放</code></pre><h3 id="用MAT抓取-hprof"><a href="#用MAT抓取-hprof" class="headerlink" title="用MAT抓取 hprof"></a>用MAT抓取 hprof</h3><p>有900个WindowStateAnimator对象</p><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap" class="headerlink" title="Class Name                               | Objects | Shallow Heap | Retained Heap"></a>Class Name                               | Objects | Shallow Heap | Retained Heap</h2><h2 id="com-android-server-wm-WindowStateAnimator-900-201-600-gt-490-432"><a href="#com-android-server-wm-WindowStateAnimator-900-201-600-gt-490-432" class="headerlink" title="com.android.server.wm.WindowStateAnimator|     900 |      201,600 |    &gt;= 490,432"></a>com.android.server.wm.WindowStateAnimator|     900 |      201,600 |    &gt;= 490,432</h2><p>被mTokenMap 引用780次</p><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap" class="headerlink" title="Class Name                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><h2 id="mTokenMap-java-util-HashMap-0x1340b950-780-40-174-720-30-080"><a href="#mTokenMap-java-util-HashMap-0x1340b950-780-40-174-720-30-080" class="headerlink" title="mTokenMap java.util.HashMap @ 0x1340b950|          780 |           40 |           174,720 |        30,080"></a>mTokenMap java.util.HashMap @ 0x1340b950|          780 |           40 |           174,720 |        30,080</h2><p>代码:<br>mTokenMap? 没有释放?</p><p>// Mapping from a token IBinder to a WindowToken object on this display.<br>private final HashMap&lt;IBinder, WindowToken&gt; mTokenMap = new HashMap();</p><pre><code>private void addWindowToken(IBinder binder, WindowToken token) {        xxxxx        xxxxx        if (token == null) {            throw new IllegalArgumentException(&quot;Can&apos;t map null token to display=&quot;                    + getName() + &quot; binder=&quot; + binder);        }        mTokenMap.put(binder, token);        xxxx        xxxx}WindowToken removeWindowToken(IBinder binder) {    final WindowToken token = mTokenMap.remove(binder);    if (token != null &amp;&amp; token.asAppWindowToken() == null) {        token.setExiting();    }    return token;}/** Changes the display the input window token is housed on to this one. */void reParentWindowToken(WindowToken token) {    final DisplayContent prevDc = token.getDisplayContent();    if (prevDc == this) {        return;    }    if (prevDc != null &amp;&amp; prevDc.mTokenMap.remove(token.token) != null            &amp;&amp; token.asAppWindowToken() == null) {        // Removed the token from the map, but made sure it&apos;s not an app token before removing        // from parent.        token.getParent().removeChild(token);    }    addWindowToken(token.token, token);}void removeAppToken(IBinder binder) {    final WindowToken token = removeWindowToken(binder);    if (token == null) {        Slog.w(TAG_WM, &quot;removeAppToken: Attempted to remove non-existing token: &quot; + binder);        return;    }    final AppWindowToken appToken = token.asAppWindowToken();    if (appToken == null) {        Slog.w(TAG_WM, &quot;Attempted to remove non-App token: &quot; + binder + &quot; token=&quot; + token);        return;    }    appToken.onRemovedFromDisplay();}</code></pre><hr><ol><li>调用:removeWindowToken的地方:<br>./DisplayContent.java: removeAppToken(IBinder binder) {<br>./DisplayContent.java:855:        final WindowToken token = removeWindowToken(binder);</li></ol><p>./WindowManagerService.java: public void removeWindowToken(IBinder binder, int displayId) {<br>./WindowManagerService.java:2496:                final WindowToken token = dc.removeWindowToken(binder);<br>./WindowManagerService.java:7530:        public void removeWindowToken(IBinder binder, boolean removeWindows, int displayId) {<br>./WindowManagerService.java:7540:                    final WindowToken token = dc.removeWindowToken(binder);<br>./WindowManagerService.java:7549:                WindowManagerService.this.removeWindowToken(binder, displayId);</p><p>./WindowToken.java:239:            mDisplayContent.removeWindowToken(token);</p><hr><ol start="2"><li>调用:removeAppToken 的地方:<br>./AppWindowContainerController.java:246:            dc.removeAppToken(mToken.asBinder());</li></ol><hr><p>从上述查看:<br>WindowToken 对象和<br>AppWindowContainerController对象</p><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-1"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-1" class="headerlink" title="Class Name                          | Objects | Shallow Heap | Retained Heap"></a>Class Name                          | Objects | Shallow Heap | Retained Heap</h2><h2 id="com-android-server-wm-AppWindowToken-905-181-000-gt-1-169-272"><a href="#com-android-server-wm-AppWindowToken-905-181-000-gt-1-169-272" class="headerlink" title="com.android.server.wm.AppWindowToken|     905 |      181,000 |  &gt;= 1,169,272"></a>com.android.server.wm.AppWindowToken|     905 |      181,000 |  &gt;= 1,169,272</h2><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-2"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-2" class="headerlink" title="Class Name                                        | Objects | Shallow Heap | Retained Heap"></a>Class Name                                        | Objects | Shallow Heap | Retained Heap</h2><h2 id="com-android-server-wm-AppWindowContainerController-904-43-392-gt-116-032"><a href="#com-android-server-wm-AppWindowContainerController-904-43-392-gt-116-032" class="headerlink" title="com.android.server.wm.AppWindowContainerController|     904 |       43,392 |    &gt;= 116,032"></a>com.android.server.wm.AppWindowContainerController|     904 |       43,392 |    &gt;= 116,032</h2><p>都是没有释放的.</p><hr><h3 id="分析WindowStateAnimator-的释放过程-找出不释放的原因"><a href="#分析WindowStateAnimator-的释放过程-找出不释放的原因" class="headerlink" title="分析WindowStateAnimator 的释放过程,找出不释放的原因"></a>分析WindowStateAnimator 的释放过程,找出不释放的原因</h3><p>加上LOG:</p><pre><code>WindowToken removeWindowToken(IBinder binder) {    android.util.Log.w(&quot;jackywei&quot;,&quot;removeWindowToken&quot;);    android.util.Log.w(&quot;jackywei&quot;,android.util.Log.getStackTraceString(new Throwable()));    android.util.Log.w(&quot;jackywei&quot;,&quot;++++++++++++++++++++removeWindowToken++++++++++++++++++++&quot;);    final WindowToken token = mTokenMap.remove(binder);    if (token != null &amp;&amp; token.asAppWindowToken() == null) {        token.setExiting();    }    return token;}</code></pre><p>应用died的时候会主动释放:</p><p>01-02 12:44:01.223   746  1581 W jackywei: removeWindowToken<br>01-02 12:44:01.225   746  1581 W jackywei: java.lang.Throwable<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeWindowToken(DisplayContent.java:832)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeAppToken(DisplayContent.java:858)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.AppWindowContainerController.removeContainer(AppWindowContainerController.java:246)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityRecord.removeWindowContainer(ActivityRecord.java:1001)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4169)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeHistoryRecordsForAppLocked(ActivityStack.java:4544)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.handleAppDiedLocked(ActivityStack.java:5095)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStackSupervisor.handleAppDiedLocked(ActivityStackSupervisor.java:2008)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.handleAppDiedLocked(ActivityManagerService.java:5413)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.appDiedLocked(ActivityManagerService.java:5594)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService$AppDeathRecipient.binderDied(ActivityManagerService.java:1641)<br>01-02 12:44:01.225   746  1581 W jackywei:     at android.os.BinderProxy.sendDeathNotice(Binder.java:844)<br>01-02 12:44:01.226   746  1581 W jackywei: ++++++++++++++++++++removeWindowToken++++++++++++++++++++<br>01-02 12:44:01.227   746  1581 W jackywei: removeWindowToken<br>01-02 12:44:01.228   746  1581 W jackywei: java.lang.Throwable<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeWindowToken(DisplayContent.java:832)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.WindowToken.removeImmediately(WindowToken.java:239)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.removeImmediately(AppWindowToken.java:528)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.removeIfPossible(AppWindowToken.java:535)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.onRemovedFromDisplay(AppWindowToken.java:601)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeAppToken(DisplayContent.java:871)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowContainerController.removeContainer(AppWindowContainerController.java:246)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityRecord.removeWindowContainer(ActivityRecord.java:1001)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4169)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeHistoryRecordsForAppLocked(ActivityStack.java:4544)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.handleAppDiedLocked(ActivityStack.java:5095)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStackSupervisor.handleAppDiedLocked(ActivityStackSupervisor.java:2008)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.handleAppDiedLocked(ActivityManagerService.java:5413)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.appDiedLocked(ActivityManagerService.java:5594)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService$AppDeathRecipient.binderDied(ActivityManagerService.java:1641)<br>01-02 12:44:01.228   746  1581 W jackywei:     at android.os.BinderProxy.sendDeathNotice(Binder.java:844)<br>01-02 12:44:01.228   746  1581 W jackywei: ++++++++++++++++++++removeWindowToken++++++++++++++++++++</p><p>如果应用没有退出,会一直有?</p><h2 id="Class-Name-Shallow-Heap-Retained-Heap"><a href="#Class-Name-Shallow-Heap-Retained-Heap" class="headerlink" title="Class Name                                                                | Shallow Heap | Retained Heap"></a>Class Name                                                                | Shallow Heap | Retained Heap</h2><h2 id="com-android-server-wm-WindowState-DeathRecipient-0x133e3d40-Native-Stack-16-16"><a href="#com-android-server-wm-WindowState-DeathRecipient-0x133e3d40-Native-Stack-16-16" class="headerlink" title="com.android.server.wm.WindowState$DeathRecipient @ 0x133e3d40 Native Stack|           16 |            16"></a>com.android.server.wm.WindowState$DeathRecipient @ 0x133e3d40 Native Stack|           16 |            16</h2><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-3"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-3" class="headerlink" title="Class Name                                      | Objects | Shallow Heap | Retained Heap"></a>Class Name                                      | Objects | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState               |     900 |      396,000 |  &gt;= 2,334,112<br>com.android.server.wm.WindowStateAnimator       |     900 |      201,600 |    &gt;= 490,432<br>com.android.server.wm.WindowState$WindowId      |     900 |       28,800 |     &gt;= 50,800</p><h2 id="com-android-server-wm-WindowState-DeathRecipient-900-14-400-gt-14-632"><a href="#com-android-server-wm-WindowState-DeathRecipient-900-14-400-gt-14-632" class="headerlink" title="com.android.server.wm.WindowState$DeathRecipient|     900 |       14,400 |     &gt;= 14,632"></a>com.android.server.wm.WindowState$DeathRecipient|     900 |       14,400 |     &gt;= 14,632</h2><p>下面某个应用:</p><pre><code>129,325K: Persistent     71,069K: com.android.systemui (pid 3694 / activities)     23,604K: com.android.phone (pid 3862)     10,641K: com.han.dmfota (pid 952)      9,753K: com.qualcomm.qti.telephonyservice (pid 3853)      6,689K: com.qualcomm.telephony (pid 970)      3,948K: .dataservices (pid 3821)      3,621K: com.han.tetherEntitlement (pid 947) 17,922K: Persistent Service     17,922K: com.android.bluetooth (pid 3483 / activities) 43,253K: Foreground     26,516K: com.android.launcher3 (pid 785 / activities)     10,029K: com.android.chrome (pid 2044 / activities)      3,663K: com.google.process.gservices (pid 1992)      3,045K: com.android.partnerbrowsercustomizations (pid 2264) 81,973K: Visible     63,027K: com.google.android.gms.persistent (pid 3046)     12,505K: com.android.printspooler (pid 2361)      3,243K: com.android.chrome:sandboxed_process0 (pid 2292)      3,198K: com.qualcomm.qcrilmsgtunnel (pid 574)115,042K: Perceptible     76,266K: com.android.mms (pid 3376 / activities)     38,776K: com.google.android.inputmethod.latin (pid 2321)  4,831K: A Services      4,831K: com.facebook.lite:fbns (pid 402) 18,116K: Previous     12,914K: com.android.dialer (pid 775 / activities)      5,202K: android.process.acore (pid 3926)  7,047K: B Services      2,947K: com.android.batterywarning (pid 2601)      2,098K: com.qualcomm.simcontacts (pid 4018)      2,002K: com.qti.diagrestoreservice (pid 3986)153,398K: Cached     22,953K: com.google.android.apps.photos (pid 1307 / activities)     18,624K: com.android.settings (pid 2041 / activities)     16,262K: com.google.android.gms (pid 971)     15,582K: com.android.vending (pid 1183)     13,022K: com.google.android.gms:snet (pid 1781)     10,308K: com.android.vending:instant_app_installer (pid 2183)      9,190K: com.google.android.gms.unstable (pid 2130)      9,068K: com.google.android.apps.speechservices:search (pid 570)      8,063K: com.google.android.apps.searchlite (pid 3329)      7,290K: com.google.android.calendar (pid 2969)      5,409K: com.facebook.appmanager (pid 1112)      4,426K: com.facebook.lite (pid 1195)      3,074K: android.process.media (pid 321)      2,966K: com.android.providers.calendar (pid 3012)      2,783K: com.google.process.gapps (pid 699)      2,356K: com.google.android.partnersetup (pid 3835)      2,022K: com.han.feedback (pid 2461)</code></pre><p>由于都是window产生的问题,先download window</p><p>adb shell dumpsys  window &gt; window.log</p><p>确实有很多对象:</p><p>WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)<br>    DisplayContentsAnimator #0:<br>      Window #0: WindowStateAnimator{970b521 com.android.systemui.ImageWallpaper}<br>      Window #1: WindowStateAnimator{4b35d46 com.android.systemui/com.android.systemui.recents.RecentsActivity}<br>      Window #2: WindowStateAnimator{9ace6a5 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #3: WindowStateAnimator{8a51c9c PopupWindow:8bce4ca}<br>      Window #4: WindowStateAnimator{fa27f6a com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #5: WindowStateAnimator{9d57434 com.android.bluetooth/com.android.bluetooth.opp.BluetoothOppTransferActivity}<br>      Window #6: WindowStateAnimator{d82825d com.android.bluetooth/com.android.bluetooth.opp.BluetoothOppTransferHistory}<br>      Window #7: WindowStateAnimator{53807d2 com.android.launcher3/com.android.launcher3.SettingsActivity}<br>      Window #8: WindowStateAnimator{9a980a3 com.android.chrome/org.chromium.chrome.browser.webapps.WebApkActivity}<br>      Window #9: WindowStateAnimator{b9b240f com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #10: WindowStateAnimator{b9da56e com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #11: WindowStateAnimator{903e4e9 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #12: WindowStateAnimator{883d970 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #13: WindowStateAnimator{3063fb3 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #14: WindowStateAnimator{cc31922 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #15: WindowStateAnimator{314c6ed com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #16: WindowStateAnimator{d8ab104 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #17: WindowStateAnimator{8922917 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #18: WindowStateAnimator{d78f996 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #19: WindowStateAnimator{bb4d0b1 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #20: WindowStateAnimator{4497758 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #21: WindowStateAnimator{c99843b com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #22: WindowStateAnimator{a0dfaca com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #23: WindowStateAnimator{12d0635 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #24: WindowStateAnimator{a3ac06c com.android.mms/com.android.mms.ui.MessagingPreferenceActivity}<br>      Window #25: WindowStateAnimator{a54b51f com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #26: WindowStateAnimator{78d90be com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #27: WindowStateAnimator{87e2b79 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #28: WindowStateAnimator{97e040 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #29: WindowStateAnimator{17ddfc3 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #30: WindowStateAnimator{d73ef72 com.android.mms/com.android.mms.ui.ComposeMessageActivity}<br>      Window #31: WindowStateAnimator{d64c47d com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #32: WindowStateAnimator{9ecead4 com.android.mms/com.android.mms.ui.SearchConversationActivity}<br>      Window #33: WindowStateAnimator{db4e827 com.android.mms/com.android.mms.ui.ConversationList}<br>      Window #34: WindowStateAnimator{c220ae6 com.android.mms/com.android.mms.ui.ComposeMessageActivity}</p><p>activity 没有释放?</p><pre><code>appTokens=[AppWindowToken{ae9bcb7 token=Token{58a53c7 ActivityRecord{3c16106 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{aaecd1f token=Token{72108be ActivityRecord{4d48379 u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{1de4337 token=Token{1c4cce5 ActivityRecord{eafb3dc u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{833e334 token=Token{3150607 ActivityRecord{d5a7446 u0 com.android.mms/.ui.MessagingPreferenceActivity t470}}}, AppWindowToken{2a510e3 token=Token{c22b112 ActivityRecord{b5089d u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{ba134dc token=Token{993754f ActivityRecord{86b73ae u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{c6dbbe9 token=Token{bd77727 ActivityRecord{6a34c41 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{f142eaa token=Token{6cc657f ActivityRecord{70e469e u0 com.android.mms/.ui.MessagingPreferenceActivity t470}}}, AppWindowToken{c75e755 token=Token{4c3f20c ActivityRecord{fa3293f u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{8693e35 token=Token{a956609 ActivityRecord{8942b10 u0 com.android.mms/.ui.ComposeMessageActivity t232}}}, AppWindowToken{5c70d81 token=Token{d9e6568 ActivityRecord{b34208b u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{19989f0 token=Token{e1a6233 ActivityRecord{5e035a2 u0 com.android.mms/.ui.MessagingPreferenceActivity t470}}}, AppWindowToken{aa8ca9e token=Token{33ca0d9 ActivityRecord{5db4f20 u0 com.android.mms/.ui.SmsPreferenceActivity t470}}}, AppWindowToken{1d926be token=Token{4563612 ActivityRecord{e55e874 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{5757ec3 token=Token{41aaa72 ActivityRecord{dd58b7d u0 com.android.mms/.ui.SearchConversationActivity t470}}}, AppWindowToken{6674364 token=Token{95608f7 ActivityRecord{222ecf6 u0 com.android.mms/.ui.ComposeMessageActivity t499}}}, AppWindowToken{7e1b21c token=Token{53e9f8f ActivityRecord{afbdeee u0 com.android.mms/.ui.ComposeMessageActivity t232}}}, AppWindowToken{2520d2e token=Token{b3b573d ActivityRecord{5010ce7 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{36f253 token=Token{b267bd5 ActivityRecord{940088c u0 com.android.mms/.ui.ComposeMessageActivity t499}}}, AppWindowToken{bc306e8 token=Token{76eebef ActivityRecord{f8620ce u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{81bd64a token=Token{4a31fb5 ActivityRecord{ebb4fec u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{81887e6 token=Token{488b10c ActivityRecord{42ba85e u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{21804fa token=Token{12d1b25 ActivityRecord{eeb531c u0 com.android.mms/.ui.MessagingPreferenceActivity t470}}}, AppWindowToken{4b37307 token=Token{e1b1be ActivityRecord{c1cd940 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{cfac063 token=Token{b8b6e92 ActivityRecord{c7c4c1d u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{1d7627c token=Token{fbd020 ActivityRecord{f47a452 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{5002c62 token=Token{3d069ac ActivityRecord{3fe3b5f u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{9b74477 token=Token{f07a608 ActivityRecord{8affdfa u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{3cc5e55 token=Token{81de50c ActivityRecord{f31083f u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{6887990 token=Token{972f01d ActivityRecord{c9c02c7 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{e305c5b token=Token{2169f6a ActivityRecord{354d955 u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{f6fb906 token=Token{9e5f9f5 ActivityRecord{9fa12df u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{eafe567 token=Token{8e1b526 ActivityRecord{b440081 u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{e465bf2 token=Token{7dbdc51 ActivityRecord{dfced78 u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{18e58da token=Token{6bad285 ActivityRecord{b89cbfc u0 com.android.mms/.ui.ComposeMessageActivity t470}}}, AppWindowToken{59d2447 token=Token{e8b1675 ActivityRecord{781e9ac u0 com.android.mms/.ui.ConversationList t470}}}, AppWindowToken{7fb9721 token=Token{156b3 ActivityRecord{8f02c22 u0</code></pre><p>下面这个hold住了 29 个ComposeMessageActivity</p><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-1"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-1" class="headerlink" title="Class Name                               | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                               | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><h2 id="mArray-java-lang-Object-180-0x14d79ce8-29-736-19-256-736"><a href="#mArray-java-lang-Object-180-0x14d79ce8-29-736-19-256-736" class="headerlink" title="mArray java.lang.Object[180] @ 0x14d79ce8|           29 |          736 |            19,256 |           736"></a>mArray java.lang.Object[180] @ 0x14d79ce8|           29 |          736 |            19,256 |           736</h2><p>下面这个hold住了 32 个 ConversationList</p><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-2"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-2" class="headerlink" title="Class Name                               | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                               | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><h2 id="mArray-java-lang-Object-180-0x14d79ce8-32-736-11-520-736"><a href="#mArray-java-lang-Object-180-0x14d79ce8-32-736-11-520-736" class="headerlink" title="mArray java.lang.Object[180] @ 0x14d79ce8|           32 |          736 |            11,520 |           736"></a>mArray java.lang.Object[180] @ 0x14d79ce8|           32 |          736 |            11,520 |           736</h2><p>也就是说因为某种原因ConversationList压根没有被释放</p><h1 id="排除com-android-mms的问题"><a href="#排除com-android-mms的问题" class="headerlink" title="排除com.android.mms的问题"></a>排除com.android.mms的问题</h1><p>adb shell kill -9 com.android.mms</p><p>问题依然存在.但是,这些对象都有所减少.</p><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-4"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-4" class="headerlink" title="Class Name                                      | Objects | Shallow Heap | Retained Heap"></a>Class Name                                      | Objects | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState               |     761 |      334,840 |  &gt;= 1,964,544<br>com.android.server.wm.WindowStateAnimator       |     761 |      170,464 |    &gt;= 414,736<br>com.android.server.wm.WindowState$WindowId      |     761 |       24,352 |     &gt;= 43,016</p><h2 id="com-android-server-wm-WindowState-DeathRecipient-761-12-176-gt-12-408"><a href="#com-android-server-wm-WindowState-DeathRecipient-761-12-176-gt-12-408" class="headerlink" title="com.android.server.wm.WindowState$DeathRecipient|     761 |       12,176 |     &gt;= 12,408"></a>com.android.server.wm.WindowState$DeathRecipient|     761 |       12,176 |     &gt;= 12,408</h2><p>#################################################3</p><p>adb shell kill -9 23,153K: com.android.phone (pid 3862)<br>没有减少:</p><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-5"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-5" class="headerlink" title="Class Name                                      | Objects | Shallow Heap | Retained Heap"></a>Class Name                                      | Objects | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState               |     763 |      335,720 |  &gt;= 1,970,008<br>com.android.server.wm.WindowStateAnimator       |     763 |      170,912 |    &gt;= 415,824<br>com.android.server.wm.WindowState$WindowId      |     763 |       24,416 |     &gt;= 43,128</p><h2 id="com-android-server-wm-WindowState-DeathRecipient-763-12-208-gt-12-440"><a href="#com-android-server-wm-WindowState-DeathRecipient-763-12-208-gt-12-440" class="headerlink" title="com.android.server.wm.WindowState$DeathRecipient|     763 |       12,208 |     &gt;= 12,440"></a>com.android.server.wm.WindowState$DeathRecipient|     763 |       12,208 |     &gt;= 12,440</h2><p>adb shell kill -9  com.android.systemui<br>adb shell kill -9  com.android.dialer</p><p>都没有减少</p><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-6"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-6" class="headerlink" title="Class Name                                      | Objects | Shallow Heap | Retained Heap"></a>Class Name                                      | Objects | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState               |     761 |      334,840 |  &gt;= 1,964,496<br>com.android.server.wm.WindowStateAnimator       |     761 |      170,464 |    &gt;= 414,736<br>com.android.server.wm.WindowState$WindowId      |     761 |       24,352 |     &gt;= 43,016</p><h2 id="com-android-server-wm-WindowState-DeathRecipient-761-12-176-gt-12-408-1"><a href="#com-android-server-wm-WindowState-DeathRecipient-761-12-176-gt-12-408-1" class="headerlink" title="com.android.server.wm.WindowState$DeathRecipient|     761 |       12,176 |     &gt;= 12,408"></a>com.android.server.wm.WindowState$DeathRecipient|     761 |       12,176 |     &gt;= 12,408</h2><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-3"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-3" class="headerlink" title="Class Name                                                       | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                                                       | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><h2 id="mAppAnimator-com-android-server-wm-AppWindowAnimator-0x15041678-1-96-96-288"><a href="#mAppAnimator-com-android-server-wm-AppWindowAnimator-0x15041678-1-96-96-288" class="headerlink" title="mAppAnimator com.android.server.wm.AppWindowAnimator @ 0x15041678|            1 |           96 |                96 |           288"></a>mAppAnimator com.android.server.wm.AppWindowAnimator @ 0x15041678|            1 |           96 |                96 |           288</h2><h2 id="Type-Name-Value"><a href="#Type-Name-Value" class="headerlink" title="Type|Name       |Value"></a>Type|Name       |Value</h2><h2 id="ref-mDescriptor-java-lang-String-0x70c4d0e8"><a href="#ref-mDescriptor-java-lang-String-0x70c4d0e8" class="headerlink" title="ref |mDescriptor|java.lang.String @ 0x70c4d0e8"></a>ref |mDescriptor|java.lang.String @ 0x70c4d0e8</h2><h2 id="Type-Name-Value-1"><a href="#Type-Name-Value-1" class="headerlink" title="Type|Name|Value"></a>Type|Name|Value</h2><p>byte|[0] |97<br>byte|[1] |110<br>byte|[2] |100<br>byte|[3] |114<br>byte|[4] |111<br>byte|[5] |105<br>byte|[6] |100<br>byte|[7] |46<br>byte|[8] |118<br>byte|[9] |105<br>byte|[10]|101<br>byte|[11]|119<br>byte|[12]|46<br>byte|[13]|73<br>byte|[14]|65<br>byte|[15]|112<br>byte|[16]|112<br>byte|[17]|108<br>byte|[18]|105<br>byte|[19]|99<br>byte|[20]|97<br>byte|[21]|116<br>byte|[22]|105<br>byte|[23]|111<br>byte|[24]|110<br>byte|[25]|84<br>byte|[26]|111<br>byte|[27]|107<br>byte|[28]|101</p><h2 id="byte-29-110"><a href="#byte-29-110" class="headerlink" title="byte|[29]|110"></a>byte|[29]|110</h2><p>转成字符串:<br>a n d r o i d . v i e w . I A p p l i c a t i o n T o k e n</p><p>日了狗了…哎.</p><p>找出申请和释放 WindowStateAnimator的地方,加上LOG,再测试复现</p><p>for i in <code>cat all_process.txt  | awk &#39;{print $2}&#39;</code>;do adb shell kill -9 $i; sleep 30;adb shell am dumpheap 1061 /data/local/tmp/1061.hprof;sleep 30; adb pull /data/local/tmp/1061.hprof; mv 1061.hprof after_$i_1061.hprof;hprof-conv after_$i_1061.hprof after_$i_1061_mat.hprof;done</p><p>for i in <code>cat all_process.txt  | awk &#39;{print $2}&#39;</code>;do echo adb shell kill -9 $i &amp;&amp; echo sleep 5 &amp;&amp; echo adb shell am dumpheap 1061 /data/local/tmp/1061.hprof &amp;&amp; echo sleep 30 &amp;&amp; echo adb pull /data/local/tmp/1061.hprof &amp;&amp; echo mv 1061.hprof after-$i-1061.hprof &amp;&amp; echo hprof-conv after-$i-1061.hprof after-$i-1061_mat.hprof &amp;&amp; echo ———————— ; done</p><p>for i in <code>cat all_process.txt  | awk &#39;{print $2}&#39;</code>;do adb shell kill -9 $i &amp;&amp; sleep 5 &amp;&amp;  adb shell am dumpheap 1061 /data/local/tmp/1061.hprof &amp;&amp; sleep 30 &amp;&amp; adb pull /data/local/tmp/1061.hprof &amp;&amp; mv 1061.hprof after-$i-1061.hprof &amp;&amp; hprof-conv after-$i-1061.hprof after-$i-1061_mat.hprof &amp;&amp; echo ———————— ; done</p><p>kill 了 所有 com. 打头的APP,</p><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-7"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-7" class="headerlink" title="Class Name                                                       | Objects | Shallow Heap | Retained Heap"></a>Class Name                                                       | Objects | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState                                |     759 |      333,960 |  &gt;= 1,959,816<br>com.android.server.wm.WindowStateAnimator                        |     759 |      170,016 |    &gt;= 413,568<br>com.android.server.wm.WindowState$WindowId                       |     759 |       24,288 |     &gt;= 42,904<br>com.android.server.wm.WindowState$UpdateReportedVisibilityResults|     785 |       18,840 |     &gt;= 19,032</p><h2 id="com-android-server-wm-WindowState-DeathRecipient-759-12-144-gt-12-376"><a href="#com-android-server-wm-WindowState-DeathRecipient-759-12-144-gt-12-376" class="headerlink" title="com.android.server.wm.WindowState$DeathRecipient                 |     759 |       12,144 |     &gt;= 12,376"></a>com.android.server.wm.WindowState$DeathRecipient                 |     759 |       12,144 |     &gt;= 12,376</h2><p>还是需要在system_server里面排查未释放的原因.</p><p>可以在 ActivityRecord 里面找对应的 strings.<br>01-01 12:58:16.621   823  3071 W jackywei: this = 48097705,wallpaperTarget.mAppToken = AppWindowToken{50cb356 token=Token{e782efb ActivityRecord{265988a u0 com.android.phone/.EmergencyDialer t7}}}</p><p>大部分指向:<br>com.google.android.apps.searchlite</p><p>###################################################################################################</p><h2 id="Class-Name-Shallow-Heap-Retained-Heap-Percentage"><a href="#Class-Name-Shallow-Heap-Retained-Heap-Percentage" class="headerlink" title="Class Name                                            | Shallow Heap | Retained Heap | Percentage"></a>Class Name                                            | Shallow Heap | Retained Heap | Percentage</h2><h2 id="com-android-server-wm-WindowStateAnimator-0x154814c8-224-544-0-00"><a href="#com-android-server-wm-WindowStateAnimator-0x154814c8-224-544-0-00" class="headerlink" title="com.android.server.wm.WindowStateAnimator @ 0x154814c8|          224 |           544 |      0.00%"></a>com.android.server.wm.WindowStateAnimator @ 0x154814c8|          224 |           544 |      0.00%</h2><h2 id="Type-Name-Value-2"><a href="#Type-Name-Value-2" class="headerlink" title="Type|Name     |Value"></a>Type|Name     |Value</h2><h2 id="ref-mAppToken-com-android-server-wm-AppWindowToken-0x15480e60"><a href="#ref-mAppToken-com-android-server-wm-AppWindowToken-0x15480e60" class="headerlink" title="ref |mAppToken|com.android.server.wm.AppWindowToken @ 0x15480e60"></a>ref |mAppToken|com.android.server.wm.AppWindowToken @ 0x15480e60</h2><h2 id="Type-Name-Value-3"><a href="#Type-Name-Value-3" class="headerlink" title="Type|Name    |Value"></a>Type|Name    |Value</h2><h2 id="ref-appToken-com-android-server-am-ActivityRecord-Token-0x154811b0"><a href="#ref-appToken-com-android-server-am-ActivityRecord-Token-0x154811b0" class="headerlink" title="ref |appToken|com.android.server.am.ActivityRecord$Token @ 0x154811b0"></a>ref |appToken|com.android.server.am.ActivityRecord$Token @ 0x154811b0</h2><h2 id="Type-Name-Value-4"><a href="#Type-Name-Value-4" class="headerlink" title="Type|Name        |Value"></a>Type|Name        |Value</h2><h2 id="ref-weakActivity-java-lang-ref-WeakReference-0x154821a8"><a href="#ref-weakActivity-java-lang-ref-WeakReference-0x154821a8" class="headerlink" title="ref |weakActivity|java.lang.ref.WeakReference @ 0x154821a8"></a>ref |weakActivity|java.lang.ref.WeakReference @ 0x154821a8</h2><h2 id="Type-Name-Value-5"><a href="#Type-Name-Value-5" class="headerlink" title="Type|Name    |Value"></a>Type|Name    |Value</h2><h2 id="ref-referent-com-android-server-am-ActivityRecord-0x154821f0"><a href="#ref-referent-com-android-server-am-ActivityRecord-0x154821f0" class="headerlink" title="ref |referent|com.android.server.am.ActivityRecord @ 0x154821f0"></a>ref |referent|com.android.server.am.ActivityRecord @ 0x154821f0</h2><h2 id="Type-Name-Value-6"><a href="#Type-Name-Value-6" class="headerlink" title="Type|Name   |Value"></a>Type|Name   |Value</h2><h2 id="ref-appInfo-android-content-pm-ApplicationInfo-0x1444b0e0"><a href="#ref-appInfo-android-content-pm-ApplicationInfo-0x1444b0e0" class="headerlink" title="ref |appInfo|android.content.pm.ApplicationInfo @ 0x1444b0e0"></a>ref |appInfo|android.content.pm.ApplicationInfo @ 0x1444b0e0</h2><h2 id="Type-Name-Value-7"><a href="#Type-Name-Value-7" class="headerlink" title="Type|Name   |Value"></a>Type|Name   |Value</h2><h2 id="ref-dataDir-java-lang-String-0x1444bc58"><a href="#ref-dataDir-java-lang-String-0x1444bc58" class="headerlink" title="ref |dataDir|java.lang.String @ 0x1444bc58"></a>ref |dataDir|java.lang.String @ 0x1444bc58</h2><h2 id="Type-Name-Value-8"><a href="#Type-Name-Value-8" class="headerlink" title="Type|Name          |Value"></a>Type|Name          |Value</h2><p>ref |value         |/data/user/0/com.google.android.apps.searchlite</p><h2 id="ref-shadow-klass-class-java-lang-String-0x706ea708"><a href="#ref-shadow-klass-class-java-lang-String-0x706ea708" class="headerlink" title="ref |shadow$klass|class java.lang.String @ 0x706ea708"></a>ref |shadow$<em>klass</em>|class java.lang.String @ 0x706ea708</h2><h2 id="Type-Name-Value-9"><a href="#Type-Name-Value-9" class="headerlink" title="Type|Name |Value"></a>Type|Name |Value</h2><h2 id="ref-value-com-google-android-apps-searchlite-SearchLiteApp-Application"><a href="#ref-value-com-google-android-apps-searchlite-SearchLiteApp-Application" class="headerlink" title="ref |value|com.google.android.apps.searchlite.SearchLiteApp_Application"></a>ref |value|com.google.android.apps.searchlite.SearchLiteApp_Application</h2><h2 id="Type-Name-Value-10"><a href="#Type-Name-Value-10" class="headerlink" title="Type|Name          |Value"></a>Type|Name          |Value</h2><p>ref |value         |/data/user/0/com.google.android.apps.searchlite</p><h2 id="ref-shadow-klass-class-java-lang-String-0x706ea708-1"><a href="#ref-shadow-klass-class-java-lang-String-0x706ea708-1" class="headerlink" title="ref |shadow$klass|class java.lang.String @ 0x706ea708"></a>ref |shadow$<em>klass</em>|class java.lang.String @ 0x706ea708</h2><p>###################################################################################################</p><h2 id="Type-Name-Value-11"><a href="#Type-Name-Value-11" class="headerlink" title="Type|Name        |Value"></a>Type|Name        |Value</h2><h2 id="ref-mAppAnimator-com-android-server-wm-AppWindowAnimator-0x154811d0"><a href="#ref-mAppAnimator-com-android-server-wm-AppWindowAnimator-0x154811d0" class="headerlink" title="ref |mAppAnimator|com.android.server.wm.AppWindowAnimator @ 0x154811d0"></a>ref |mAppAnimator|com.android.server.wm.AppWindowAnimator @ 0x154811d0</h2><p>###################################################################################################</p><p>###################################################################################################</p><h2 id="Class-Name-Shallow-Heap-Retained-Heap-Percentage-1"><a href="#Class-Name-Shallow-Heap-Retained-Heap-Percentage-1" class="headerlink" title="Class Name                                            | Shallow Heap | Retained Heap | Percentage"></a>Class Name                                            | Shallow Heap | Retained Heap | Percentage</h2><h2 id="com-android-server-wm-WindowStateAnimator-0x154838f0-224-544-0-00"><a href="#com-android-server-wm-WindowStateAnimator-0x154838f0-224-544-0-00" class="headerlink" title="com.android.server.wm.WindowStateAnimator @ 0x154838f0|          224 |           544 |      0.00%"></a>com.android.server.wm.WindowStateAnimator @ 0x154838f0|          224 |           544 |      0.00%</h2><h2 id="Type-Name-Value-12"><a href="#Type-Name-Value-12" class="headerlink" title="Type|Name        |Value"></a>Type|Name        |Value</h2><h2 id="ref-mAppAnimator-com-android-server-wm-AppWindowAnimator-0x154835f8"><a href="#ref-mAppAnimator-com-android-server-wm-AppWindowAnimator-0x154835f8" class="headerlink" title="ref |mAppAnimator|com.android.server.wm.AppWindowAnimator @ 0x154835f8"></a>ref |mAppAnimator|com.android.server.wm.AppWindowAnimator @ 0x154835f8</h2><h2 id="Type-Name-Value-13"><a href="#Type-Name-Value-13" class="headerlink" title="Type|Name     |Value"></a>Type|Name     |Value</h2><h2 id="ref-mAppToken-com-android-server-wm-AppWindowToken-0x15483288"><a href="#ref-mAppToken-com-android-server-wm-AppWindowToken-0x15483288" class="headerlink" title="ref |mAppToken|com.android.server.wm.AppWindowToken @ 0x15483288"></a>ref |mAppToken|com.android.server.wm.AppWindowToken @ 0x15483288</h2><h2 id="Type-Name-Value-14"><a href="#Type-Name-Value-14" class="headerlink" title="Type|Name    |Value"></a>Type|Name    |Value</h2><h2 id="ref-appToken-com-android-server-am-ActivityRecord-Token-0x154835d8"><a href="#ref-appToken-com-android-server-am-ActivityRecord-Token-0x154835d8" class="headerlink" title="ref |appToken|com.android.server.am.ActivityRecord$Token @ 0x154835d8"></a>ref |appToken|com.android.server.am.ActivityRecord$Token @ 0x154835d8</h2><h2 id="Type-Name-Value-15"><a href="#Type-Name-Value-15" class="headerlink" title="Type|Name    |Value"></a>Type|Name    |Value</h2><h2 id="ref-referent-com-android-server-am-ActivityRecord-0x15484618"><a href="#ref-referent-com-android-server-am-ActivityRecord-0x15484618" class="headerlink" title="ref |referent|com.android.server.am.ActivityRecord @ 0x15484618"></a>ref |referent|com.android.server.am.ActivityRecord @ 0x15484618</h2><h2 id="Type-Name-Value-16"><a href="#Type-Name-Value-16" class="headerlink" title="Type|Name   |Value"></a>Type|Name   |Value</h2><h2 id="ref-appInfo-android-content-pm-ApplicationInfo-0x1444b0e0-1"><a href="#ref-appInfo-android-content-pm-ApplicationInfo-0x1444b0e0-1" class="headerlink" title="ref |appInfo|android.content.pm.ApplicationInfo @ 0x1444b0e0"></a>ref |appInfo|android.content.pm.ApplicationInfo @ 0x1444b0e0</h2><h2 id="Type-Name-Value-17"><a href="#Type-Name-Value-17" class="headerlink" title="Type|Name   |Value"></a>Type|Name   |Value</h2><h2 id="ref-dataDir-java-lang-String-0x1444bc58-1"><a href="#ref-dataDir-java-lang-String-0x1444bc58-1" class="headerlink" title="ref |dataDir|java.lang.String @ 0x1444bc58"></a>ref |dataDir|java.lang.String @ 0x1444bc58</h2><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-4"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-4" class="headerlink" title="Class Name                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><h2 id="mTokenMap-java-util-HashMap-0x1439cd50-1-40-224-27-152"><a href="#mTokenMap-java-util-HashMap-0x1439cd50-1-40-224-27-152" class="headerlink" title="mTokenMap java.util.HashMap @ 0x1439cd50|            1 |           40 |               224 |        27,152"></a>mTokenMap java.util.HashMap @ 0x1439cd50|            1 |           40 |               224 |        27,152</h2><h2 id="Type-Name-Value-18"><a href="#Type-Name-Value-18" class="headerlink" title="Type |Name            |Value"></a>Type |Name            |Value</h2><p>ref  |entrySet        |null<br>float|loadFactor      |0.75<br>int  |modCount        |10233<br>int  |size            |787<br>ref  |table           |java.util.HashMap$Node[2048] @ 0x1439d1f8<br>int  |threshold       |1536<br>ref  |keySet          |null<br>ref  |values          |java.util.HashMap$Values @ 0x1439d1e8<br>ref  |shadow$<em>klass</em>  |class java.util.HashMap @ 0x706ec4c8</p><h2 id="int-shadow-monitor-0"><a href="#int-shadow-monitor-0" class="headerlink" title="int  |shadow$monitor|0"></a>int  |shadow$<em>monitor</em>|0</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;长时间使用之后手机变慢&quot;&gt;&lt;a href=&quot;#长时间使用之后手机变慢&quot; class=&quot;headerlink&quot; title=&quot;长时间使用之后手机变慢&quot;&gt;&lt;/a&gt;长时间使用之后手机变慢&lt;/h1&gt;&lt;h2 id=&quot;现象描述&quot;&gt;&lt;a href=&quot;#现象描述&quot; class=&quot;
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>system_server内存泄漏</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/system-server-nei-cun-xie-lu/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/system-server-nei-cun-xie-lu/</id>
    <published>2018-12-13T07:53:54.437Z</published>
    <updated>2018-12-13T07:52:54.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="卡顿原因"><a href="#卡顿原因" class="headerlink" title="卡顿原因:"></a>卡顿原因:</h1><p>用android Device Monitor 获取的文件中:<br>ddms8967132311110557686.trace</p><p>windowContainer.ForAllWindows 超过2.7秒</p><p>抓取 hprof文件分析:<br>找到和ForAllWindows函数相关的对象:</p><p>adb shell ps | grep -i system_server</p><p>ps = 923</p><p>adb shell am dumpheap 923 /data/local/tmp/923.hprof</p><p>hprof-conv 923.hprof 923_mat.hprof</p><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap" class="headerlink" title="Class Name                                                       | Objects | Shallow Heap | Retained Heap"></a>Class Name                                                       | Objects | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState                                |     855 |      376,200 |  &gt;= 2,204,304<br>com.android.server.wm.WindowStateAnimator                        |     855 |      191,520 |    &gt;= 465,872<br>com.android.server.wm.WindowState$WindowId                       |     855 |       27,360 |     &gt;= 48,280<br>com.android.server.wm.WindowState$UpdateReportedVisibilityResults|     911 |       21,864 |     &gt;= 22,056</p><h2 id="com-android-server-wm-WindowState-DeathRecipient-855-13-680-gt-13-912"><a href="#com-android-server-wm-WindowState-DeathRecipient-855-13-680-gt-13-912" class="headerlink" title="com.android.server.wm.WindowState$DeathRecipient                 |     855 |       13,680 |     &gt;= 13,912"></a>com.android.server.wm.WindowState$DeathRecipient                 |     855 |       13,680 |     &gt;= 13,912</h2><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-1"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-1" class="headerlink" title="Class Name                                | Objects | Shallow Heap | Retained Heap"></a>Class Name                                | Objects | Shallow Heap | Retained Heap</h2><p>com.android.server.am.ActivityRecord      |     921 |      353,664 |  &gt;= 2,144,720</p><h2 id="com-android-server-am-ActivityRecord-Token-955-30-560-gt-53-848"><a href="#com-android-server-am-ActivityRecord-Token-955-30-560-gt-53-848" class="headerlink" title="com.android.server.am.ActivityRecord$Token|     955 |       30,560 |     &gt;= 53,848"></a>com.android.server.am.ActivityRecord$Token|     955 |       30,560 |     &gt;= 53,848</h2><h2 id="Type-Name-Value"><a href="#Type-Name-Value" class="headerlink" title="Type|Name    |Value"></a>Type|Name    |Value</h2><h2 id="ref-appToken-com-android-server-am-ActivityRecord-Token-0x16f12f88"><a href="#ref-appToken-com-android-server-am-ActivityRecord-Token-0x16f12f88" class="headerlink" title="ref |appToken|com.android.server.am.ActivityRecord$Token @ 0x16f12f88"></a>ref |appToken|com.android.server.am.ActivityRecord$Token @ 0x16f12f88</h2><h2 id="Type-Name-Value-1"><a href="#Type-Name-Value-1" class="headerlink" title="Type|Name    |Value"></a>Type|Name    |Value</h2><p>ref |appInfo |android.content.pm.ApplicationInfo @ 0x1542e100<br>ref |appToken|com.android.server.am.ActivityRecord$Token @ 0x16f12f88</p><h2 id="ref-compat-android-content-res-CompatibilityInfo-0x17065af0"><a href="#ref-compat-android-content-res-CompatibilityInfo-0x17065af0" class="headerlink" title="ref |compat  |android.content.res.CompatibilityInfo @ 0x17065af0"></a>ref |compat  |android.content.res.CompatibilityInfo @ 0x17065af0</h2><h2 id="Class-Name-Objects-Shallow-Heap-Retained-Heap-2"><a href="#Class-Name-Objects-Shallow-Heap-Retained-Heap-2" class="headerlink" title="Class Name                           | Objects | Shallow Heap | Retained Heap"></a>Class Name                           | Objects | Shallow Heap | Retained Heap</h2><h2 id="android-content-res-CompatibilityInfo-945-22-680-gt-22-952"><a href="#android-content-res-CompatibilityInfo-945-22-680-gt-22-952" class="headerlink" title="android.content.res.CompatibilityInfo|     945 |       22,680 |     &gt;= 22,952"></a>android.content.res.CompatibilityInfo|     945 |       22,680 |     &gt;= 22,952</h2><p>ActivityRecord 也有泄漏?????</p><p>PATH TO GC ROOT</p><h2 id="Class-Name-Shallow-Heap-Retained-Heap"><a href="#Class-Name-Shallow-Heap-Retained-Heap" class="headerlink" title="Class Name                                                                                  | Shallow Heap | Retained Heap"></a>Class Name                                                                                  | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState @ 0x15826d18                                              |          440 |         3,664<br>‘- [0] com.android.server.wm.WindowState[20] @ 0x15825c10                                   |           96 |            96</p><h2 id="‘-mPendingRemoveTmp-com-android-server-wm-WindowManagerService-0x12cd2950-Native-Stack-512-5-064"><a href="#‘-mPendingRemoveTmp-com-android-server-wm-WindowManagerService-0x12cd2950-Native-Stack-512-5-064" class="headerlink" title="   ‘- mPendingRemoveTmp com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack|          512 |         5,064"></a>   ‘- mPendingRemoveTmp com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack|          512 |         5,064</h2><p>Merge GC ROOT:</p><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap" class="headerlink" title="Class Name                                                             | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                                                             | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack   |            1 |          512 |               440 |         5,064<br>‘- mPendingRemoveTmp com.android.server.wm.WindowState[20] @ 0x15825c10|            1 |           96 |               440 |            96</p><h2 id="‘-0-com-android-server-wm-WindowState-0x15826d18-1-440-440-3-664"><a href="#‘-0-com-android-server-wm-WindowState-0x15826d18-1-440-440-3-664" class="headerlink" title="   ‘- [0] com.android.server.wm.WindowState @ 0x15826d18               |            1 |          440 |               440 |         3,664"></a>   ‘- [0] com.android.server.wm.WindowState @ 0x15826d18               |            1 |          440 |               440 |         3,664</h2><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<br>PATH TO GC ROOT</p><h2 id="Class-Name-Shallow-Heap-Retained-Heap-1"><a href="#Class-Name-Shallow-Heap-Retained-Heap-1" class="headerlink" title="Class Name                                                                                                                        | Shallow Heap | Retained Heap"></a>Class Name                                                                                                                        | Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowState @ 0x14be1080                                                                                    |          440 |         2,536<br>‘- mWin com.android.server.wm.WindowStateAnimator @ 0x14be0e78                                                                    |          224 |           544<br>   ‘- [0] java.lang.Object[10] @ 0x14be0e40                                                                                       |           56 |            56<br>      ‘- elementData java.util.ArrayList @ 0x14be0d98                                                                             |           24 |            80<br>         ‘- mAllAppWinAnimators com.android.server.wm.AppWindowAnimator @ 0x14be0b80                                              |           96 |           288<br>            ‘- mAppAnimator com.android.server.wm.AppWindowToken @ 0x14be0810                                                     |          200 |         1,272<br>               ‘- value java.util.HashMap$Node @ 0x12dbe658                                                                       |           24 |            24<br>                  ‘- [1511] java.util.HashMap$Node[2048] @ 0x12db91f8                                                             |        8,208 |        30,192<br>                     ‘- table java.util.HashMap @ 0x12db86a0                                                                      |           40 |        30,248<br>                        ‘- mTokenMap com.android.server.wm.DisplayContent @ 0x12db7bd0                                            |          312 |        58,344<br>                           |- mDisplayContent com.android.server.wm.AppWindowToken @ 0x14bc22d8                                   |          200 |         1,256<br>                           |  |- mFocusedApp com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack                 |          512 |         5,064<br>                           |  |- mAppToken, mToken, mParent com.android.server.wm.WindowState @ 0x12db24d8                        |          440 |         3,064<br>                           |  |  |- mCurrentFocus, mLastFocus com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack|          512 |         5,064<br>                           |  |  |- this$0 com.android.server.wm.WindowState$DeathRecipient @ 0x12d9d5d0 Native Stack             |           16 |            16<br>                           |  |  |- mInputFocus com.android.server.wm.InputMonitor @ 0x15501a98                                   |           56 |           728</p><pre><code>|  |  |  &apos;- mInputMonitor com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack         |          512 |         5,064</code></pre><hr><p>Merge GC ROOT:</p><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-1"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-1" class="headerlink" title="Class Name                                                                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                                                                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack                    |            1 |          512 |               440 |         5,064<br>‘- mFocusedApp com.android.server.wm.AppWindowToken @ 0x14bc22d8                        |            1 |          200 |               440 |         1,256<br>   ‘- mDisplayContent com.android.server.wm.DisplayContent @ 0x12db7bd0                 |            1 |          312 |               440 |        58,344<br>      ‘- mTokenMap java.util.HashMap @ 0x12db86a0                                       |            1 |           40 |               440 |        30,248<br>         ‘- table java.util.HashMap$Node[2048] @ 0x12db91f8                             |            1 |        8,208 |               440 |        30,192<br>            ‘- [1511] java.util.HashMap$Node @ 0x12dbe658                               |            1 |           24 |               440 |            24<br>               ‘- value com.android.server.wm.AppWindowToken @ 0x14be0810               |            1 |          200 |               440 |         1,272<br>                  ‘- mAppAnimator com.android.server.wm.AppWindowAnimator @ 0x14be0b80  |            1 |           96 |               440 |           288<br>                     ‘- mAllAppWinAnimators java.util.ArrayList @ 0x14be0d98            |            1 |           24 |               440 |            80<br>                        ‘- elementData java.lang.Object[10] @ 0x14be0e40                |            1 |           56 |               440 |            56<br>                           ‘- [0] com.android.server.wm.WindowStateAnimator @ 0x14be0e78|            1 |          224 |               440 |           544</p><pre><code>&apos;- mWin com.android.server.wm.WindowState @ 0x14be1080    |            1 |          440 |               440 |         2,536</code></pre><hr><p>对象实例:mAppAnimator com.android.server.wm.AppWindowAnimator @ 0x14be0b80<br>说明:<br>都是mDisplayContent的mTokenMap持有.没有释放.</p><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-2"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-2" class="headerlink" title="Class Name                                                                            | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                                                                            | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack                  |            1 |          512 |                96 |         5,064<br>‘- mFocusedApp com.android.server.wm.AppWindowToken @ 0x14bc22d8                      |            1 |          200 |                96 |         1,256<br>   ‘- mDisplayContent com.android.server.wm.DisplayContent @ 0x12db7bd0               |            1 |          312 |                96 |        58,344<br>      ‘- mTokenMap java.util.HashMap @ 0x12db86a0                                     |            1 |           40 |                96 |        30,248<br>         ‘- table java.util.HashMap$Node[2048] @ 0x12db91f8                           |            1 |        8,208 |                96 |        30,192<br>            ‘- [1511] java.util.HashMap$Node @ 0x12dbe658                             |            1 |           24 |                96 |            24<br>               ‘- value com.android.server.wm.AppWindowToken @ 0x14be0810             |            1 |          200 |                96 |         1,272</p><pre><code>&apos;- mAppAnimator com.android.server.wm.AppWindowAnimator @ 0x14be0b80|            1 |           96 |                96 |           288</code></pre><hr><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-3"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-3" class="headerlink" title="Class Name                                                                            | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                                                                            | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack                  |            1 |          512 |                96 |         5,064<br>‘- mFocusedApp com.android.server.wm.AppWindowToken @ 0x14bc22d8                      |            1 |          200 |                96 |         1,256<br>   ‘- mDisplayContent com.android.server.wm.DisplayContent @ 0x12db7bd0               |            1 |          312 |                96 |        58,344<br>      ‘- mTokenMap java.util.HashMap @ 0x12db86a0                                     |            1 |           40 |                96 |        30,248<br>         ‘- table java.util.HashMap$Node[2048] @ 0x12db91f8                           |            1 |        8,208 |                96 |        30,192<br>            ‘- [792] java.util.HashMap$Node @ 0x12dbccc0                              |            1 |           24 |                96 |            48<br>               ‘- value com.android.server.wm.AppWindowToken @ 0x12ead060             |            1 |          200 |                96 |         1,296</p><pre><code>&apos;- mAppAnimator com.android.server.wm.AppWindowAnimator @ 0x12eada90|            1 |           96 |                96 |           288</code></pre><hr><h2 id="Class-Name-Shallow-Heap-Retained-Heap-Percentage"><a href="#Class-Name-Shallow-Heap-Retained-Heap-Percentage" class="headerlink" title="Class Name                                          | Shallow Heap | Retained Heap | Percentage"></a>Class Name                                          | Shallow Heap | Retained Heap | Percentage</h2><h2 id="com-android-server-wm-AppWindowAnimator-0x14be0b80-96-288-0-00"><a href="#com-android-server-wm-AppWindowAnimator-0x14be0b80-96-288-0-00" class="headerlink" title="com.android.server.wm.AppWindowAnimator @ 0x14be0b80|           96 |           288 |      0.00%"></a>com.android.server.wm.AppWindowAnimator @ 0x14be0b80|           96 |           288 |      0.00%</h2><p>应用died的时候会主动释放:</p><p>01-02 12:44:01.223   746  1581 W jackywei: removeWindowToken<br>01-02 12:44:01.225   746  1581 W jackywei: java.lang.Throwable<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeWindowToken(DisplayContent.java:832)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeAppToken(DisplayContent.java:858)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.AppWindowContainerController.removeContainer(AppWindowContainerController.java:246)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityRecord.removeWindowContainer(ActivityRecord.java:1001)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4169)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeHistoryRecordsForAppLocked(ActivityStack.java:4544)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.handleAppDiedLocked(ActivityStack.java:5095)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStackSupervisor.handleAppDiedLocked(ActivityStackSupervisor.java:2008)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.handleAppDiedLocked(ActivityManagerService.java:5413)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.appDiedLocked(ActivityManagerService.java:5594)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService$AppDeathRecipient.binderDied(ActivityManagerService.java:1641)<br>01-02 12:44:01.225   746  1581 W jackywei:     at android.os.BinderProxy.sendDeathNotice(Binder.java:844)<br>01-02 12:44:01.226   746  1581 W jackywei: ++++++++++++++++++++removeWindowToken++++++++++++++++++++<br>01-02 12:44:01.227   746  1581 W jackywei: removeWindowToken<br>01-02 12:44:01.228   746  1581 W jackywei: java.lang.Throwable<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeWindowToken(DisplayContent.java:832)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.WindowToken.removeImmediately(WindowToken.java:239)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.removeImmediately(AppWindowToken.java:528)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.removeIfPossible(AppWindowToken.java:535)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.onRemovedFromDisplay(AppWindowToken.java:601)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeAppToken(DisplayContent.java:871)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowContainerController.removeContainer(AppWindowContainerController.java:246)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityRecord.removeWindowContainer(ActivityRecord.java:1001)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4169)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeHistoryRecordsForAppLocked(ActivityStack.java:4544)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.handleAppDiedLocked(ActivityStack.java:5095)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStackSupervisor.handleAppDiedLocked(ActivityStackSupervisor.java:2008)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.handleAppDiedLocked(ActivityManagerService.java:5413)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.appDiedLocked(ActivityManagerService.java:5594)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService$AppDeathRecipient.binderDied(ActivityManagerService.java:1641)<br>01-02 12:44:01.228   746  1581 W jackywei:     at android.os.BinderProxy.sendDeathNotice(Binder.java:844)<br>01-02 12:44:01.228   746  1581 W jackywei: ++++++++++++++++++++removeWindowToken++++++++++++++++++++</p><p>ActivityManagerService.java:</p><p>private final void handleAppDiedLocked(ProcessRecord app,<br>            boolean restarting, boolean allowRestart) {</p><p>// Remove this application’s activities from active lists.<br>boolean hasVisibleActivities = mStackSupervisor.handleAppDiedLocked(app);</p><p>——–&gt;</p><p>ActivityStackSupervisor.java:<br>boolean handleAppDiedLocked(ProcessRecord app) {<br>    boolean hasVisibleActivities = false;<br>    for (int displayNdx = mActivityDisplays.size() - 1; displayNdx &gt;= 0; –displayNdx) {<br>        final ArrayList<activitystack> stacks = mActivityDisplays.valueAt(displayNdx).mStacks;<br>        for (int stackNdx = stacks.size() - 1; stackNdx &gt;= 0; –stackNdx) {<br>            hasVisibleActivities |= stacks.get(stackNdx).handleAppDiedLocked(app);<br>        }<br>    }<br>    return hasVisibleActivities;<br>}</activitystack></p><p>mActivityDisplays ? 大小:mSize = 1</p><h2 id="Type-Name-Value-2"><a href="#Type-Name-Value-2" class="headerlink" title="Type|Name             |Value"></a>Type|Name             |Value</h2><h2 id="ref-mActivityDisplays-android-util-SparseArray-0x14bc0ad0"><a href="#ref-mActivityDisplays-android-util-SparseArray-0x14bc0ad0" class="headerlink" title="ref |mActivityDisplays|android.util.SparseArray @ 0x14bc0ad0"></a>ref |mActivityDisplays|android.util.SparseArray @ 0x14bc0ad0</h2><h2 id="Type-Name-Value-3"><a href="#Type-Name-Value-3" class="headerlink" title="Type   |Name            |Value"></a>Type   |Name            |Value</h2><p>boolean|mGarbage        |false<br>ref    |mKeys           |int[11] @ 0x14bd1160<br>int    |mSize           |1<br>ref    |mValues         |java.lang.Object[11] @ 0x14bd1198<br>ref    |shadow$<em>klass</em>  |class android.util.SparseArray @ 0x7036c860</p><h2 id="int-shadow-monitor-0"><a href="#int-shadow-monitor-0" class="headerlink" title="int    |shadow$monitor|0"></a>int    |shadow$<em>monitor</em>|0</h2><p>大小:mSize = 1<br>boolean handleAppDiedLocked(ProcessRecord app) {<br>    boolean hasVisibleActivities = false;<br>    for (int displayNdx = mActivityDisplays.size() - 1; displayNdx &gt;= 0; –displayNdx) {<br>        final ArrayList<activitystack> stacks = mActivityDisplays.valueAt(displayNdx).mStacks;<br>        for (int stackNdx = stacks.size() - 1; stackNdx &gt;= 0; –stackNdx) {<br>            hasVisibleActivities |= stacks.get(stackNdx).handleAppDiedLocked(app);<br>        }<br>    }<br>    return hasVisibleActivities;<br>}</activitystack></p><h2 id="Type-Name-Value-4"><a href="#Type-Name-Value-4" class="headerlink" title="Type|Name   |Value"></a>Type|Name   |Value</h2><h2 id="ref-mStacks-java-util-ArrayList-0x12dc5ec0"><a href="#ref-mStacks-java-util-ArrayList-0x12dc5ec0" class="headerlink" title="ref |mStacks|java.util.ArrayList @ 0x12dc5ec0"></a>ref |mStacks|java.util.ArrayList @ 0x12dc5ec0</h2><p>mStacks: size 3</p><h2 id="Type-Name-Value-5"><a href="#Type-Name-Value-5" class="headerlink" title="Type|Name            |Value"></a>Type|Name            |Value</h2><p>ref |elementData     |java.lang.Object[10] @ 0x12dc61c0<br>int |size            |3<br>int |modCount        |12097<br>ref |shadow$<em>klass</em>  |class java.util.ArrayList @ 0x6ff70c38</p><h2 id="int-shadow-monitor-0-1"><a href="#int-shadow-monitor-0-1" class="headerlink" title="int |shadow$monitor|0"></a>int |shadow$<em>monitor</em>|0</h2><p>———&gt;</p><p>ActivityStack.java :</p><p>boolean handleAppDiedLocked(ProcessRecord app) {<br>    if (mPausingActivity != null &amp;&amp; mPausingActivity.app == app) {<br>        if (DEBUG_PAUSE || DEBUG_CLEANUP) Slog.v(TAG_PAUSE,<br>                “App died while pausing: “ + mPausingActivity);<br>        mPausingActivity = null;<br>    }<br>    if (mLastPausedActivity != null &amp;&amp; mLastPausedActivity.app == app) {<br>        mLastPausedActivity = null;<br>        mLastNoHistoryActivity = null;<br>    }</p><pre><code>return removeHistoryRecordsForAppLocked(app);</code></pre><p>}</p><p>private boolean removeHistoryRecordsForAppLocked(ProcessRecord app) {<br>    removeHistoryRecordsForAppLocked(mLRUActivities, app, “mLRUActivities”);<br>    removeHistoryRecordsForAppLocked(mStackSupervisor.mStoppingActivities, app,<br>            “mStoppingActivities”);<br>    removeHistoryRecordsForAppLocked(mStackSupervisor.mGoingToSleepActivities, app,<br>            “mGoingToSleepActivities”);<br>    removeHistoryRecordsForAppLocked(mStackSupervisor.mActivitiesWaitingForVisibleActivity, app,<br>            “mActivitiesWaitingForVisibleActivity”);<br>    removeHistoryRecordsForAppLocked(mStackSupervisor.mFinishingActivities, app,<br>            “mFinishingActivities”);</p><pre><code>boolean hasVisibleActivities = false;// Clean out the history list.int i = numActivities();if (DEBUG_CLEANUP) Slog.v(TAG_CLEANUP,        &quot;Removing app &quot; + app + &quot; from history with &quot; + i + &quot; entries&quot;);for (int taskNdx = mTaskHistory.size() - 1; taskNdx &gt;= 0; --taskNdx) {    final ArrayList&lt;ActivityRecord&gt; activities = mTaskHistory.get(taskNdx).mActivities;    for (int activityNdx = activities.size() - 1; activityNdx &gt;= 0; --activityNdx) {        final ActivityRecord r = activities.get(activityNdx);        --i;        if (DEBUG_CLEANUP) Slog.v(TAG_CLEANUP,                &quot;Record #&quot; + i + &quot; &quot; + r + &quot;: app=&quot; + r.app);        if (r.app == app) {//如果这里没有相等的APP实例,remove 就一直是 false.            if (r.visible) {                hasVisibleActivities = true;            }            final boolean remove;            if ((!r.haveState &amp;&amp; !r.stateNotNeeded) || r.finishing) {//这里的三个状态                // Don&apos;t currently have state for the activity, or                // it is finishing -- always remove it.                remove = true;            } else if (!r.visible &amp;&amp; r.launchCount &gt; 2 &amp;&amp;                    r.lastLaunchTime &gt; (SystemClock.uptimeMillis() - 60000)) {                // We have launched this activity too many times since it was                // able to run, so give up and remove it.                // (Note if the activity is visible, we don&apos;t remove the record.                // We leave the dead window on the screen but the process will                // not be restarted unless user explicitly tap on it.)                remove = true;            } else {                // The process may be gone, but the activity lives on!                remove = false;            }            if (remove) {                if (DEBUG_ADD_REMOVE || DEBUG_CLEANUP) Slog.i(TAG_ADD_REMOVE,                        &quot;Removing activity &quot; + r + &quot; from stack at &quot; + i                        + &quot;: haveState=&quot; + r.haveState                        + &quot; stateNotNeeded=&quot; + r.stateNotNeeded                        + &quot; finishing=&quot; + r.finishing                        + &quot; state=&quot; + r.state + &quot; callers=&quot; + Debug.getCallers(5));                if (!r.finishing) {                    Slog.w(TAG, &quot;Force removing &quot; + r + &quot;: app died, no saved state&quot;);                    EventLog.writeEvent(EventLogTags.AM_FINISH_ACTIVITY,                            r.userId, System.identityHashCode(r),                            r.getTask().taskId, r.shortComponentName,                            &quot;proc died without state saved&quot;);                    if (r.state == ActivityState.RESUMED) {                        mService.updateUsageStats(r, false);                    }                }            } else {                // We have the current state for this activity, so                // it can be restarted later when needed.                if (DEBUG_ALL) Slog.v(TAG, &quot;Keeping entry, setting app to null&quot;);                if (DEBUG_APP) Slog.v(TAG_APP,                        &quot;Clearing app during removeHistory for activity &quot; + r);                r.app = null;                // Set nowVisible to previous visible state. If the app was visible while                // it died, we leave the dead window on screen so it&apos;s basically visible.                // This is needed when user later tap on the dead window, we need to stop                // other apps when user transfers focus to the restarted activity.                r.nowVisible = r.visible;                if (!r.haveState) {                    if (DEBUG_SAVED_STATE) Slog.i(TAG_SAVED_STATE,                            &quot;App died, clearing saved state of &quot; + r);                    r.icicle = null;                }            }            cleanUpActivityLocked(r, true, true);            if (remove) {                removeActivityFromHistoryLocked(r, &quot;appDied&quot;);//在这里会释放removeWindowToken            }        }    }}return hasVisibleActivities;</code></pre><p>}</p><p>private void removeHistoryRecordsForAppLocked(ArrayList<activityrecord> list,<br>        ProcessRecord app, String listName) {<br>    int i = list.size();<br>    if (DEBUG_CLEANUP) Slog.v(TAG_CLEANUP,<br>        “Removing app “ + app + “ from list “ + listName + “ with “ + i + “ entries”);<br>    while (i &gt; 0) {<br>        i–;<br>        ActivityRecord r = list.get(i);<br>        if (DEBUG_CLEANUP) Slog.v(TAG_CLEANUP, “Record #” + i + “ “ + r);<br>        if (r.app == app) {<br>            if (DEBUG_CLEANUP) Slog.v(TAG_CLEANUP, “—&gt; REMOVING this entry!”);<br>            list.remove(i);<br>            removeTimeoutsForActivityLocked(r);<br>        }<br>    }<br>}</activityrecord></p><h2 id="Class-Name-Shallow-Heap-Retained-Heap-Percentage-1"><a href="#Class-Name-Shallow-Heap-Retained-Heap-Percentage-1" class="headerlink" title="Class Name                                       | Shallow Heap | Retained Heap | Percentage"></a>Class Name                                       | Shallow Heap | Retained Heap | Percentage</h2><h2 id="com-android-server-am-ActivityRecord-0x14bf1378-384-3-208-0-01"><a href="#com-android-server-am-ActivityRecord-0x14bf1378-384-3-208-0-01" class="headerlink" title="com.android.server.am.ActivityRecord @ 0x14bf1378|          384 |         3,208 |      0.01%"></a>com.android.server.am.ActivityRecord @ 0x14bf1378|          384 |         3,208 |      0.01%</h2><h2 id="Type-Name-Value-6"><a href="#Type-Name-Value-6" class="headerlink" title="Type   |Name                             |Value"></a>Type   |Name                             |Value</h2><p>ref    |app                              |null<br>ref    |appInfo                          |android.content.pm.ApplicationInfo @ 0x12de8bb8<br>ref    |appTimeTracker                   |null<br>ref    |appToken                         |com.android.server.am.ActivityRecord$Token @ 0x14bf0340<br>ref    |compat                           |android.content.res.CompatibilityInfo @ 0x14bf1548<br>boolean|componentSpecified               |false<br>int    |configChangeFlags                |0<br>ref    |connections                      |null<br>long   |cpuTimeAtResume                  |0<br>long   |createTime                       |1529665655297<br>boolean|deferRelaunchUntilPaused         |false<br>boolean|delayedResume                    |false<br>long   |displayStartTime                 |0<br>boolean|finishing                        |false<br>boolean|forceNewConfig                   |false<br>boolean|frontOfTask                      |false<br>boolean|frozenBeforeDestroy              |false<br>boolean|fullscreen                       |true<br>long   |fullyDrawnStartTime              |0<br>boolean|hasBeenLaunched                  |true<br>boolean|haveState                        |true<br>ref    |icicle                           |android.os.Bundle @ 0x14bf1560<br>int    |icon                             |2130903043<br>boolean|idle                             |true<br>boolean|immersive                        |false<br>boolean|inHistory                        |true<br>ref    |info                             |android.content.pm.ActivityInfo @ 0x149cd150<br>ref    |intent                           |android.content.Intent @ 0x14bf1578<br>boolean|keysPaused                       |false<br>int    |labelRes                         |2131954418<br>long   |lastLaunchTime                   |82773638<br>long   |lastVisibleTime                  |82780913<br>int    |launchCount                      |0<br>boolean|launchFailed                     |false<br>int    |launchMode                       |0<br>long   |launchTickTime                   |0<br>ref    |launchedFromPackage              |java.lang.String @ 0x14bf15b8<br>int    |launchedFromPid                  |-1<br>int    |launchedFromUid                  |10036<br>boolean|launching                        |true<br>int    |logo                             |2130903043<br>int    |mActivityType                    |0<br>ref    |mBounds                          |android.graphics.Rect @ 0x14bf15e0<br>boolean|mDeferHidingClient               |false<br>ref    |mHorizontalSizeConfigurations    |int[5] @ 0x14bf15f8<br>ref    |mLastReportedConfiguration       |android.util.MergedConfiguration @ 0x14bf1618<br>int    |mLastReportedDisplayId           |0<br>boolean|mLastReportedMultiWindowMode     |false<br>boolean|mLastReportedPictureInPictureMode|false<br>boolean|mLaunchTaskBehind                |false<br>ref    |mPerf                            |android.util.BoostFramework @ 0x14bf1630<br>ref    |mPerf_iop                        |android.util.BoostFramework @ 0x14bf1640<br>int    |mRotationAnimationHint           |-1<br>boolean|mShowWhenLocked                  |false<br>ref    |mSmallestSizeConfigurations      |int[8] @ 0x14bf1650<br>ref    |mStackSupervisor                 |com.android.server.am.ActivityStackSupervisor @ 0x12dc5dd8<br>int    |mStartingWindowState             |2<br>boolean|mTaskOverlay                     |false<br>ref    |mTmpBounds                       |android.graphics.Rect @ 0x14bf1680<br>ref    |mTmpConfig                       |android.content.res.Configuration @ 0x14bf1698<br>boolean|mTurnScreenOn                    |false<br>boolean|mUpdateTaskThumbnailWhenHidden   |false<br>ref    |mUxPerf                          |android.util.BoostFramework @ 0x14bf1708<br>ref    |mVerticalSizeConfigurations      |int[4] @ 0x14bf1718<br>ref    |mWindowContainerController       |com.android.server.wm.AppWindowContainerController @ 0x14bf00e0<br>ref    |newIntents                       |null<br>boolean|noDisplay                        |false<br>ref    |nonLocalizedLabel                |null<br>boolean|nowVisible                       |false<br>ref    |packageName                      |java.lang.String @ 0x12dd83d8<br>long   |pauseTime                        |82807597<br>ref    |pendingOptions                   |android.app.ActivityOptions @ 0x14bf1738<br>ref    |pendingResults                   |null<br>boolean|pendingVoiceInteractionStart     |false<br>int    |perfActivityBoostHandler         |-1<br>ref    |persistentState                  |null<br>ref    |pictureInPictureArgs             |android.app.PictureInPictureParams @ 0x14bf17b0<br>boolean|preserveWindowOnDeferredRelaunch |false<br>ref    |processName                      |java.lang.String @ 0x12dd83d8<br>ref    |realActivity                     |android.content.ComponentName @ 0x14bf17c8<br>int    |realTheme                        |2132017768<br>int    |requestCode                      |0<br>ref    |requestedVrComponent             |null<br>ref    |resolvedType                     |java.lang.String @ 0x14bf17d8<br>ref    |resultTo                         |null<br>ref    |resultWho                        |null<br>ref    |results                          |null<br>ref    |returningOptions                 |null<br>boolean|rootVoiceInteraction             |false<br>ref    |service                          |com.android.server.am.ActivityManagerService @ 0x12cd3f10<br>ref    |shortComponentName               |java.lang.String @ 0x14bf17f8<br>boolean|sleeping                         |false<br>long   |startTime                        |0<br>ref    |state                            |com.android.server.am.ActivityStack$ActivityState @ 0x12dc97b0<br>boolean|stateNotNeeded                   |false<br>boolean|stopped                          |true<br>ref    |stringName                       |java.lang.String @ 0x14bf1848<br>boolean|supportsEnterPipOnTaskSwitch     |true<br>ref    |task                             |com.android.server.am.TaskRecord @ 0x14bd2bf0<br>ref    |taskAffinity                     |java.lang.String @ 0x12dd83d8<br>ref    |taskDescription                  |android.app.ActivityManager$TaskDescription @ 0x14bf18b0<br>int    |theme                            |2132017768<br>ref    |uriPermissions                   |com.android.server.am.UriPermissionOwner @ 0x14bf18d8<br>int    |userId                           |0<br>boolean|visible                          |false<br>boolean|visibleIgnoringKeyguard          |false<br>ref    |voiceSession                     |null<br>int    |windowFlags                      |16777216<br>ref    |mFullConfiguration               |android.content.res.Configuration @ 0x14bf18f8<br>ref    |mMergedOverrideConfiguration     |android.content.res.Configuration @ 0x14bf1968<br>ref    |mOverrideConfiguration           |android.content.res.Configuration @ 0x14bf19d8<br>ref    |shadow$<em>klass</em>                   |class com.android.server.am.ActivityRecord @ 0x75a57328</p><h2 id="int-shadow-monitor-1950625590"><a href="#int-shadow-monitor-1950625590" class="headerlink" title="int    |shadow$monitor                 |-1950625590"></a>int    |shadow$<em>monitor</em>                 |-1950625590</h2><p>android@NSGWD180021:/data/workspace/issueAnalysis/system_server_memory_leak/0625$ adb shell ps | grep -i process<br>u0_a18         499   276 1063700  24232 SyS_epoll_wait aa9e3658 S com.google.process.gservices<br>u0_a55        2683   276 1056528  21044 SyS_epoll_wait aa9e3658 S com.google.process.gapps<br>u0_a18        2693   276 1059040  25804 SyS_epoll_wait aa9e3658 S com.google.process.gapps<br>u0_a1         2871   276 1056696  26984 SyS_epoll_wait aa9e3658 S android.process.acore<br>u0_i460       3264   276 1062668  22268 SyS_epoll_wait aa9e3658 S com.android.chrome:sandboxed_process0<br>u0_a12        3977   276 1072972  32456 SyS_epoll_wait aa9e3658 S android.process.media</p><p>#################################################################################################################</p><h2 id="Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-4"><a href="#Class-Name-Ref-Objects-Shallow-Heap-Ref-Shallow-Heap-Retained-Heap-4" class="headerlink" title="Class Name                                                                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap"></a>Class Name                                                                              | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap</h2><p>com.android.server.wm.WindowManagerService @ 0x12cd2950 Native Stack                    |            1 |          512 |               440 |         5,064<br>‘- mFocusedApp com.android.server.wm.AppWindowToken @ 0x14bc22d8                        |            1 |          200 |               440 |         1,256<br>   ‘- mDisplayContent com.android.server.wm.DisplayContent @ 0x12db7bd0                 |            1 |          312 |               440 |        58,344<br>      ‘- mTokenMap java.util.HashMap @ 0x12db86a0                                       |            1 |           40 |               440 |        30,248<br>         ‘- table java.util.HashMap$Node[2048] @ 0x12db91f8                             |            1 |        8,208 |               440 |        30,192<br>            ‘- [1941] java.util.HashMap$Node @ 0x12dbf468                               |            1 |           24 |               440 |            24<br>               ‘- value com.android.server.wm.AppWindowToken @ 0x12e960b0               |            1 |          200 |               440 |         1,272<br>                  ‘- mAppAnimator com.android.server.wm.AppWindowAnimator @ 0x12e96a70  |            1 |           96 |               440 |           288<br>                     ‘- mAllAppWinAnimators java.util.ArrayList @ 0x12e96c88            |            1 |           24 |               440 |            80<br>                        ‘- elementData java.lang.Object[10] @ 0x12e96d30                |            1 |           56 |               440 |            56<br>                           ‘- [0] com.android.server.wm.WindowStateAnimator @ 0x12e96d68|            1 |          224 |               440 |           544</p><pre><code>&apos;- mWin com.android.server.wm.WindowState @ 0x12e96f70    |            1 |          440 |               440 |         2,496</code></pre><hr><p>mTokenMap</p><h2 id="Class-Name-Shallow-Heap-Retained-Heap-2"><a href="#Class-Name-Shallow-Heap-Retained-Heap-2" class="headerlink" title="Class Name                                                                            | Shallow Heap | Retained Heap"></a>Class Name                                                                            | Shallow Heap | Retained Heap</h2><h2 id="mPidsSelfLocked-com-android-server-am-ActivityManagerService-0x12cd3f10-Native-Stack-800-329-472"><a href="#mPidsSelfLocked-com-android-server-am-ActivityManagerService-0x12cd3f10-Native-Stack-800-329-472" class="headerlink" title="mPidsSelfLocked com.android.server.am.ActivityManagerService @ 0x12cd3f10 Native Stack|          800 |       329,472"></a>mPidsSelfLocked com.android.server.am.ActivityManagerService @ 0x12cd3f10 Native Stack|          800 |       329,472</h2><h2 id="Class-Name-Shallow-Heap-Retained-Heap-3"><a href="#Class-Name-Shallow-Heap-Retained-Heap-3" class="headerlink" title="Class Name                            | Shallow Heap | Retained Heap"></a>Class Name                            | Shallow Heap | Retained Heap</h2><h2 id="36-java-lang-Object-95-0x1563f618-392-392"><a href="#36-java-lang-Object-95-0x1563f618-392-392" class="headerlink" title="[36] java.lang.Object[95] @ 0x1563f618|          392 |           392"></a>[36] java.lang.Object[95] @ 0x1563f618|          392 |           392</h2><p>I use the sdk tools catch the systrace log ,the log indicate that the android.anim thread spend a lot of cpu time.<br>And I catch the traceview log, the log indicate that the com.android.server.wm.WindowContainer.forAllWindows function spend a lot of time to run in the android.anim thread.</p><p>And I catch the window service log,show that there are so lot of AppWindowToken is not released.</p><p>直接debug system_server 看能否释放</p><p>sudo mount -t cifs -o username=”android”,password=”mobile#5” //10.1.6.36/android /mnt/10.1.6.36</p><h1 id="用eclipse远程调试"><a href="#用eclipse远程调试" class="headerlink" title="用eclipse远程调试"></a>用eclipse远程调试</h1><h1 id="删除一个APP-看能否-正常释放"><a href="#删除一个APP-看能否-正常释放" class="headerlink" title="删除一个APP 看能否 正常释放:"></a>删除一个APP 看能否 正常释放:</h1><p>01-02 12:44:01.223   746  1581 W jackywei: removeWindowToken<br>01-02 12:44:01.225   746  1581 W jackywei: java.lang.Throwable<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeWindowToken(DisplayContent.java:832)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeAppToken(DisplayContent.java:858)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.wm.AppWindowContainerController.removeContainer(AppWindowContainerController.java:246)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityRecord.removeWindowContainer(ActivityRecord.java:1001)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4169)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeHistoryRecordsForAppLocked(ActivityStack.java:4544)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStack.handleAppDiedLocked(ActivityStack.java:5095)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityStackSupervisor.handleAppDiedLocked(ActivityStackSupervisor.java:2008)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.handleAppDiedLocked(ActivityManagerService.java:5413)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.appDiedLocked(ActivityManagerService.java:5594)<br>01-02 12:44:01.225   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService$AppDeathRecipient.binderDied(ActivityManagerService.java:1641)<br>01-02 12:44:01.225   746  1581 W jackywei:     at android.os.BinderProxy.sendDeathNotice(Binder.java:844)<br>01-02 12:44:01.226   746  1581 W jackywei: ++++++++++++++++++++removeWindowToken++++++++++++++++++++<br>01-02 12:44:01.227   746  1581 W jackywei: removeWindowToken<br>01-02 12:44:01.228   746  1581 W jackywei: java.lang.Throwable<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeWindowToken(DisplayContent.java:832)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.WindowToken.removeImmediately(WindowToken.java:239)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.removeImmediately(AppWindowToken.java:528)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.removeIfPossible(AppWindowToken.java:535)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowToken.onRemovedFromDisplay(AppWindowToken.java:601)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.DisplayContent.removeAppToken(DisplayContent.java:871)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.wm.AppWindowContainerController.removeContainer(AppWindowContainerController.java:246)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityRecord.removeWindowContainer(ActivityRecord.java:1001)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4169)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.removeHistoryRecordsForAppLocked(ActivityStack.java:4544)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStack.handleAppDiedLocked(ActivityStack.java:5095)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityStackSupervisor.handleAppDiedLocked(ActivityStackSupervisor.java:2008)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.handleAppDiedLocked(ActivityManagerService.java:5413)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService.appDiedLocked(ActivityManagerService.java:5594)<br>01-02 12:44:01.228   746  1581 W jackywei:     at com.android.server.am.ActivityManagerService$AppDeathRecipient.binderDied(ActivityManagerService.java:1641)<br>01-02 12:44:01.228   746  1581 W jackywei:     at android.os.BinderProxy.sendDeathNotice(Binder.java:844)<br>01-02 12:44:01.228   746  1581 W jackywei: ++++++++++++++++++++removeWindowToken++++++++++++++++++++</p><p>DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1525<br>DisplayContent.findFocusedWindow() line: 2265<br>RootWindowContainer.computeFocusedWindow() line: 170<br>WindowManagerService.updateFocusedWindowLocked(int, boolean) line: 5993<br>DisplayContent.layoutAndAssignWindowLayersIfNeeded() line: 2289<br>StackWindowController.positionChildAtTop(TaskWindowContainerController, boolean) line: 159<br>ActivityStack.insertTaskAtTop(TaskRecord, ActivityRecord) line: 2844<br>ActivityStack.moveTaskToFrontLocked(TaskRecord, boolean, ActivityOptions, AppTimeTracker, String) line: 4620<br>ActivityStarter.setTargetStackAndMoveToFrontIfNeeded(ActivityRecord) line: 1613<br>ActivityStarter.startActivityUnchecked(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1096<br>ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1000<br>ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>Thread [Binder:923_1B] (Suspended (breakpoint at line 3402 in DisplayContent$TaskStackContainers))<br>    owns: WindowHashMap  (id=10090)<br>    owns: ActivityManagerService  (id=165)<br>    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3402<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1533<br>    DisplayContent.findFocusedWindow() line: 2265<br>    RootWindowContainer.computeFocusedWindow() line: 170<br>    WindowManagerService.updateFocusedWindowLocked(int, boolean) line: 5993<br>    DisplayContent.layoutAndAssignWindowLayersIfNeeded() line: 2289<br>    StackWindowController.positionChildAtTop(TaskWindowContainerController, boolean) line: 159<br>    ActivityStack.insertTaskAtTop(TaskRecord, ActivityRecord) line: 2844<br>    ActivityStack.moveTaskToFrontLocked(TaskRecord, boolean, ActivityOptions, AppTimeTracker, String) line: 4620<br>    ActivityStarter.setTargetStackAndMoveToFrontIfNeeded(ActivityRecord) line: 1613<br>    ActivityStarter.startActivityUnchecked(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1096<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1000<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>Thread [android.anim] (Suspended (breakpoint at line 400 in InputMonitor))<br>    owns: WindowHashMap  (id=10090)<br>    InputMonitor.updateInputWindowsLw(boolean) line: 400<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2241<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    ViewRootImpl.relayoutWindow(WindowManager$LayoutParams, int, boolean) line: 6141<br>    ViewRootImpl.performTraversals() line: 1905<br>    ViewRootImpl.doTraversal() line: 1396<br>    ViewRootImpl$TraversalRunnable.run() line: 6773<br>    Choreographer$CallbackRecord.run(long) line: 966<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 713<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [android.anim] (Suspended (breakpoint at line 632 in WindowContainer))<br>    owns: WindowHashMap  (id=10090)<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 632<br>    DisplayContent.updateWindowsForAnimator(WindowAnimator) line: 2616<br>    WindowAnimator.animate(long) line: 201<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [android.anim] (Suspended (breakpoint at line 1525 in DisplayContent))<br>    owns: WindowHashMap  (id=10090)<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1525<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.prepareWindowSurfaces() line: 2637<br>    WindowAnimator.animate(long) line: 203<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><h1 id="查-看traceview-文件再分析一下"><a href="#查-看traceview-文件再分析一下" class="headerlink" title="查 看traceview 文件再分析一下"></a>查 看traceview 文件再分析一下</h1><h1 id="animate"><a href="#animate" class="headerlink" title="animate"></a>animate</h1><p>traceview 显示 animate 占了很大一部分运行时间CPU时间</p><pre><code>    mAnimationFrameCallback = frameTimeNs -&gt; {        synchronized (mService.mWindowMap) {            mAnimationFrameCallbackScheduled = false;        }        animate(frameTimeNs);    };void scheduleAnimation() {    if (!mAnimationFrameCallbackScheduled) {        mAnimationFrameCallbackScheduled = true;        mChoreographer.postFrameCallback(mAnimationFrameCallback); //放到渲染线程里面    }}private void cancelAnimation() {    if (mAnimationFrameCallbackScheduled) {        mAnimationFrameCallbackScheduled = false;        mChoreographer.removeFrameCallback(mAnimationFrameCallback);//移出渲染线程里面    }}private void animate(long frameTimeNs) {    synchronized (mService.mWindowMap) {        if (!mInitialized) {            return;        }        // Schedule next frame already such that back-pressure happens continuously        scheduleAnimation();//animate每次都会调用    }</code></pre><p>mAnimationFrameCallbackScheduled 很重要,cancelAnimation()才能致 false</p><p>//下面的代码才能调 cancelAnimation<br>                if (mService.mDragState != null) {<br>                    mAnimating |= mService.mDragState.stepAnimationLocked(mCurrentTime);<br>                }</p><pre><code>            if (!mAnimating) {                cancelAnimation();            }private final Consumer&lt;WindowState&gt; mUpdateWallpaperForAnimator = w -&gt; {    final WindowStateAnimator winAnimator = w.mWinAnimator;    if (winAnimator.mSurfaceController == null || !winAnimator.hasSurface()) {        return;    }    final int flags = w.mAttrs.flags;    // If this window is animating, make a note that we have an animating window and take    // care of a request to run a detached wallpaper animation.    if (winAnimator.mAnimating) {        if (winAnimator.mAnimation != null) {            if ((flags &amp; FLAG_SHOW_WALLPAPER) != 0                    &amp;&amp; winAnimator.mAnimation.getDetachWallpaper()) {                mTmpWindow = w;            }            final int color = winAnimator.mAnimation.getBackgroundColor();            if (color != 0) {                final TaskStack stack = w.getStack();                if (stack != null) {                    stack.setAnimationBackground(winAnimator, color);                }            }        }        mTmpWindowAnimator.setAnimating(true);    }    // If this window&apos;s app token is running a detached wallpaper animation, make a note so    // we can ensure the wallpaper is displayed behind it.    final AppWindowAnimator appAnimator = winAnimator.mAppAnimator;    if (appAnimator != null &amp;&amp; appAnimator.animation != null            &amp;&amp; appAnimator.animating) {        if ((flags &amp; FLAG_SHOW_WALLPAPER) != 0                &amp;&amp; appAnimator.animation.getDetachWallpaper()) {            mTmpWindow = w;        }        final int color = appAnimator.animation.getBackgroundColor();        if (color != 0) {            final TaskStack stack = w.getStack();            if (stack != null) {                stack.setAnimationBackground(winAnimator, color);            }        }    }};@Overrideboolean forAllWindows(ToBooleanFunction&lt;WindowState&gt; callback, boolean traverseTopToBottom) {    if (mChildren.isEmpty()) {        // The window has no children so we just return it.        return applyInOrderWithImeWindows(callback, traverseTopToBottom);// 这里?    }    if (traverseTopToBottom) {        return forAllWindowTopToBottom(callback);    } else {        return forAllWindowBottomToTop(callback);    }}private final Consumer&lt;WindowState&gt; mUpdateWallpaperForAnimator = w -&gt; {    final WindowStateAnimator winAnimator = w.mWinAnimator;    if (winAnimator.mSurfaceController == null || !winAnimator.hasSurface()) {        return;    }    final int flags = w.mAttrs.flags;    // If this window is animating, make a note that we have an animating window and take    // care of a request to run a detached wallpaper animation.    if (winAnimator.mAnimating) {// ?在这里?        if (winAnimator.mAnimation != null) {            if ((flags &amp; FLAG_SHOW_WALLPAPER) != 0                    &amp;&amp; winAnimator.mAnimation.getDetachWallpaper()) {                mTmpWindow = w;            }            final int color = winAnimator.mAnimation.getBackgroundColor();            if (color != 0) {                final TaskStack stack = w.getStack();                if (stack != null) {                    stack.setAnimationBackground(winAnimator, color);                }            }        }        mTmpWindowAnimator.setAnimating(true);    }    // If this window&apos;s app token is running a detached wallpaper animation, make a note so    // we can ensure the wallpaper is displayed behind it.    final AppWindowAnimator appAnimator = winAnimator.mAppAnimator;    if (appAnimator != null &amp;&amp; appAnimator.animation != null            &amp;&amp; appAnimator.animating) {        if ((flags &amp; FLAG_SHOW_WALLPAPER) != 0                &amp;&amp; appAnimator.animation.getDetachWallpaper()) {            mTmpWindow = w;        }        final int color = appAnimator.animation.getBackgroundColor();        if (color != 0) {            final TaskStack stack = w.getStack();            if (stack != null) {                stack.setAnimationBackground(winAnimator, color);            }        }    }};</code></pre><p>Thread [android.anim] (Suspended (breakpoint at line 435 in WindowAnimator))<br>    owns: WindowHashMap  (id=142)<br>    WindowAnimator.setAnimating(boolean) line: 435<br>    DisplayContent.lambda$-com_android_server_wm_DisplayContent_18415(WindowState) line: 408<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$4(Object) line: not available<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777<br>    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549<br>    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544<br>    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.updateWallpaperForAnimator(WindowAnimator) line: 2628<br>    WindowAnimator.animate(long) line: 202<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>private static final boolean OPTS_INPUT = SystemProperties.getBoolean(“persist.vendor.qti.inputopts.enable”,false);</p><p>//这个很关键???????<br>    // Enable/disable vsync for animations and drawing.<br>    private static final boolean USE_VSYNC = SystemProperties.getBoolean(<br>            “debug.choreographer.vsync”, true);</p><p>启动activity </p><p>Thread [Binder:3041_D] (Suspended)<br>    owns: Object  (id=374)<br>    owns: WindowHashMap  (id=142)<br>    owns: ActivityManagerService  (id=337)<br>    Choreographer.postCallbackDelayedInternal(int, Object, Object, long) line: 429<br>    Choreographer.postFrameCallbackDelayed(Choreographer$FrameCallback, long) line: 509<br>    Choreographer.postFrameCallback(Choreographer$FrameCallback) line: 489<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1010<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>POWER ON  唤醒<br>Thread [PowerManagerService] (Suspended (breakpoint at line 426 in Choreographer))<br>    Choreographer.postCallbackDelayedInternal(int, Object, Object, long) line: 426<br>    Choreographer.postCallbackDelayed(int, Runnable, Object, long) line: 415<br>    Choreographer.postCallback(int, Runnable, Object) line: 389<br>    RampAnimator.postAnimationCallback() line: 124<br>    RampAnimator.animateTo(int, int) line: 103<br>    DisplayPowerController.animateScreenBrightness(int, int) line: 986<br>    DisplayPowerController.updatePowerState() line: 802<br>    DisplayPowerController.-wrap6(DisplayPowerController) line: not available<br>    DisplayPowerController$DisplayControllerHandler.handleMessage(Message) line: 1421<br>    DisplayPowerController$DisplayControllerHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    ServiceThread(HandlerThread).run() line: 65<br>    ServiceThread.run() line: 46    </p><hr><pre><code>@Overrideboolean forAllWindows(ToBooleanFunction&lt;WindowState&gt; callback, boolean traverseTopToBottom) {    if (mChildren.isEmpty()) {//这里递归返回        // The window has no children so we just return it.        return applyInOrderWithImeWindows(callback, traverseTopToBottom);    }    if (traverseTopToBottom) {        return forAllWindowTopToBottom(callback);    } else {        return forAllWindowBottomToTop(callback);    }}</code></pre><p>设置 setAnimating 的true<br>Thread [android.anim] (Suspended (breakpoint at line 435 in WindowAnimator))<br>    owns: WindowHashMap  (id=142)<br>    WindowAnimator.setAnimating(boolean) line: 435<br>    DisplayContent.lambda$-com_android_server_wm_DisplayContent_18415(WindowState) line: 408<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$4(Object) line: not available<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777<br>    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    WallpaperWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$NonAppWindowContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.updateWallpaperForAnimator(WindowAnimator) line: 2628<br>    WindowAnimator.animate(long) line: 202<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [android.anim] (Suspended (breakpoint at line 231 in WindowAnimator))<br>    owns: WindowHashMap  (id=163)<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><hr><pre><code>case PAUSE_TIMEOUT_MSG: {    ActivityRecord r = (ActivityRecord)msg.obj;    // We don&apos;t at this point know if the activity is fullscreen,    // so we need to be conservative and assume it isn&apos;t.    Slog.w(TAG, &quot;Activity pause timeout for &quot; + r);    synchronized (mService) {        if (r.app != null) {            mService.logAppTooSlow(r.app, r.pauseTime, &quot;pausing &quot; + r);        }        activityPausedLocked(r.appToken, true);    }} break;</code></pre><p>Thread [ActivityManager] (Suspended (breakpoint at line 426 in Choreographer))<br>    owns: WindowHashMap  (id=163)<br>    owns: ActivityManagerService  (id=164)<br>    Choreographer.postCallbackDelayedInternal(int, Object, Object, long) line: 426<br>    Choreographer.postFrameCallbackDelayed(Choreographer$FrameCallback, long) line: 509<br>    Choreographer.postFrameCallback(Choreographer$FrameCallback) line: 489<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityStack$ActivityStackHandler.handleMessage(Message) line: 401<br>    ActivityStack$ActivityStackHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    ServiceThread(HandlerThread).run() line: 65<br>    ServiceThread.run() line: 46    </p><hr><p>Thread [Binder:14721_8] (Suspended (breakpoint at line 4035 in WindowState))<br>    owns: WindowHashMap  (id=146)<br>    owns: ActivityManagerService  (id=147)<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    WindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$NonAppWindowContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent.findFocusedWindow() line: 2267<br>    RootWindowContainer.computeFocusedWindow() line: 170<br>    WindowManagerService.updateFocusedWindowLocked(int, boolean) line: 5993<br>    DisplayContent.layoutAndAssignWindowLayersIfNeeded() line: 2291<br>    StackWindowController.positionChildAtTop(TaskWindowContainerController, boolean) line: 159<br>    ActivityStack.insertTaskAtTop(TaskRecord, ActivityRecord) line: 2844<br>    ActivityStack.moveTaskToFrontLocked(TaskRecord, boolean, ActivityOptions, AppTimeTracker, String) line: 4620<br>    ActivityStarter.setTargetStackAndMoveToFrontIfNeeded(ActivityRecord) line: 1613<br>    ActivityStarter.startActivityUnchecked(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1096<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1000<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>退出APP</p><p>Thread [Binder:14721_14] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><hr><p>启动APP   1</p><p>Thread [Binder:14721_11] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    owns: ActivityManagerService  (id=483)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1010<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>第2次 animate</p><p>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第3次 animate</p><p>Thread [Binder:14721_12] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><p>第4次 animate</p><p>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第5次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第6次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第7次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第8次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第9次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第10次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第11次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第12次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第13次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第14次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第15次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第16次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.lambda$-com_android_server_wm_WindowSurfacePlacer_5337() line: 108<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$12() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第17次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第18次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第19次 animate<br>Thread [Binder:14721_13] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><p>第20次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第21次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第22次 animate<br>Thread [Binder:14721_10] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><p>第23次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第24次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第25次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.lambda$-com_android_server_wm_WindowSurfacePlacer_5337() line: 108<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$12() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第26次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第27次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第28次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowState.setupWindowForRemoveOnExit() line: 1994<br>    WindowState.removeIfPossible(boolean) line: 1968<br>    WindowState.removeIfPossible() line: 1848<br>    WindowManagerService.removeWindow(Session, IWindow) line: 1733<br>    Session.remove(IWindow) line: 222<br>    TaskSnapshotSurface.remove() line: 260<br>    AppWindowContainerController.lambda$-com_android_server_wm_AppWindowContainerController_31045(WindowManagerPolicy$StartingSurface) line: 658<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$5() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第29次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第30次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第31次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第32次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第33次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.lambda$-com_android_server_wm_WindowSurfacePlacer_5337() line: 108<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$12() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第34次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>第35次 animate<br>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [android.ui] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=460)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2061<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    ViewRootImpl.relayoutWindow(WindowManager$LayoutParams, int, boolean) line: 6141<br>    ViewRootImpl.performTraversals() line: 1905<br>    ViewRootImpl.doTraversal() line: 1396<br>    ViewRootImpl$TraversalRunnable.run() line: 6773<br>    Choreographer$CallbackRecord.run(long) line: 966<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 713<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    UiThread(HandlerThread).run() line: 65<br>    UiThread(ServiceThread).run() line: 46<br>    UiThread.run() line: 42    </p><hr><p>Thread [android.anim] (Suspended (breakpoint at line 609 in WindowState))<br>    owns: WindowHashMap  (id=460)<br>    WindowState.<init>(WindowManagerService, Session, IWindow, WindowToken, WindowState, int, int, WindowManager$LayoutParams, int, int, boolean) line: 609<br>    WindowManagerService.addWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, Rect, Rect, Rect, InputChannel) line: 1396<br>    Session.addToDisplay(IWindow, int, WindowManager$LayoutParams, int, int, Rect, Rect, Rect, InputChannel) line: 202<br>    TaskSnapshotSurface.create(WindowManagerService, AppWindowToken, ActivityManager$TaskSnapshot) line: 199<br>    TaskSnapshotController.createStartingSurface(AppWindowToken, ActivityManager$TaskSnapshot) line: 203<br>    SnapshotStartingData.createStartingSurface(AppWindowToken) line: 39<br>    AppWindowContainerController.lambda$-com_android_server_wm_AppWindowContainerController_4735() line: 145<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$4() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </init></p><hr><p>启动APP的调用堆栈, scheduleAddStartingWindow调用mAddStartingWindow</p><p>Thread [Binder:14721_16] (Suspended (breakpoint at line 593 in AppWindowContainerController))<br>    owns: WindowHashMap  (id=460)<br>    owns: ActivityManagerService  (id=483)<br>    AppWindowContainerController.scheduleAddStartingWindow() line: 593<br>    AppWindowContainerController.createSnapshot(ActivityManager$TaskSnapshot) line: 603<br>    AppWindowContainerController.addStartingWindow(String, int, CompatibilityInfo, CharSequence, int, int, int, int, IBinder, boolean, boolean, boolean, boolean, boolean, boolean) line: 502<br>    ActivityRecord.showStartingWindow(ActivityRecord, boolean, boolean, boolean) line: 2241<br>    ActivityRecord.showStartingWindow(ActivityRecord, boolean, boolean) line: 2226<br>    ActivityStarter.setTargetStackAndMoveToFrontIfNeeded(ActivityRecord) line: 1657<br>    ActivityStarter.startActivityUnchecked(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1096<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1000<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>Thread [android.anim] (Suspended (breakpoint at line 609 in WindowState))<br>    owns: WindowHashMap  (id=460)<br>    WindowState.<init>(WindowManagerService, Session, IWindow, WindowToken, WindowState, int, int, WindowManager$LayoutParams, int, int, boolean) line: 609<br>    WindowManagerService.addWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, Rect, Rect, Rect, InputChannel) line: 1396<br>    Session.addToDisplay(IWindow, int, WindowManager$LayoutParams, int, int, Rect, Rect, Rect, InputChannel) line: 202<br>    TaskSnapshotSurface.create(WindowManagerService, AppWindowToken, ActivityManager$TaskSnapshot) line: 199<br>    TaskSnapshotController.createStartingSurface(AppWindowToken, ActivityManager$TaskSnapshot) line: 203<br>    SnapshotStartingData.createStartingSurface(AppWindowToken) line: 39<br>    AppWindowContainerController.lambda$-com_android_server_wm_AppWindowContainerController_4735() line: 145<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$4() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </init></p><p>这里释放WindowState</p><p>Thread [android.anim] (Suspended (breakpoint at line 1746 in WindowManagerService))<br>    owns: WindowHashMap  (id=460)<br>    WindowManagerService.postWindowRemoveCleanupLocked(WindowState) line: 1746<br>    WindowState.removeImmediately() line: 1842<br>    WindowState.destroySurface(boolean, boolean) line: 2842<br>    AppWindowToken.destroySurfaces(boolean) line: 649<br>    AppWindowToken.destroySurfaces() line: 633<br>    WindowState.onExitAnimationDone() line: 4257<br>    WindowStateAnimator.stepAnimationLocked(long) line: 474<br>    DisplayContent.lambda$-com_android_server_wm_DisplayContent_16102(WindowState) line: 339<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$3(Object) line: not available<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777<br>    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549<br>    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544<br>    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.updateWindowsForAnimator(WindowAnimator) line: 2618<br>    WindowAnimator.animate(long) line: 201<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [android.anim] (Suspended (breakpoint at line 1746 in WindowManagerService))<br>    owns: WindowHashMap  (id=1203)<br>    WindowManagerService.postWindowRemoveCleanupLocked(WindowState) line: 1746<br>    WindowState.removeImmediately() line: 1842<br>    WindowState.destroySurface(boolean, boolean) line: 2842<br>    AppWindowToken.destroySurfaces(boolean) line: 649<br>    AppWindowToken.destroySurfaces() line: 633<br>    WindowState.onExitAnimationDone() line: 4257<br>    WindowStateAnimator.stepAnimationLocked(long) line: 474<br>    DisplayContent.lambda$-com_android_server_wm_DisplayContent_16102(WindowState) line: 339<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$3(Object) line: not available<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777<br>    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549<br>    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544<br>    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.updateWindowsForAnimator(WindowAnimator) line: 2618<br>    WindowAnimator.animate(long) line: 201<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><h2 id="Class-Name-Shallow-Heap-Retained-Heap-4"><a href="#Class-Name-Shallow-Heap-Retained-Heap-4" class="headerlink" title="Class Name                                                              | Shallow Heap | Retained Heap"></a>Class Name                                                              | Shallow Heap | Retained Heap</h2><h2 id="mAllAppWinAnimators-com-android-server-wm-AppWindowAnimator-0x14eed5c0-96-288"><a href="#mAllAppWinAnimators-com-android-server-wm-AppWindowAnimator-0x14eed5c0-96-288" class="headerlink" title="mAllAppWinAnimators com.android.server.wm.AppWindowAnimator @ 0x14eed5c0|           96 |           288"></a>mAllAppWinAnimators com.android.server.wm.AppWindowAnimator @ 0x14eed5c0|           96 |           288</h2><h2 id="Class-Name-Shallow-Heap-Retained-Heap-5"><a href="#Class-Name-Shallow-Heap-Retained-Heap-5" class="headerlink" title="Class Name                                                    | Shallow Heap | Retained Heap"></a>Class Name                                                    | Shallow Heap | Retained Heap</h2><h2 id="mAppAnimator-com-android-server-wm-AppWindowToken-0x14eeac40-200-1-272"><a href="#mAppAnimator-com-android-server-wm-AppWindowToken-0x14eeac40-200-1-272" class="headerlink" title="mAppAnimator com.android.server.wm.AppWindowToken @ 0x14eeac40|          200 |         1,272"></a>mAppAnimator com.android.server.wm.AppWindowToken @ 0x14eeac40|          200 |         1,272</h2><p>Thread [android.ui] (Suspended (breakpoint at line 844 in DisplayContent))<br>    owns: WindowHashMap  (id=460)<br>    owns: ViewRootImpl  (id=1036)<br>    owns: Object  (id=538)<br>    DisplayContent.reParentWindowToken(WindowToken) line: 844<br>    WindowToken.onDisplayChanged(DisplayContent) line: 247<br>    WindowToken.<init>(WindowManagerService, IBinder, int, boolean, DisplayContent, boolean) line: 111<br>    WindowManagerService.addWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, Rect, Rect, Rect, InputChannel) line: 1329<br>    Session.addToDisplay(IWindow, int, WindowManager$LayoutParams, int, int, Rect, Rect, Rect, InputChannel) line: 202<br>    ViewRootImpl.setView(View, WindowManager$LayoutParams, View) line: 730<br>    WindowManagerGlobal.addView(View, ViewGroup$LayoutParams, Display, Window) line: 356<br>    WindowManagerImpl.addView(View, ViewGroup$LayoutParams) line: 94<br>    AppNotRespondingDialog(Dialog).show() line: 330<br>    AppErrors.handleShowAnrUi(Message) line: 1065<br>    ActivityManagerService$UiHandler.handleMessage(Message) line: 1817<br>    ActivityManagerService$UiHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    UiThread(HandlerThread).run() line: 65<br>    UiThread(ServiceThread).run() line: 46<br>    UiThread.run() line: 42    </init></p><hr><p>这里退出应用</p><p>调用cancelAnimation()的条件是:</p><pre><code>if (!mAnimating) {    cancelAnimation();}</code></pre><p>Thread [android.anim] (Suspended (breakpoint at line 413 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    WindowAnimator.cancelAnimation() line: 413<br>    WindowAnimator.animate(long) line: 231<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [android.anim] (Suspended (breakpoint at line 435 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    WindowAnimator.setAnimating(boolean) line: 435<br>    DisplayContent.lambda$-com_android_server_wm_DisplayContent_18415(WindowState) line: 408<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$4(Object) line: not available<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777<br>    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549<br>    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544<br>    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.updateWallpaperForAnimator(WindowAnimator) line: 2628<br>    WindowAnimator.animate(long) line: 202<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.lambda$-com_android_server_wm_WindowSurfacePlacer_5337() line: 108<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$12() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><hr><p>调用scheduleAnimation APP DIED</p><p>Thread [Binder:14721_1] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    owns: ActivityManagerService  (id=1204)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityManagerService.handleAppDiedLocked(ProcessRecord, boolean, boolean) line: 5435<br>    ActivityManagerService.appDiedLocked(ProcessRecord, int, IApplicationThread, boolean) line: 5594<br>    ActivityManagerService$AppDeathRecipient.binderDied() line: 1641<br>    BinderProxy.sendDeathNotice(IBinder$DeathRecipient) line: 844    </p><p>启动APP</p><p>Thread [Binder:14721_15] (Suspended (breakpoint at line 593 in AppWindowContainerController))<br>    owns: WindowHashMap  (id=1203)<br>    owns: ActivityManagerService  (id=1204)<br>    AppWindowContainerController.scheduleAddStartingWindow() line: 593<br>    AppWindowContainerController.createSnapshot(ActivityManager$TaskSnapshot) line: 603<br>    AppWindowContainerController.addStartingWindow(String, int, CompatibilityInfo, CharSequence, int, int, int, int, IBinder, boolean, boolean, boolean, boolean, boolean, boolean) line: 502<br>    ActivityRecord.showStartingWindow(ActivityRecord, boolean, boolean, boolean) line: 2241<br>    ActivityRecord.showStartingWindow(ActivityRecord, boolean, boolean) line: 2226<br>    ActivityStarter.setTargetStackAndMoveToFrontIfNeeded(ActivityRecord) line: 1657<br>    ActivityStarter.startActivityUnchecked(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1096<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1000<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>启动APP<br>Thread [Binder:14721_15] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    owns: ActivityManagerService  (id=1204)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1010<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>mAddStartingWindow 新增 WindowState</p><p>Thread [Binder:14721_15] (Suspended (breakpoint at line 762 in WindowSurfacePlacer))<br>    owns: WindowHashMap  (id=1203)<br>    owns: ActivityManagerService  (id=1204)<br>    WindowSurfacePlacer.requestTraversal() line: 762<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 203<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1010<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>Thread [android.anim] (Suspended (breakpoint at line 762 in WindowSurfacePlacer))<br>    owns: WindowHashMap  (id=1203)<br>    WindowSurfacePlacer.requestTraversal() line: 762<br>    WindowManagerService.finishDrawingWindow(Session, IWindow) line: 2363<br>    Session.finishDrawing(IWindow) line: 275<br>    TaskSnapshotSurface.reportDrawn() line: 402<br>    TaskSnapshotSurface.drawSnapshot() line: 292<br>    TaskSnapshotSurface.create(WindowManagerService, AppWindowToken, ActivityManager$TaskSnapshot) line: 222<br>    TaskSnapshotController.createStartingSurface(AppWindowToken, ActivityManager$TaskSnapshot) line: 203<br>    SnapshotStartingData.createStartingSurface(AppWindowToken) line: 39<br>    AppWindowContainerController.lambda$-com_android_server_wm_AppWindowContainerController_4735() line: 145<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$4() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>setAnimating 为true 就不会退出</p><p>Thread [android.anim] (Suspended (breakpoint at line 435 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    WindowAnimator.setAnimating(boolean) line: 435<br>    DisplayContent.lambda$-com_android_server_wm_DisplayContent_18415(WindowState) line: 408<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$4(Object) line: not available<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777<br>    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549<br>    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544<br>    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.updateWallpaperForAnimator(WindowAnimator) line: 2628<br>    WindowAnimator.animate(long) line: 202<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65    </p><pre><code>if (winAnimator.mAnimating) {    if (winAnimator.mAnimation != null) {        if ((flags &amp; FLAG_SHOW_WALLPAPER) != 0                &amp;&amp; winAnimator.mAnimation.getDetachWallpaper()) {            mTmpWindow = w;        }        final int color = winAnimator.mAnimation.getBackgroundColor();        if (color != 0) {            final TaskStack stack = w.getStack();            if (stack != null) {                stack.setAnimationBackground(winAnimator, color);            }        }    }    mTmpWindowAnimator.setAnimating(true);}</code></pre><p>Thread [Binder:14721_15] (Suspended (breakpoint at line 762 in WindowSurfacePlacer))<br>    owns: WindowHashMap  (id=1203)<br>    owns: ActivityManagerService  (id=1204)<br>    WindowSurfacePlacer.requestTraversal() line: 762<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 203<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>06-27 17:04:11.047   835  2286 V WindowManager: Starting animation in AppWindowToken{b6799a3 token=Token{d5ffdc3 ActivityRecord{d112627 u0 com.android.launcher3/.Launcher t13}}} @ 23774931 scale=1.0 allDrawn=true animating=false<br>06-27 17:04:11.048   835  2286 V WindowManager: Starting animation in AppWindowToken{fcdff0a token=Token{ad2718b ActivityRecord{51a9a7c u0 com.android.dialer/.app.DialtactsActivity t193}}} @ 23774931 scale=1.0 allDrawn=true animating=false<br>06-27 17:04:11.106   835  2286 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,9.0): com.android.dialer/com.android.dialer.app.DialtactsActivity<br>06-27 17:04:11.122   835  2286 I WindowManager: &lt;&lt;&lt; CLOSE TRANSACTION animate<br>06-27 17:04:11.596   835  2286 I WindowManager: &gt;&gt;&gt; OPEN TRANSACTION animate<br>06-27 17:04:11.650   835  2286 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,322.0): com.android.dialer/com.android.dialer.app.DialtactsActivity<br>06-27 17:04:11.661   835  2286 I WindowManager: &lt;&lt;&lt; CLOSE TRANSACTION animate<br>06-27 17:04:11.663   835  2286 I WindowManager: &gt;&gt;&gt; OPEN TRANSACTION animate<br>06-27 17:04:11.714   835  2286 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,939.0): com.android.dialer/com.android.dialer.app.DialtactsActivity<br>06-27 17:04:11.727   835  2286 I WindowManager: &lt;&lt;&lt; CLOSE TRANSACTION animate<br>06-27 17:04:11.739   835  2286 I WindowManager: &gt;&gt;&gt; OPEN TRANSACTION animate<br>06-27 17:04:11.740   835  2286 V WindowManager: Animation done in AppWindowToken{b6799a3 token=Token{d5ffdc3 ActivityRecord{d112627 u0 com.android.launcher3/.Launcher t13}}}: reportedVisible=false okToDisplay=true okToAnimate=true startingDisplayed=false<br>06-27 17:04:11.775   835  2286 V WindowManager: Animation done in AppWindowToken{fcdff0a token=Token{ad2718b ActivityRecord{51a9a7c u0 com.android.dialer/.app.DialtactsActivity t193}}}: reportedVisible=false okToDisplay=true okToAnimate=true startingDisplayed=false<br>06-27 17:04:11.790   835  2286 V WindowManager: Animation done in WindowStateAnimator{c28623a com.android.launcher3/com.android.launcher3.Launcher}: exiting=false, reportedVisible=true<br>06-27 17:04:11.791   835  2286 V WindowManager: Animation done in WindowStateAnimator{1cf447c com.android.dialer/com.android.dialer.app.DialtactsActivity}: exiting=true, reportedVisible=false<br>06-27 17:04:11.826   835  2286 I WindowManager:   SURFACE POS (setPositionInTransaction) @ (0.0,0.0): com.android.dialer/com.android.dialer.app.DialtactsActivity</p><p>void scheduleAnimation()</p><ol><li>动画启动流程</li><li>Winstate为什么没有释放</li><li><p>为什么forallwindows会走那么久</p><p> void requestTraversal() {</p><pre><code>if (!mTraversalScheduled) {    mTraversalScheduled = true;    mService.mAnimationHandler.post(mPerformSurfacePlacement); //替换?}</code></pre><p> }</p></li></ol><p>启动APP时调用动画:</p><p>Thread [Binder:14721_16] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    owns: ActivityManagerService  (id=1204)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1010<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>第一次进入animate 会再次调用 scheduleAnimation() 是否下次还需要走 animate 取决与条件 mAnimationFrameCallbackScheduled<br>mAnimationFrameCallbackScheduled初始话默认是 false</p><pre><code>void scheduleAnimation() {    if (!mAnimationFrameCallbackScheduled) {        mAnimationFrameCallbackScheduled = true;        mChoreographer.postFrameCallback(mAnimationFrameCallback);    }}</code></pre><p>取消下一次 animate 即 mChoreographer.removeFrameCallback(mAnimationFrameCallback);<br>    private void cancelAnimation() {<br>        if (mAnimationFrameCallbackScheduled) {<br>            mAnimationFrameCallbackScheduled = false;<br>            mChoreographer.removeFrameCallback(mAnimationFrameCallback);<br>        }<br>    }</p><p>但是函数里面有一个判断条件:<br>                if (mService.mDragState != null) {<br>                    mAnimating |= mService.mDragState.stepAnimationLocked(mCurrentTime);<br>                }</p><pre><code>if (!mAnimating) {    cancelAnimation();}</code></pre><p>整体的代码如下:<br>    private void animate(long frameTimeNs) {</p><pre><code>    synchronized (mService.mWindowMap) {        if (!mInitialized) {            return;        }        // Schedule next frame already such that back-pressure happens continuously        scheduleAnimation();                                    //这里先预定下一帧    }    // Simulate back-pressure by opening and closing an empty animation transaction. This makes    // sure that an animation frame is at least presented once on the screen. We do this outside    // of the regular transaction such that we can avoid holding the window manager lock in case    // we receive back-pressure from SurfaceFlinger. Since closing an animation transaction    // without the window manager locks leads to ordering issues (as the transaction will be    // processed only at the beginning of the next frame which may result in another transaction    // that was executed later in WM side gets executed first on SF side), we don&apos;t update any    // Surface properties here such that reordering doesn&apos;t cause issues.    mService.executeEmptyAnimationTransaction();    synchronized (mService.mWindowMap) {        mCurrentTime = frameTimeNs / TimeUtils.NANOS_PER_MS;        mBulkUpdateParams = SET_ORIENTATION_CHANGE_COMPLETE;        mAnimating = false;                                    //每次都会设置为false        mAppWindowAnimating = false;        if (DEBUG_WINDOW_TRACE) {            Slog.i(TAG, &quot;!!! animate: entry time=&quot; + mCurrentTime);        }        if (SHOW_TRANSACTIONS) Slog.i(TAG, &quot;&gt;&gt;&gt; OPEN TRANSACTION animate&quot;);        mService.openSurfaceTransaction();        try {            final AccessibilityController accessibilityController =                    mService.mAccessibilityController;            final int numDisplays = mDisplayContentsAnimators.size();            for (int i = 0; i &lt; numDisplays; i++) {                final int displayId = mDisplayContentsAnimators.keyAt(i);                final DisplayContent dc = mService.mRoot.getDisplayContentOrCreate(displayId);                dc.stepAppWindowsAnimation(mCurrentTime); //这里也可能会置mAppAnimator.animating = true; //这里设置为true                DisplayContentsAnimator displayAnimator = mDisplayContentsAnimators.valueAt(i);                final ScreenRotationAnimation screenRotationAnimation =                        displayAnimator.mScreenRotationAnimation;                if (screenRotationAnimation != null &amp;&amp; screenRotationAnimation.isAnimating()) {                    if (screenRotationAnimation.stepAnimationLocked(mCurrentTime)) {                        setAnimating(true);                    } else {                        mBulkUpdateParams |= SET_UPDATE_ROTATION;                        screenRotationAnimation.kill();                        displayAnimator.mScreenRotationAnimation = null;                        //TODO (multidisplay): Accessibility supported only for the default                        // display.                        if (accessibilityController != null &amp;&amp; dc.isDefaultDisplay) {                            // We just finished rotation animation which means we did not                            // announce the rotation and waited for it to end, announce now.                            accessibilityController.onRotationChangedLocked(                                    mService.getDefaultDisplayContentLocked());                        }                    }                }                // Update animations of all applications, including those                // associated with exiting/removed apps                ++mAnimTransactionSequence;                dc.updateWindowsForAnimator(this);      // 这里轮寻windows 可能会把 winAnimator.mAnimating 置为 true,这样可以影响下一个函数                dc.updateWallpaperForAnimator(this);    // 这里有可能会把this.mAnimating 设置为true,mUpdateWallpaperForAnimator                dc.prepareWindowSurfaces();            }            for (int i = 0; i &lt; numDisplays; i++) {                final int displayId = mDisplayContentsAnimators.keyAt(i);                final DisplayContent dc = mService.mRoot.getDisplayContentOrCreate(displayId);                dc.checkAppWindowsReadyToShow();                final ScreenRotationAnimation screenRotationAnimation =                        mDisplayContentsAnimators.valueAt(i).mScreenRotationAnimation;                if (screenRotationAnimation != null) {                    screenRotationAnimation.updateSurfacesInTransaction();                }                orAnimating(dc.animateDimLayers());                orAnimating(dc.getDockedDividerController().animate(mCurrentTime));                //TODO (multidisplay): Magnification is supported only for the default display.                if (accessibilityController != null &amp;&amp; dc.isDefaultDisplay) {                    accessibilityController.drawMagnifiedRegionBorderIfNeededLocked();                }            }            if (mService.mDragState != null) {                mAnimating |= mService.mDragState.stepAnimationLocked(mCurrentTime);            }            if (!mAnimating) {  //这里不为false 时, 就不会取消cancelAnimation.意味着animate 还需要再跑一次,                cancelAnimation(); //对应scheduleAnimation(),取消调预定的那一帧            }            if (mService.mWatermark != null) {                mService.mWatermark.drawIfNeeded();            }        } catch (RuntimeException e) {            Slog.wtf(TAG, &quot;Unhandled exception in Window Manager&quot;, e);        } finally {            mService.closeSurfaceTransaction();            if (SHOW_TRANSACTIONS) Slog.i(TAG, &quot;&lt;&lt;&lt; CLOSE TRANSACTION animate&quot;);        }        boolean hasPendingLayoutChanges = mService.mRoot.hasPendingLayoutChanges(this);        boolean doRequest = false;        if (mBulkUpdateParams != 0) {            doRequest = mService.mRoot.copyAnimToLayoutParams();        }        if (hasPendingLayoutChanges || doRequest) {            mWindowPlacerLocked.requestTraversal();        }        if (mAnimating &amp;&amp; !mLastAnimating) {            // Usually app transitions but quite a load onto the system already (with all the            // things happening in app), so pause task snapshot persisting to not increase the            // load.            mService.mTaskSnapshotController.setPersisterPaused(true);            Trace.asyncTraceBegin(Trace.TRACE_TAG_WINDOW_MANAGER, &quot;animating&quot;, 0);        }        if (!mAnimating &amp;&amp; mLastAnimating) {            mWindowPlacerLocked.requestTraversal();            mService.mTaskSnapshotController.setPersisterPaused(false);            Trace.asyncTraceEnd(Trace.TRACE_TAG_WINDOW_MANAGER, &quot;animating&quot;, 0);        }        mLastAnimating = mAnimating;        if (mRemoveReplacedWindows) {            mService.mRoot.removeReplacedWindows();            mRemoveReplacedWindows = false;        }        mService.stopUsingSavedSurfaceLocked();        mService.destroyPreservedSurfaceLocked();        mService.mWindowPlacerLocked.destroyPendingSurfaces();        if (DEBUG_WINDOW_TRACE) {            Slog.i(TAG, &quot;!!! animate: exit mAnimating=&quot; + mAnimating                    + &quot; mBulkUpdateParams=&quot; + Integer.toHexString(mBulkUpdateParams)                    + &quot; mPendingLayoutChanges(DEFAULT_DISPLAY)=&quot;                    + Integer.toHexString(getPendingLayoutChanges(DEFAULT_DISPLAY)));        }    }}</code></pre><p>Thread [android.anim] (Suspended (breakpoint at line 435 in WindowAnimator))<br>    owns: WindowHashMap  (id=1203)    </p><pre><code>WindowAnimator.setAnimating(boolean) line: 435    </code></pre><hr><pre><code>private final Consumer&lt;WindowState&gt; mUpdateWallpaperForAnimator = w -&gt; { //这是一个回调函数 ,所有的window都会执行这个函数forallwindows    final WindowStateAnimator winAnimator = w.mWinAnimator;    if (winAnimator.mSurfaceController == null || !winAnimator.hasSurface()) {        return;    }    final int flags = w.mAttrs.flags;    // If this window is animating, make a note that we have an animating window and take    // care of a request to run a detached wallpaper animation.    if (winAnimator.mAnimating) {        //这个条件决定是否把mAnimating置为true,如果置为true之后,就不会cancelAnimation(),animate 下一次还会执行        if (winAnimator.mAnimation != null) {            if ((flags &amp; FLAG_SHOW_WALLPAPER) != 0                    &amp;&amp; winAnimator.mAnimation.getDetachWallpaper()) {                mTmpWindow = w;            }            final int color = winAnimator.mAnimation.getBackgroundColor();            if (color != 0) {                final TaskStack stack = w.getStack();                if (stack != null) {                    stack.setAnimationBackground(winAnimator, color);                }            }        }        mTmpWindowAnimator.setAnimating(true);    }</code></pre><hr><pre><code>DisplayContent.lambda$-com_android_server_wm_DisplayContent_18415(WindowState) line: 408    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$4(Object) line: not available    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633    DisplayContent.updateWallpaperForAnimator(WindowAnimator) line: 2628    WindowAnimator.animate(long) line: 202</code></pre><hr><pre><code>dc.updateWallpaperForAnimator(this);</code></pre><hr><pre><code>WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available    Choreographer$CallbackRecord.run(long) line: 964    Choreographer.doCallbacks(int, long) line: 778    Choreographer.doFrame(long, int) line: 710    Choreographer$FrameHandler.handleMessage(Message) line: 881    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106    Looper.loop() line: 164    AnimationThread(HandlerThread).run() line: 65    AnimationThread(ServiceThread).run() line: 46    </code></pre><p>下面的这个调用堆栈,把winAnimator.mAnimating 置为了true</p><p>Thread [android.anim] (Suspended (breakpoint at line 423 in WindowStateAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    WindowStateAnimator.stepAnimationLocked(long) line: 423<br>    DisplayContent.lambda$-com_android_server_wm_DisplayContent_16102(WindowState) line: 339<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$3(Object) line: not available<br>    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779<br>    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777<br>    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128<br>    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035<br>    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549<br>    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544<br>    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616<br>    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405<br>    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534<br>    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633<br>    DisplayContent.updateWindowsForAnimator(WindowAnimator) line: 2618<br>    WindowAnimator.animate(long) line: 201<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameHandler.handleMessage(Message) line: 881<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>这里<br>Thread [android.anim] (Suspended (breakpoint at line 395 in AppWindowAnimator))<br>    owns: WindowHashMap  (id=1203)<br>    AppWindowAnimator.stepAnimationLocked(long) line: 395    </p><pre><code>mAppAnimator.animating = true;这里也会设置为true@Overridevoid stepAppWindowsAnimation(long currentTime) {    mAppAnimator.wasAnimating = mAppAnimator.animating;    if (mAppAnimator.stepAnimationLocked(currentTime)) {        mAppAnimator.animating = true; //这里设置为true        mService.mAnimator.setAnimating(true);        mService.mAnimator.mAppWindowAnimating = true;    } else if (mAppAnimator.wasAnimating) {        // stopped animating, do one more pass through the layout        setAppLayoutChanges(FINISH_LAYOUT_REDO_WALLPAPER,                DEBUG_LAYOUT_REPEATS ? &quot;appToken &quot; + this + &quot; done&quot; : null);        if (DEBUG_ANIM) Slog.v(TAG, &quot;updateWindowsApps...: done animating &quot; + this);    }}AppWindowToken.stepAppWindowsAnimation(long) line: 1523    Task(WindowContainer).stepAppWindowsAnimation(long) line: 511    TaskStack(WindowContainer).stepAppWindowsAnimation(long) line: 511    TaskStack.stepAppWindowsAnimation(long) line: 1628    DisplayContent$TaskStackContainers(WindowContainer).stepAppWindowsAnimation(long) line: 511    DisplayContent(WindowContainer).stepAppWindowsAnimation(long) line: 511    WindowAnimator.animate(long) line: 174    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available    Choreographer$CallbackRecord.run(long) line: 964    Choreographer.doCallbacks(int, long) line: 778    Choreographer.doFrame(long, int) line: 710    Choreographer$FrameHandler.handleMessage(Message) line: 881    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106    Looper.loop() line: 164    AnimationThread(HandlerThread).run() line: 65    AnimationThread(ServiceThread).run() line: 46    Thread [android.anim] (Suspended (breakpoint at line 291 in Animation))    owns: WindowHashMap  (id=1203)    AlphaAnimation(Animation).reset() line: 291    public boolean getTransformation(long currentTime, Transformation outTransformation) {    if (mStartTime == -1) {        mStartTime = currentTime;    }    final long startOffset = getStartOffset();    final long duration = mDuration;    float normalizedTime;    if (duration != 0) {        normalizedTime = ((float) (currentTime - (mStartTime + startOffset))) /                (float) duration;    } else {        // time is a step-change with a zero duration        normalizedTime = currentTime &lt; mStartTime ? 0.0f : 1.0f;    }    final boolean expired = normalizedTime &gt;= 1.0f || isCanceled();    mMore = !expired;    if (!mFillEnabled) normalizedTime = Math.max(Math.min(normalizedTime, 1.0f), 0.0f);    if ((normalizedTime &gt;= 0.0f || mFillBefore) &amp;&amp; (normalizedTime &lt;= 1.0f || mFillAfter)) {        if (!mStarted) {            fireAnimationStart();            mStarted = true;            if (NoImagePreloadHolder.USE_CLOSEGUARD) {                guard.open(&quot;cancel or detach or getTransformation&quot;);            }        }        if (mFillEnabled) normalizedTime = Math.max(Math.min(normalizedTime, 1.0f), 0.0f);        if (mCycleFlip) {            normalizedTime = 1.0f - normalizedTime;        }        final float interpolatedTime = mInterpolator.getInterpolation(normalizedTime);        applyTransformation(interpolatedTime, outTransformation);    }    if (expired) {        if (mRepeatCount == mRepeated || isCanceled()) {            if (!mEnded) {                mEnded = true;                guard.close();                fireAnimationEnd();            }        } else {            if (mRepeatCount &gt; 0) {                mRepeated++;            }            if (mRepeatMode == REVERSE) {                mCycleFlip = !mCycleFlip;            }            mStartTime = -1;            mMore = true;            fireAnimationRepeat();        }    }    if (!mMore &amp;&amp; mOneMoreTime) { //这个mOneMoreTime被置为了 true        mOneMoreTime = false;        return true;    }    return mMore;}AlphaAnimation(Animation).initialize(int, int, int, int) line: 354    WindowStateAnimator.stepAnimationLocked(long) line: 391    DisplayContent.lambda$-com_android_server_wm_DisplayContent_16102(WindowState) line: 339    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.$m$3(Object) line: not available    -$Lambda$YIZfR4m-B8z_tYbP2x4OJ3o7OYE.accept(Object) line: not available    WindowContainer$ForAllWindowsConsumerWrapper.apply(WindowState) line: 779    WindowContainer$ForAllWindowsConsumerWrapper.apply(Object) line: 777    WindowState.applyInOrderWithImeWindows(ToBooleanFunction, boolean) line: 4128    WindowState.forAllWindows(ToBooleanFunction, boolean) line: 4035    AppWindowToken(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    AppWindowToken.forAllWindowsUnchecked(ToBooleanFunction, boolean) line: 1549    AppWindowToken.forAllWindows(ToBooleanFunction, boolean) line: 1544    Task(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    TaskStack(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    DisplayContent$TaskStackContainers(WindowContainer).forAllWindows(ToBooleanFunction, boolean) line: 616    DisplayContent$TaskStackContainers.forAllWindows(ToBooleanFunction, boolean) line: 3405    DisplayContent.forAllWindows(ToBooleanFunction, boolean) line: 1534    DisplayContent(WindowContainer).forAllWindows(Consumer, boolean) line: 633    DisplayContent.updateWindowsForAnimator(WindowAnimator) line: 2618    WindowAnimator.animate(long) line: 201    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available    Choreographer$CallbackRecord.run(long) line: 964    Choreographer.doCallbacks(int, long) line: 778    Choreographer.doFrame(long, int) line: 710    Choreographer$FrameHandler.handleMessage(Message) line: 881    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 106    Looper.loop() line: 164    AnimationThread(HandlerThread).run() line: 65    AnimationThread(ServiceThread).run() line: 46    </code></pre><p>Thread [Binder:835_7] (Suspended (breakpoint at line 291 in Animation))<br>    owns: WindowHashMap  (id=11972)<br>    AlphaAnimation(Animation).reset() line: 291<br>    AlphaAnimation(Animation).initialize(int, int, int, int) line: 354<br>    AppWindowAnimator.setAnimation(Animation, int, int, int, int, boolean, int, int, int) line: 133<br>    WindowManagerService.applyAnimationLocked(AppWindowToken, WindowManager$LayoutParams, int, boolean, boolean) line: 2427<br>    AppWindowToken.setVisibility(WindowManager$LayoutParams, boolean, int, boolean, boolean) line: 372<br>    WindowSurfacePlacer.handleClosingApps(int, WindowManager$LayoutParams, boolean, WindowSurfacePlacer$LayerAndToken) line: 461<br>    WindowSurfacePlacer.handleAppTransitionReadyLocked() line: 344<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 615<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><p>mLocalAnimating</p><pre><code>if ((!mLocalAnimating || mAnimationIsEntrance) &amp;&amp; mAppAnimator != null        &amp;&amp; mAppAnimator.animation != null) {    // When our app token is animating, we kind-of pretend like    // we are as well.  Note the mLocalAnimating mAnimationIsEntrance    // part of this check means that we will only do this if    // our window is not currently exiting, or it is not    // locally animating itself.  The idea being that one that    // is exiting and doing a local animation should be removed    // once that animation is done.    mAnimating = true; //一直把mAnimating置为true    mHasTransformation = true;    mTransformation.clear();    return false;}if (mWin.isDrawnLw() &amp;&amp; mAnimation != null) {  //这个判断的关键点是mAnimation    mHasTransformation = true;    mHasLocalTransformation = true;    if (!mLocalAnimating) {        if (DEBUG_ANIM) Slog.v(            TAG, &quot;Starting animation in &quot; + this +            &quot; @ &quot; + currentTime + &quot;: ww=&quot; + mWin.mFrame.width() +            &quot; wh=&quot; + mWin.mFrame.height() +            &quot; dx=&quot; + mAnimDx + &quot; dy=&quot; + mAnimDy +            &quot; scale=&quot; + mService.getWindowAnimationScaleLocked());        final DisplayInfo displayInfo = displayContent.getDisplayInfo();        if (mAnimateMove) {            mAnimateMove = false;            mAnimation.initialize(mWin.mFrame.width(), mWin.mFrame.height(),                    mAnimDx, mAnimDy);        } else {            mAnimation.initialize(mWin.mFrame.width(), mWin.mFrame.height(),                    displayInfo.appWidth, displayInfo.appHeight);        }        mAnimDx = displayInfo.appWidth;        mAnimDy = displayInfo.appHeight;        mAnimation.setStartTime(mAnimationStartTime != -1                ? mAnimationStartTime                : currentTime);        mLocalAnimating = true; //这里会设置为true        mAnimating = true;    }</code></pre><p>Thread [android.anim] (Suspended (breakpoint at line 271 in WindowStateAnimator))<br>    owns: WindowHashMap  (id=11972)<br>    WindowStateAnimator.setAnimation(Animation, long, int) line: 271<br>    public void setAnimation(Animation anim, long startTime, int stackClip) {<br>        if (localLOGV) Slog.v(TAG, “Setting animation in “ + this + “: “ + anim);<br>        mAnimating = false;<br>        mLocalAnimating = false; //这里会置为false<br>        mAnimation = anim;  //并且赋值mAnimation<br>        mAnimation.restrictDuration(WindowManagerService.MAX_ANIMATION_DURATION);<br>        mAnimation.scaleCurrentDuration(mService.getWindowAnimationScaleLocked());<br>        // Start out animation gone if window is gone, or visible if window is visible.<br>        mTransformation.clear();<br>        mTransformation.setAlpha(mLastHidden ? 0 : 1);<br>        mHasLocalTransformation = true;<br>        mAnimationStartTime = startTime;<br>        mStackClip = stackClip;<br>    }<br>    WindowStateAnimator.setAnimation(Animation) line: 287<br>    WindowStateAnimator.applyAnimationLocked(int, boolean) line: 1858<br>    WindowState.removeIfPossible(boolean) line: 1946<br>    WindowState.removeIfPossible() line: 1848<br>    WindowManagerService.removeWindow(Session, IWindow) line: 1733<br>    Session.remove(IWindow) line: 222<br>    TaskSnapshotSurface.remove() line: 260<br>    AppWindowContainerController.lambda$-com_android_server_wm_AppWindowContainerController_31045(WindowManagerPolicy$StartingSurface) line: 658<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.$m$5() line: not available<br>    -$Lambda$aEpJ2RCAIjecjyIIYTv6ricEwh4.run() line: not available<br>    Handler.handleCallback(Message) line: 790<br>    Handler.dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>Thread [Binder:835_1E] (Suspended (breakpoint at line 291 in Animation))<br>    owns: WindowHashMap  (id=11972)<br>    owns: ActivityManagerService  (id=12078)<br>    AnimationSet(Animation).reset() line: 291<br>    AnimationSet.reset() line: 488<br>    AnimationSet(Animation).initialize(int, int, int, int) line: 354<br>    AnimationSet.initialize(int, int, int, int) line: 425<br>    AppTransition.createClipRevealAnimationLocked(int, boolean, Rect, Rect) line: 867<br>    AppTransition.loadAnimation(WindowManager$LayoutParams, int, boolean, int, int, Rect, Rect, Rect, Rect, Rect, boolean, boolean, int) line: 1563<br>    WindowManagerService.applyAnimationLocked(AppWindowToken, WindowManager$LayoutParams, int, boolean, boolean) line: 2420<br>    AppWindowToken.setVisibility(WindowManager$LayoutParams, boolean, int, boolean, boolean) line: 372<br>    WindowSurfacePlacer.handleOpeningApps(int, WindowManager$LayoutParams, boolean, int) line: 404<br>    WindowSurfacePlacer.handleAppTransitionReadyLocked() line: 348<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 615<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>//其他进程调用 activityStopped<br>Thread [Binder:835_19] (Suspended (breakpoint at line 615 in AppWindowContainerController))<br>    owns: WindowHashMap  (id=11972)<br>    owns: ActivityManagerService  (id=12078)<br>    AppWindowContainerController.removeStartingWindow() line: 615<br>    AppWindowToken.notifyAppStopped() line: 682<br>    AppWindowContainerController.notifyAppStopped() line: 699<br>    ActivityRecord.activityStoppedLocked(Bundle, PersistableBundle, CharSequence) line: 1820<br>    ActivityManagerService.activityStopped(IBinder, Bundle, PersistableBundle, CharSequence) line: 7630<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 347<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>home键</p><p>Thread [InputDispatcher] (Suspended (breakpoint at line 615 in AppWindowContainerController))<br>    owns: ActivityManagerService  (id=12078)<br>    AppWindowContainerController.removeStartingWindow() line: 615<br>    ActivityRecord.removeOrphanedStartingWindow(boolean) line: 2256<br>    ActivityStack.cancelInitializingActivities() line: 2236<br>    ActivityStackSupervisor.cancelInitializingActivities() line: 1112<br>    ActivityStack.resumeTopActivityInnerLocked(ActivityRecord, ActivityOptions) line: 2316<br>    ActivityStack.resumeTopActivityUncheckedLocked(ActivityRecord, ActivityOptions) line: 2267<br>    ActivityStackSupervisor.resumeFocusedStackTopActivityLocked(ActivityStack, ActivityRecord, ActivityOptions) line: 2107<br>    ActivityStackSupervisor.resumeFocusedStackTopActivityLocked() line: 2091<br>    ActivityStack.moveTaskToFrontLocked(TaskRecord, boolean, ActivityOptions, AppTimeTracker, String) line: 4652<br>    ActivityStarter.setTargetStackAndMoveToFrontIfNeeded(ActivityRecord) line: 1613<br>    ActivityStarter.startActivityUnchecked(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1096<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1000<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ContextImpl.startActivityAsUser(Intent, Bundle, UserHandle) line: 887<br>    ContextImpl.startActivityAsUser(Intent, UserHandle) line: 861<br>    PhoneWindowManager.startActivityAsUser(Intent, UserHandle) line: 4157<br>    PhoneWindowManager.startDockOrHome(boolean, boolean) line: 7833<br>    PhoneWindowManager.launchHomeFromHotKey(boolean, boolean) line: 4281<br>    PhoneWindowManager.launchHomeFromHotKey() line: 4233<br>    PhoneWindowManager.handleShortPressOnHome() line: 1769<br>    PhoneWindowManager.interceptKeyBeforeDispatching(WindowManagerPolicy$WindowState, KeyEvent, int) line: 3499<br>    InputMonitor.interceptKeyBeforeDispatching(InputWindowHandle, KeyEvent, int) line: 466<br>    InputManagerService.interceptKeyBeforeDispatching(InputWindowHandle, KeyEvent, int) line: 1983    </p><p>Thread [Binder:835_1E] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=11972)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><p>Thread [android.anim] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=11972)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowAnimator.animate(long) line: 143<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>堵在这里回不去</p><pre><code>public boolean containsShowWhenLockedWindow(IBinder token) {    synchronized (mWindowMap) {        final AppWindowToken wtoken = mRoot.getAppWindowToken(token);        return wtoken != null &amp;&amp; wtoken.containsShowWhenLockedWindow();    }}</code></pre><p>Thread [Binder:835_1F] (Suspended)<br>    owns: ActivityManagerService  (id=12078)<br>    waiting for: WindowHashMap  (id=11972)<br>    WindowManagerService.containsShowWhenLockedWindow(IBinder) line: 2975<br>    ActivityRecord.canShowWhenLocked() line: 2881<br>    ActivityStack.checkKeyguardVisibility(ActivityRecord, boolean, boolean) line: 1999<br>    ActivityStack.ensureActivitiesVisibleLocked(ActivityRecord, int, boolean) line: 1862<br>    ActivityStackSupervisor.ensureActivitiesVisibleLocked(ActivityRecord, int, boolean) line: 3430<br>    ActivityStack.completePauseLocked(boolean, ActivityRecord) line: 1543<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1425<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>现在怀疑是android.anim线程一直占着锁,然后,其他进程的activityPausedLocked线程退不出去</p><p>Thread [Binder:835_1E] (Suspended (breakpoint at line 291 in Animation))<br>    owns: WindowHashMap  (id=11972)<br>    owns: ActivityManagerService  (id=12078)<br>    AnimationSet(Animation).reset() line: 291    //reset 是这里走的 可以置条件<br>    AnimationSet.reset() line: 488<br>    AnimationSet(Animation).initialize(int, int, int, int) line: 354<br>    AnimationSet.initialize(int, int, int, int) line: 425<br>    AppTransition.createClipRevealAnimationLocked(int, boolean, Rect, Rect) line: 867<br>    AppTransition.loadAnimation(WindowManager$LayoutParams, int, boolean, int, int, Rect, Rect, Rect, Rect, Rect, boolean, boolean, int) line: 1563<br>    WindowManagerService.applyAnimationLocked(AppWindowToken, WindowManager$LayoutParams, int, boolean, boolean) line: 2420<br>    AppWindowToken.setVisibility(WindowManager$LayoutParams, boolean, int, boolean, boolean) line: 372<br>    WindowSurfacePlacer.handleOpeningApps(int, WindowManager$LayoutParams, boolean, int) line: 404<br>    WindowSurfacePlacer.handleAppTransitionReadyLocked() line: 348<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 615<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>明天可以通过线程的LOG来跟踪</p><p>Thread [Binder:835_17] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=11972)<br>    owns: ActivityManagerService  (id=12078)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStarter.startActivity(ActivityRecord, ActivityRecord, IVoiceInteractionSession, IVoiceInteractor, int, boolean, ActivityOptions, TaskRecord, ActivityRecord[]) line: 1010<br>    ActivityStarter.startActivity(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord) line: 577<br>    ActivityStarter.startActivityLocked(IApplicationThread, Intent, Intent, String, ActivityInfo, ResolveInfo, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, int, String, int, int, int, ActivityOptions, boolean, boolean, ActivityRecord[], TaskRecord, String) line: 283<br>    ActivityStarter.startActivityMayWait(IApplicationThread, int, String, Intent, String, IVoiceInteractionSession, IVoiceInteractor, IBinder, String, int, int, ProfilerInfo, WaitResult, Configuration, Bundle, boolean, int, TaskRecord, String) line: 822<br>    ActivityManagerService.startActivityAsUser(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle, int) line: 4622<br>    ActivityManagerService.startActivity(IApplicationThread, String, Intent, String, IBinder, String, int, int, ProfilerInfo, Bundle) line: 4609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 121<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>这里重新调用一下, scheduleAnimation<br>Thread [Binder:835_13] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=11972)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><p>—– pid 13471 at 2018-06-29 09:52:55 —–<br>Cmd line: com.android.dialer<br>Build fingerprint: ‘ATT/QS5509QL/QS5509QL:8.1.0/OPM1.171019.026/v1A6L-0:userdebug/test-keys’<br>ABI: ‘arm’<br>Build type: optimized<br>Zygote loaded classes=5032 post zygote classes=907<br>“main” prio=5 tid=1 Native<br>  | group=”main” sCount=1 dsCount=0 flags=1 obj=0x70bb97f0 self=0xa5ca4000<br>  | sysTid=13471 nice=-10 cgrp=default sched=0/0 handle=0xa9d944a4<br>  | state=S schedstat=( 5295191541 1911600014 4283 ) utm=416 stm=113 core=3 HZ=100<br>  | stack=0xbe3bc000-0xbe3be000 stackSize=8MB<br>  | held mutexes=<br>  native: #00 pc 00049794  /system/lib/libc.so (<strong>ioctl+8)<br>  native: #01 pc 0001e233  /system/lib/libc.so (ioctl+38)<br>  native: #02 pc 0004242f  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+170)<br>  native: #03 pc 00042de9  /system/lib/libbinder.so (android::IPCThreadState::waitForResponse(android::Parcel<em>, int</em>)+236)<br>  native: #04 pc 0003d2e5  /system/lib/libbinder.so (android::BpBinder::transact(unsigned int, android::Parcel const&amp;, android::Parcel*, unsigned int)+36)<br>  native: #05 pc 000bd409  /system/lib/libandroid_runtime.so (???)<br>  native: #06 pc 0064e485  /data/dalvik-cache/arm/system@<a href="mailto:framework@boot.oat" target="_blank" rel="noopener">framework@boot.oat</a> (Java_android_os_BinderProxy_transactNative</strong>ILandroid_os_Parcel_2Landroid_os_Parcel_2I+132)<br>  at android.os.BinderProxy.transactNative(Native method)<br>  at android.os.BinderProxy.transact(Binder.java:764)<br>  at android.view.IWindowSession$Stub$Proxy.relayout(IWindowSession.java:915)<br>  at android.view.ViewRootImpl.relayoutWindow(ViewRootImpl.java:6141)<br>  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1905)<br>  at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1396)<br>  at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6773)<br>  at android.view.Choreographer$CallbackRecord.run(Choreographer.java:966)<br>  at android.view.Choreographer.doCallbacks(Choreographer.java:778)<br>  at android.view.Choreographer.doFrame(Choreographer.java:713)<br>  at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:952)<br>  at android.os.Handler.handleCallback(Handler.java:790)<br>  at android.os.Handler.dispatchMessage(Handler.java:99)<br>  at android.os.Looper.loop(Looper.java:164)<br>  at android.app.ActivityThread.main(ActivityThread.java:6518)<br>  at java.lang.reflect.Method.invoke(Native method)<br>  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)<br>  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)</p><p>这里也会block?</p><p>Thread [Binder:835_13] (Suspended)<br>    waiting for: ActivityManagerService  (id=12078)<br>    ActivityManagerService.getActivityOptions(IBinder) line: 13588<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 2906<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>“main” prio=5 tid=1 Native<br>  | group=”main” sCount=1 dsCount=0 flags=1 obj=0x70bb97f0 self=0xa5ca4000<br>  | sysTid=13471 nice=-10 cgrp=default sched=0/0 handle=0xa9d944a4<br>  | state=S schedstat=( 5312166227 1913354234 4311 ) utm=416 stm=115 core=1 HZ=100<br>  | stack=0xbe3bc000-0xbe3be000 stackSize=8MB<br>  | held mutexes=<br>  native: #00 pc 00049794  /system/lib/libc.so (<strong>ioctl+8)<br>  native: #01 pc 0001e233  /system/lib/libc.so (ioctl+38)<br>  native: #02 pc 0004242f  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+170)<br>  native: #03 pc 00042de9  /system/lib/libbinder.so (android::IPCThreadState::waitForResponse(android::Parcel<em>, int</em>)+236)<br>  native: #04 pc 0003d2e5  /system/lib/libbinder.so (android::BpBinder::transact(unsigned int, android::Parcel const&amp;, android::Parcel*, unsigned int)+36)<br>  native: #05 pc 000bd409  /system/lib/libandroid_runtime.so (???)<br>  native: #06 pc 0064e485  /data/dalvik-cache/arm/system@<a href="mailto:framework@boot.oat" target="_blank" rel="noopener">framework@boot.oat</a> (Java_android_os_BinderProxy_transactNative</strong>ILandroid_os_Parcel_2Landroid_os_Parcel_2I+132)<br>  at android.os.BinderProxy.transactNative(Native method)<br>  at android.os.BinderProxy.transact(Binder.java:764)<br>  at android.app.IActivityManager$Stub$Proxy.getActivityOptions(IActivityManager.java:8278)<br>  at android.app.Activity.getActivityOptions(Activity.java:6431)<br>  at android.app.Activity.performStart(Activity.java:7044)<br>  at android.app.Activity.performRestart(Activity.java:7123)<br>  at android.app.Activity.performResume(Activity.java:7128)<br>  at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3559)<br>  at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3624)<br>  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1641)<br>  at android.os.Handler.dispatchMessage(Handler.java:106)<br>  at android.os.Looper.loop(Looper.java:164)<br>  at android.app.ActivityThread.main(ActivityThread.java:6518)<br>  at java.lang.reflect.Method.invoke(Native method)<br>  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)<br>  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)</p><p>超时调用</p><p>  Thread [ActivityManager] (Suspended (breakpoint at line 291 in Animation))<br>    owns: WindowHashMap  (id=11972)<br>    owns: ActivityManagerService  (id=12078)<br>    AnimationSet(Animation).reset() line: 291<br>    AnimationSet.reset() line: 488<br>    AnimationSet(Animation).initialize(int, int, int, int) line: 354<br>    AnimationSet.initialize(int, int, int, int) line: 425<br>    AppTransition.createClipRevealAnimationLocked(int, boolean, Rect, Rect) line: 867<br>    AppTransition.loadAnimation(WindowManager$LayoutParams, int, boolean, int, int, Rect, Rect, Rect, Rect, Rect, boolean, boolean, int) line: 1563<br>    WindowManagerService.applyAnimationLocked(AppWindowToken, WindowManager$LayoutParams, int, boolean, boolean) line: 2420<br>    AppWindowToken.setVisibility(WindowManager$LayoutParams, boolean, int, boolean, boolean) line: 372<br>    WindowSurfacePlacer.handleOpeningApps(int, WindowManager$LayoutParams, boolean, int) line: 404<br>    WindowSurfacePlacer.handleAppTransitionReadyLocked() line: 348<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 615<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityStack$ActivityStackHandler.handleMessage(Message) line: 401<br>    ActivityStack$ActivityStackHandler(Handler).dispatchMessage(Message) line: 106<br>    Looper.loop() line: 164<br>    ServiceThread(HandlerThread).run() line: 65<br>    ServiceThread.run() line: 46    </p><p>Thread [Binder:835_1B] (Suspended (breakpoint at line 1429 in ActivityStack))<br>    owns: ActivityManagerService  (id=23700)<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1429<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>Thread [Binder:835_1B] (Suspended (breakpoint at line 615 in AppWindowContainerController))<br>    owns: WindowHashMap  (id=23648)<br>    owns: ActivityManagerService  (id=23700)<br>    AppWindowContainerController.removeStartingWindow() line: 615<br>    AppWindowToken.notifyAppStopped() line: 682<br>    AppWindowContainerController.notifyAppStopped() line: 699<br>    ActivityRecord.activityStoppedLocked(Bundle, PersistableBundle, CharSequence) line: 1820<br>    ActivityManagerService.activityStopped(IBinder, Bundle, PersistableBundle, CharSequence) line: 7630<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 347<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>APP activityStopped时,才会走removeStartingWindow</p><pre><code>public void removeStartingWindow() {    synchronized (mWindowMap) {//jackywei 这里会有block的问题        if (mContainer.startingWindow == null) {            if (mContainer.startingData != null) {                // Starting window has not been added yet, but it is scheduled to be added.                // Go ahead and cancel the request.                if (DEBUG_STARTING_WINDOW) Slog.v(TAG_WM,                        &quot;Clearing startingData for token=&quot; + mContainer);                mContainer.startingData = null;            }            return;        }</code></pre><p>animation = null;</p><p>Thread [android.anim] (Suspended (breakpoint at line 179 in AppWindowAnimator))<br>    owns: WindowHashMap  (id=23648)<br>    AppWindowAnimator.setNullAnimation() line: 179<br>    AppWindowAnimator.clearAnimation() line: 188<br>    AppWindowAnimator.stepAnimationLocked(long) line: 413<br>    AppWindowToken.stepAppWindowsAnimation(long) line: 1523<br>    Task(WindowContainer).stepAppWindowsAnimation(long) line: 511<br>    TaskStack(WindowContainer).stepAppWindowsAnimation(long) line: 511<br>    TaskStack.stepAppWindowsAnimation(long) line: 1628<br>    DisplayContent$TaskStackContainers(WindowContainer).stepAppWindowsAnimation(long) line: 511<br>    DisplayContent(WindowContainer).stepAppWindowsAnimation(long) line: 511<br>    WindowAnimator.animate(long) line: 174<br>    WindowAnimator.lambda$-com_android_server_wm_WindowAnimator_3951(long) line: 105<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.$m$0(long) line: not available<br>    -$Lambda$OQfQhd_xsxt9hoLAjIbVfOwa-jY.doFrame(long) line: not available<br>    Choreographer$CallbackRecord.run(long) line: 964<br>    Choreographer.doCallbacks(int, long) line: 778<br>    Choreographer.doFrame(long, int) line: 710<br>    Choreographer$FrameDisplayEventReceiver.run() line: 952<br>    Handler.handleCallback(Message) line: 790<br>    Choreographer$FrameHandler(Handler).dispatchMessage(Message) line: 99<br>    Looper.loop() line: 164<br>    AnimationThread(HandlerThread).run() line: 65<br>    AnimationThread(ServiceThread).run() line: 46    </p><p>启动 scheduleAnimation<br>Thread [Binder:835_1A] (Suspended (breakpoint at line 407 in WindowAnimator))<br>    owns: WindowHashMap  (id=23648)<br>    WindowAnimator.scheduleAnimation() line: 407<br>    WindowManagerService.scheduleAnimationLocked() line: 5988<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 824<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowManagerService.relayoutWindow(Session, IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 2182<br>    Session.relayout(IWindow, int, WindowManager$LayoutParams, int, int, int, int, Rect, Rect, Rect, Rect, Rect, Rect, Rect, MergedConfiguration, Surface) line: 239<br>    Session(IWindowSession$Stub).onTransact(int, Parcel, Parcel, int) line: 286<br>    Session.onTransact(int, Parcel, Parcel, int) line: 163<br>    Session(Binder).execTransact(int, long, long, int) line: 697    </p><p>把animation = null;//jackywei设置为NULL<br>Thread [Binder:835_1C] (Suspended (breakpoint at line 179 in AppWindowAnimator))<br>    owns: WindowHashMap  (id=23648)<br>    owns: ActivityManagerService  (id=23700)<br>    AppWindowAnimator.setNullAnimation() line: 179<br>    WindowSurfacePlacer.handleClosingApps(int, WindowManager$LayoutParams, boolean, WindowSurfacePlacer$LayerAndToken) line: 458<br>    WindowSurfacePlacer.handleAppTransitionReadyLocked() line: 344<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 615<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>设置animating = false;<br>Thread [Binder:835_1C] (Suspended (breakpoint at line 131 in AppWindowAnimator))<br>    owns: WindowHashMap  (id=23648)<br>    owns: ActivityManagerService  (id=23700)<br>    AppWindowAnimator.setAnimation(Animation, int, int, int, int, boolean, int, int, int) line: 131<br>    WindowManagerService.applyAnimationLocked(AppWindowToken, WindowManager$LayoutParams, int, boolean, boolean) line: 2427<br>    AppWindowToken.setVisibility(WindowManager$LayoutParams, boolean, int, boolean, boolean) line: 372<br>    WindowSurfacePlacer.handleClosingApps(int, WindowManager$LayoutParams, boolean, WindowSurfacePlacer$LayerAndToken) line: 461<br>    WindowSurfacePlacer.handleAppTransitionReadyLocked() line: 344<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 615<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>设置        mMore = true;<br>        mOneMoreTime = true;</p><p>Thread [Binder:835_1C] (Suspended (breakpoint at line 291 in Animation))<br>    owns: WindowHashMap  (id=23648)<br>    owns: ActivityManagerService  (id=23700)<br>    AlphaAnimation(Animation).reset() line: 291<br>    AlphaAnimation(Animation).initialize(int, int, int, int) line: 354<br>    AppWindowAnimator.setAnimation(Animation, int, int, int, int, boolean, int, int, int) line: 133<br>    WindowManagerService.applyAnimationLocked(AppWindowToken, WindowManager$LayoutParams, int, boolean, boolean) line: 2427<br>    AppWindowToken.setVisibility(WindowManager$LayoutParams, boolean, int, boolean, boolean) line: 372<br>    WindowSurfacePlacer.handleClosingApps(int, WindowManager$LayoutParams, boolean, WindowSurfacePlacer$LayerAndToken) line: 461<br>    WindowSurfacePlacer.handleAppTransitionReadyLocked() line: 344<br>    RootWindowContainer.performSurfacePlacement(boolean) line: 615<br>    WindowSurfacePlacer.performSurfacePlacementLoop() line: 197<br>    WindowSurfacePlacer.performSurfacePlacement(boolean) line: 145<br>    WindowSurfacePlacer.performSurfacePlacement() line: 135<br>    WindowSurfacePlacer.continueLayout() line: 126<br>    WindowManagerService.continueSurfaceLayout() line: 2966<br>    ActivityStack.activityPausedLocked(IBinder, boolean) line: 1427<br>    ActivityManagerService.activityPaused(IBinder) line: 7609<br>    ActivityManagerService(IActivityManager$Stub).onTransact(int, Parcel, Parcel, int) line: 317<br>    ActivityManagerService.onTransact(int, Parcel, Parcel, int) line: 2977<br>    ActivityManagerService(Binder).execTransact(int, long, long, int) line: 697    </p><p>7月7日,<br>问题 again.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;卡顿原因&quot;&gt;&lt;a href=&quot;#卡顿原因&quot; class=&quot;headerlink&quot; title=&quot;卡顿原因:&quot;&gt;&lt;/a&gt;卡顿原因:&lt;/h1&gt;&lt;p&gt;用android Device Monitor 获取的文件中:&lt;br&gt;ddms8967132311110557686.t
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>慢的问题2</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/man-de-wen-ti-2/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/man-de-wen-ti-2/</id>
    <published>2018-12-13T07:53:48.693Z</published>
    <updated>2018-12-13T07:52:23.593Z</updated>
    
    <content type="html"><![CDATA[<p>01-03 03:16:38.955   842  2369 I am_new_intent: [0,252403316,63,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,268435712]<br>01-03 03:16:39.025   842  2369 I am_focused_stack: [0,0,1,bringingFoundTaskToFront]<br>01-03 03:16:39.113   842  2369 I am_pause_activity: [0,14608435,com.android.settings/.SubSettings]<br>01-03 03:16:39.280   842  2369 I am_set_resumed_activity: [0,com.android.launcher3/.Launcher,resumeTopActivityInnerLocked]<br>01-03 03:16:39.370   842  2369 I am_uid_active: 10025<br>01-03 03:16:40.337   842  2369 I am_resume_activity: [0,252403316,63,com.android.launcher3/.Launcher]<br>01-03 03:16:57.203   842  2369 I am_task_to_front: [0,63]<br>01-03 03:16:58.674   842   951 I am_stop_activity: [0,14608435,com.android.settings/.SubSettings]<br>01-03 03:16:58.739 12737 12737 I am_on_paused_called: [0,com.android.settings.SubSettings,handlePauseActivity]<br>01-03 03:16:58.751   842  5734 I am_failed_to_pause: [0,14608435,com.android.settings/.SubSettings,(none)]<br>01-03 03:17:11.507 12737 12737 I am_on_stop_called: [0,com.android.settings.SubSettings,handleStopActivity]<br>01-03 03:17:11.541  3973  3973 I am_on_resume_called: [0,com.android.launcher3.Launcher,RESUME_ACTIVITY]<br>01-03 03:17:12.350   842   950 I am_pss  : [3973,10025,com.android.launcher3,26974208,16146432,8455168]<br>01-03 03:17:15.915   842   950 I am_pss  : [18493,10031,com.google.android.setupwizard,6391808,3411968,1949696]<br>01-03 03:17:16.057   842   950 I am_pss  : [8314,10017,com.google.android.apps.nbu.files,38444032,20512768,13848576]</p><p>01-01 18:18:20.729   842  4423 W jackywei: ======== removeTask ========<br>01-01 18:18:20.729   842  4423 W jackywei: java.lang.Throwable<br>01-01 18:18:20.729   842  4423 W jackywei:     at com.android.server.am.ActivityStack.removeTask(ActivityStack.java:5221)<br>01-01 18:18:20.729   842  4423 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4217)<br>01-01 18:18:20.729   842  4423 W jackywei:     at com.android.server.am.ActivityStack.activityDestroyedLocked(ActivityStack.java:4446)<br>01-01 18:18:20.729   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService.activityDestroyed(ActivityManagerService.java:7646)<br>01-01 18:18:20.729   842  4423 W jackywei:     at android.app.IActivityManager$Stub.onTransact(IActivityManager.java:960)<br>01-01 18:18:20.729   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:2978)<br>01-01 18:18:20.729   842  4423 W jackywei:     at android.os.Binder.execTransact(Binder.java:697)</p><p>01-01 18:19:30.787   842  4423 W jackywei: ======== removeTask ========<br>01-01 18:19:30.789   842  4423 W jackywei: java.lang.Throwable<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityStack.removeTask(ActivityStack.java:5221)<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityStack.removeActivityFromHistoryLocked(ActivityStack.java:4217)<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityStack.removeHistoryRecordsForAppLocked(ActivityStack.java:4554)<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityStack.handleAppDiedLocked(ActivityStack.java:5105)<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityStackSupervisor.handleAppDiedLocked(ActivityStackSupervisor.java:2008)<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService.handleAppDiedLocked(ActivityManagerService.java:5414)<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService.appDiedLocked(ActivityManagerService.java:5595)<br>01-01 18:19:30.789   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService$AppDeathRecipient.binderDied(ActivityManagerService.java:1642)<br>01-01 18:19:30.789   842  4423 W jackywei:     at android.os.BinderProxy.sendDeathNotice(Binder.java:844)</p><p>01-01 18:46:11.088   842  4423 W jackywei: ======== createTaskRecord ========<br>01-01 18:46:11.088   842  2236 V WindowManager: Window{b40586f u0 com.google.android.apps.photos/com.google.android.apps.photos.pager.HostPhotoPagerActivity}: wasAnimating=false, nowAnimating=false<br>01-01 18:46:11.089   842  4423 W jackywei: java.lang.Throwable<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityStack.createTaskRecord(ActivityStack.java:5280)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityStarter.setTaskFromReuseOrCreateNewTask(ActivityStarter.java:1799)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityStarter.startActivityUnchecked(ActivityStarter.java:1188)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityStarter.startActivity(ActivityStarter.java:1000)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityStarter.startActivity(ActivityStarter.java:577)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityStarter.startActivityLocked(ActivityStarter.java:283)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityStarter.startActivityMayWait(ActivityStarter.java:822)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:4623)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:4610)<br>01-01 18:46:11.089   842  4423 W jackywei:     at android.app.IActivityManager$Stub.onTransact(IActivityManager.java:121)<br>01-01 18:46:11.089   842  4423 W jackywei:     at com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:2978)<br>01-01 18:46:11.089   842  4423 W jackywei:     at android.os.Binder.execTransact(Binder.java:697)</p><p>7594    @Override<br>7595    public final void activityResumed(IBinder token) {<br>7596        final long origId = Binder.clearCallingIdentity();<br>7597        synchronized(this) {<br>7598            ActivityRecord.activityResumedLocked(token);<br>7599            mWindowManager.notifyAppResumedFinished(token);<br>7600        }<br>7601        Binder.restoreCallingIdentity(origId);<br>7602    }</p><p>1720    static void activityResumedLocked(IBinder token) {<br>1721        final ActivityRecord r = ActivityRecord.forTokenLocked(token);<br>1722        if (DEBUG_SAVED_STATE) Slog.i(TAG_STATES, “Resumed activity; dropping state of: “ + r);<br>1723        if (r != null) {<br>1724            r.icicle = null;<br>1725            r.haveState = false;<br>1726        }<br>1727    }<br>1728</p><p>只有 activityResumedLocked 才会导致 r.haveState 置成false.</p><p>而haveState存在的话,就不会remove = true;</p><p>也就不会<br>                    if (remove) {<br>                        removeActivityFromHistoryLocked(r, “appDied”);<br>                    }</p><p>827    ActivityRecord(ActivityManagerService _service, ProcessRecord _caller, int _launchedFromPid,<br>828            int _launchedFromUid, String _launchedFromPackage, Intent _intent, String _resolvedType,<br>829            ActivityInfo aInfo, Configuration _configuration,<br>830            ActivityRecord _resultTo, String _resultWho, int _reqCode,<br>831            boolean _componentSpecified, boolean _rootVoiceInteraction,<br>832            ActivityStackSupervisor supervisor, ActivityOptions options,<br>833            ActivityRecord sourceRecord) {<br>834        service = _service;<br>835        appToken = new Token(this);<br>836        info = aInfo;<br>837        launchedFromPid = _launchedFromPid;<br>838        launchedFromUid = _launchedFromUid;<br>839        launchedFromPackage = _launchedFromPackage;<br>840        userId = UserHandle.getUserId(aInfo.applicationInfo.uid);<br>841        intent = _intent;<br>842        shortComponentName = _intent.getComponent().flattenToShortString();<br>843        resolvedType = _resolvedType;<br>844        componentSpecified = _componentSpecified;<br>845        rootVoiceInteraction = _rootVoiceInteraction;<br>846        mLastReportedConfiguration = new MergedConfiguration(_configuration);<br>847        resultTo = _resultTo;<br>848        resultWho = _resultWho;<br>849        requestCode = _reqCode;<br>850        state = INITIALIZING;<br>851        frontOfTask = false;<br>852        launchFailed = false;<br>853        stopped = false;<br>854        delayedResume = false;<br>855        finishing = false;<br>856        deferRelaunchUntilPaused = false;<br>857        keysPaused = false;<br>858        inHistory = false;<br>859        visible = false;<br>860        nowVisible = false;<br>861        idle = false;<br>862        hasBeenLaunched = false;<br>863        mStackSupervisor = supervisor;<br>864<br>865        mRotationAnimationHint = aInfo.rotationAnimation;<br>866<br>867        if (options != null) {<br>868            pendingOptions = options;<br>869            mLaunchTaskBehind = pendingOptions.getLaunchTaskBehind();<br>870<br>871            final int rotationAnimation = pendingOptions.getRotationAnimationHint();<br>872            // Only override manifest supplied option if set.<br>873            if (rotationAnimation &gt;= 0) {<br>874                mRotationAnimationHint = rotationAnimation;<br>875            }<br>876            PendingIntent usageReport = pendingOptions.getUsageTimeReport();<br>877            if (usageReport != null) {<br>878                appTimeTracker = new AppTimeTracker(usageReport);<br>879            }<br>880        }<br>881<br>882        // This starts out true, since the initial state of an activity is that we have everything,<br>883        // and we shouldn’t never consider it lacking in state to be removed if it dies.<br>884        haveState = true; //这里就直接会置为true<br>885<br>886        // If the class name in the intent doesn’t match that of the target, this is<br>887        // probably an alias. We have to create a new ComponentName object to keep track<br>888        // of the real activity name, so that FLAG_ACTIVITY_CLEAR_TOP is handled properly.</p><pre><code>void notifyTaskPersisterLocked(TaskRecord task, boolean flush) {    final ActivityStack stack = task != null ? task.getStack() : null;    if (stack != null &amp;&amp; stack.isHomeOrRecentsStack()) {        // Never persist the home or recents stack.        return;    }    syncPersistentTaskIdsLocked();    mTaskPersister.wakeup(task, flush);}</code></pre><p>for i in {1..10000};do adb shell input tap 201 109 &amp;&amp; adb shell input keyevent 3 &amp;&amp; adb shell input tap 201 109 &amp;&amp; adb shell input tap 432 508 &amp;&amp; adb shell input tap 406 812 &amp;&amp; adb shell input tap 31 80 &amp;&amp; adb shell input keyevent 3;done</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;01-03 03:16:38.955   842  2369 I am_new_intent: [0,252403316,63,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,2684
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>Fota升级之后无法开机</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/fota-sheng-ji-kai-bu-ji/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/fota-sheng-ji-kai-bu-ji/</id>
    <published>2018-12-13T07:53:44.125Z</published>
    <updated>2018-12-13T07:52:35.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fota升级之后无法开机"><a href="#Fota升级之后无法开机" class="headerlink" title="Fota升级之后无法开机"></a>Fota升级之后无法开机</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>Crash的地方:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: *** FATAL EXCEPTION IN SYSTEM PROCESS: main</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: java.lang.NullPointerException: Attempt to read from field &apos;java.lang.String com.android.server.pm.PackageSettingBase.name&apos; on a null object reference</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.pm.PackageManagerService.scanPackageInternalLI(PackageManagerService.java:9710)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.pm.PackageManagerService.scanPackageLI(PackageManagerService.java:9451)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.pm.PackageManagerService.scanDirLI(PackageManagerService.java:9265)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.pm.PackageManagerService.scanDirTracedLI(PackageManagerService.java:9212)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.pm.PackageManagerService.&lt;init&gt;(PackageManagerService.java:2656)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.pm.PackageManagerService.main(PackageManagerService.java:2338)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.SystemServer.startBootstrapServices(SystemServer.java:601)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.SystemServer.run(SystemServer.java:399)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.server.SystemServer.main(SystemServer.java:277)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)</span><br><span class="line">08-03 10:42:29.051   723   723 E AndroidRuntime: at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:787)</span><br><span class="line">08-03 10:42:29.053   723   723 E AndroidRuntime: Error reporting crash</span><br><span class="line">08-03 10:42:29.053   723   723 E AndroidRuntime: java.lang.NullPointerException: Attempt to invoke interface method &apos;void android.app.IActivityManager.handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$ParcelableCrashInfo)&apos; on a null object reference</span><br><span class="line">08-03 10:42:29.053   723   723 E AndroidRuntime: at com.android.internal.os.RuntimeInit$KillApplicationHandler.uncaughtException(RuntimeInit.java:116)</span><br><span class="line">08-03 10:42:29.053   723   723 E AndroidRuntime: at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1068)</span><br><span class="line">08-03 10:42:29.053   723   723 E AndroidRuntime: at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1063)</span><br><span class="line">08-03 10:42:29.053   723   723 E AndroidRuntime: at java.lang.Thread.dispatchUncaughtException(Thread.java:1955)</span><br></pre></td></tr></table></figure><p>直接原因是ps空指针造成的.</p><p>发现是如下两个地方都返回了空.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (pkg.mOriginalPackages != null &amp;&amp; pkg.mOriginalPackages.contains(oldName)) &#123;</span><br><span class="line">    // This package has been renamed to its original name.  Let&apos;s</span><br><span class="line">    // use that.</span><br><span class="line">    ps = mSettings.getPackageLPr(oldName);</span><br><span class="line">&#125;</span><br><span class="line">// If there was no original package, see one for the real package name.</span><br><span class="line">if (ps == null) &#123;</span><br><span class="line">    ps = mSettings.getPackageLPr(pkg.packageName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看代码发现,mSettings 是PMS初始化的时候一起初始化的，并且会维护所有包的信息,读写文件:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public PackageManagerService(Context context, Installer installer,</span><br><span class="line">        boolean factoryTest, boolean onlyCore) &#123;</span><br><span class="line">    LockGuard.installLock(mPackages, LockGuard.INDEX_PACKAGES);</span><br><span class="line">    Trace.traceBegin(TRACE_TAG_PACKAGE_MANAGER, &quot;create package manager&quot;);</span><br><span class="line">    EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_PMS_START,</span><br><span class="line">            SystemClock.uptimeMillis());</span><br><span class="line"></span><br><span class="line">    if (mSdkVersion &lt;= 0) &#123;</span><br><span class="line">        Slog.w(TAG, &quot;**** ro.build.version.sdk not set!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mContext = context;</span><br><span class="line"></span><br><span class="line">    mPermissionReviewRequired = context.getResources().getBoolean(</span><br><span class="line">            R.bool.config_permissionReviewRequired);</span><br><span class="line"></span><br><span class="line">    mFactoryTest = factoryTest;</span><br><span class="line">    mOnlyCore = onlyCore;</span><br><span class="line">    /* niuwenchao modify 20180104 for 8909go preloadapp start */</span><br><span class="line">    mPreInstallDir = new File(&quot;/system/preloadapp&quot;);</span><br><span class="line">    /* niuwenchao modify 20180104 for 8909go preloadapp end */</span><br><span class="line">    mMetrics = new DisplayMetrics();</span><br><span class="line">    mSettings = new Settings(mPackages);</span><br><span class="line">    mSettings.addSharedUserLPw(&quot;android.uid.system&quot;, Process.SYSTEM_UID,</span><br><span class="line">            ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(&quot;android.uid.phone&quot;, RADIO_UID,</span><br><span class="line">            ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(&quot;android.uid.log&quot;, LOG_UID,</span><br><span class="line">            ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS: 不排除是&quot;niuwenchao&quot; 修改,或者是suyibang最近打的security patch引起的.(没有回退代码做压力测试,此问题也比较难复现)。</span><br></pre></td></tr></table></figure><p>下面是自己加的LOG</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">05-31 02:05:29.416  3563  3563 W PackageSettings: mSystemDir/data/system, mSettingsFilename = /data/system/packages.xml,mBackupSettingsFilename = /data/system/packages-backup.xml,mPackageListFilename = /data/system/packages.list,mKernelMappingFilename =/config/sdcardfs,mStoppedPackagesFilename = /data/system/packages-stopped.xml,mBackupStoppedPackagesFilename = /data/system/packages-stopped-backup.xml</span><br></pre></td></tr></table></figure><p>下载相应的PMS Settings使用的文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb pull /data/system/packages.xml</span><br><span class="line">adb pull /data/system/packages-backup.xml</span><br><span class="line">adb pull /data/system/packages-stopped.xml</span><br><span class="line">adb pull /data/system/packages-stopped-backup.xml</span><br><span class="line">adb pull /data/system/packages.list</span><br></pre></td></tr></table></figure><p>在 packages.xml 文件中,只有升级记录:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;updated-package name=&quot;com.google.android.gms&quot; codePath=&quot;/system/priv-app/GmsCore&quot; ft=&quot;1636e1ba6c0&quot; it=&quot;1636e1ba6c0&quot; ut=&quot;1636e1ba6c0&quot; version=&quot;12529018&quot; nativeLibraryPath=&quot;/system/priv-app/GmsCore/lib&quot; primaryCpuAbi=&quot;armeabi-v7a&quot; sharedUserId=&quot;10019&quot; /&gt;</span><br></pre></td></tr></table></figure><p>没有正常的，如下面的这种已经安装的记录:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;package name=&quot;com.android.providers.downloads.ui&quot; codePath=&quot;/system/app/DownloadProviderUi&quot; nativeLibraryPath=&quot;/system/app/DownloadProviderUi/lib&quot; publicFlags=&quot;944291397&quot; privateFlags=&quot;0&quot; ft=&quot;1648fe85388&quot; it=&quot;1636e1b9ef0&quot; ut=&quot;1648fe85388&quot; version=&quot;27&quot; sharedUserId=&quot;10013&quot; isOrphaned=&quot;true&quot;&gt;</span><br></pre></td></tr></table></figure><p> /data/system/packages.xml 里面没有GMS的相关节点.这里原因未知，可以暂时假设是某个流程没有走完，导致文件里面的内容未彻底修改完成.</p><p> packages.xml 对应的是 mSettingsFilename 变量.</p><h2 id="尝试不修改代码解决"><a href="#尝试不修改代码解决" class="headerlink" title="尝试不修改代码解决"></a>尝试不修改代码解决</h2><p>导出/data/system/packages.xml文件.</p><p>删除以下下内容:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;updated-package name=&quot;com.google.android.gms&quot; codePath=&quot;/system/priv-app/GmsCore&quot; ft=&quot;1636e1ba6c0&quot; it=&quot;1636e1ba6c0&quot; ut=&quot;1636e1ba6c0&quot; version=&quot;12529018&quot; nativeLibraryPath=&quot;/system/priv-app/GmsCore/lib&quot; primaryCpuAbi=&quot;armeabi-v7a&quot; sharedUserId=&quot;10019&quot; /&gt;</span><br></pre></td></tr></table></figure></p><p>push回手机.</p><p>手机可以正常启动.</p><p>相关节点会重新生成，这说明问题的关键点在/data/system/packages.xml的维护当中。</p><h2 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1:"></a>解决方案1:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isUpdatedSystemPkg &amp;&amp; !isUpdatedPkgBetter &amp;&amp; ps != null) &#123;//jackywei</span><br><span class="line">    // Set CPU Abis to application info.</span><br><span class="line">    if ((scanFlags &amp; SCAN_FIRST_BOOT_OR_UPGRADE) != 0) &#123;</span><br><span class="line">        final String cpuAbiOverride = deriveAbiOverride(pkg.cpuAbiOverride, updatedPkg);</span><br><span class="line">        derivePackageAbi(pkg, scanFile, cpuAbiOverride, false, mAppLib32InstallDir);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        pkg.applicationInfo.primaryCpuAbi = updatedPkg.primaryCpuAbiString;</span><br><span class="line">        pkg.applicationInfo.secondaryCpuAbi = updatedPkg.secondaryCpuAbiString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(ps != null)&#123;</span><br><span class="line">    throw new PackageManagerException(Log.WARN, &quot;Package &quot; + ps.name + &quot; at &quot;</span><br><span class="line">            + scanFile + &quot; ignored: updated version &quot; + ps.versionCode</span><br><span class="line">            + &quot; better than this &quot; + pkg.mVersionCode);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    throw new PackageManagerException(Log.WARN, &quot;Package &quot; + &quot; at &quot;</span><br><span class="line">            + scanFile + &quot; ignored: updated version &quot;</span><br><span class="line">            + &quot; better than this &quot; + pkg.mVersionCode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>手机可以正常开机，但是开机之后手机会提示GMS包没有安装，且依赖GMS包的相关应用无法启动。(Fail).<br>而且，/data/system/packages.xml 文件中GMS有关的节点不会更新.</p><h2 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2:"></a>解决方案2:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isUpdatedSystemPkg &amp;&amp; !isUpdatedPkgBetter &amp;&amp; ps != null) &#123;//jackywei</span><br><span class="line">    // Set CPU Abis to application info.</span><br><span class="line">    if ((scanFlags &amp; SCAN_FIRST_BOOT_OR_UPGRADE) != 0) &#123;</span><br><span class="line">        final String cpuAbiOverride = deriveAbiOverride(pkg.cpuAbiOverride, updatedPkg);</span><br><span class="line">        derivePackageAbi(pkg, scanFile, cpuAbiOverride, false, mAppLib32InstallDir);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        pkg.applicationInfo.primaryCpuAbi = updatedPkg.primaryCpuAbiString;</span><br><span class="line">        pkg.applicationInfo.secondaryCpuAbi = updatedPkg.secondaryCpuAbiString;</span><br><span class="line">    &#125;</span><br><span class="line">    throw new PackageManagerException(Log.WARN, &quot;Package &quot; + ps.name + &quot; at &quot;</span><br><span class="line">            + scanFile + &quot; ignored: updated version &quot; + ps.versionCode</span><br><span class="line">            + &quot; better than this &quot; + pkg.mVersionCode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样修改之后,PMS会把GMS当成新包解析,并且删除/data/system/packages.xml里面的</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;updated-package name=&quot;com.google.android.gms&quot; codePath=&quot;/system/priv-app/GmsCore&quot; ft=&quot;1636e1ba6c0&quot; it=&quot;1636e1ba6c0&quot; ut=&quot;1636e1ba6c0&quot; version=&quot;12529018&quot; nativeLibraryPath=&quot;/system/priv-app/GmsCore/lib&quot; primaryCpuAbi=&quot;armeabi-v7a&quot; sharedUserId=&quot;10019&quot; /&gt;</span><br></pre></td></tr></table></figure><p>并且,测试GMS包和相关应用都能正常使用。</p><p>目前来看，这样是合理与安全的。</p><h2 id="涉及到的代码"><a href="#涉及到的代码" class="headerlink" title="涉及到的代码."></a>涉及到的代码.</h2><p>两个文件，大概30000行左右的代码.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java</span><br><span class="line">frameworks/base/services/core/java/com/android/server/pm/Settings.java</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><pre><code>1. 和Google play store升级GMS有关系。2. 原因：可能是某一步处理时，异步操作未正常结束导致packages.xml文件节点里面有未清除的数据，有可能是FOTA程序打断的。3. 暂时未搞清楚，为什么GMS包会有这样被删除的动作。    (方向有三点:     a. PR 157058 有一个修改.     b. suyibang 打的Google 的patch可能有问题。     c. Android 8.1自己平台的问题。)4. 如需继续跟踪.   (1. 编译USER版本，    2. 并且需要打开相关LOG，    3. 并且修改LOG工具开机迅速启动    4. 需要google 翻墙WIFI    5. 大量压力测试).5. 从测试结果来看，第二种方案是安全的。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Fota升级之后无法开机&quot;&gt;&lt;a href=&quot;#Fota升级之后无法开机&quot; class=&quot;headerlink&quot; title=&quot;Fota升级之后无法开机&quot;&gt;&lt;/a&gt;Fota升级之后无法开机&lt;/h1&gt;&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>Flash越界</title>
    <link href="https://ifonly.me/2018/12/13/bug-jie-xi/flash-yue-jie/"/>
    <id>https://ifonly.me/2018/12/13/bug-jie-xi/flash-yue-jie/</id>
    <published>2018-12-13T07:53:38.381Z</published>
    <updated>2018-12-13T07:53:25.245Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><pre name="code" class="Shell">[  120.430581] sps:BAM 0x04044000 (va:0x00000000) enabled: ver:0x25, number of pipes:6[  122.454233] attempt to access beyond end of device[  122.454263] mmcblk0p38: rw=17, want=25695648, limit=25695181[   15.461154] ueventd: loading /devices/soc/a21b000.qcom,pronto/firmware/wcnss.b09 took 16ms[   15.505953] attempt to access beyond end of device[   15.505985] mmcblk0p38: rw=1, want=25710752, limit=25695181[   15.513746] init: Service 'qcom-c_main-sh' (pid 392) exited with statu[   20.550126] attempt to access beyond end of device[   20.550152] mmcblk0p38: rw=145, want=25710592, limit=25695181[   20.550487] f2fs_msg: 97 callbacks suppressed[   20.550506] F2FS-fs (mmcblk0p38): Issue discard(3213312, 3213312, 512) failed, ret: -5</pre><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ul><li><p>可能引起问题的地方:</p><ul><li><font size="5"><a href="http://10.10.1.18:8080/#/c/8254/1/common/build/partition.xml" target="_blank" rel="noopener">http://10.10.1.18:8080/#/c/8254/1/common/build/partition.xml</a></font><pre><br><img src="amWiki/images/flash_overflow01.png" alt="flash_overflow01" title="flash_overflow01"></pre></li></ul></li><li><p>排查方法</p></li></ul><p>先恢复出问题手机的出厂设置，看能否开机,再往里面填写数据，看能否复现问题.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e1=&gt;end: 其他问题</span><br><span class="line">e2=&gt;end: 分区问题</span><br><span class="line">e3=&gt;end: 其他问题</span><br><span class="line">op1=&gt;operation: 恢复出厂设置</span><br><span class="line">cond1=&gt;condition: 可以开机？</span><br><span class="line">op2=&gt;operation: 写入大量数据</span><br><span class="line">cond2=&gt;condition: 能否复现?</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;cond1-&gt;op2-&gt;cond2</span><br><span class="line">cond1(yes)-&gt;op2</span><br><span class="line">cond1(no)-&gt;e1</span><br><span class="line">cond2(yes)-&gt;e2</span><br><span class="line">cond2(no)-&gt;e3</span><br></pre></td></tr></table></figure><pre class="mermaid">graph TD;A-->B;A-->C;B-->D;C-->D;</pre><hr><ul><li>分区表对比(1A54恢复出厂设置之前和之后的分区表,没有区别,但是1A53-4和1A54的分区表有比较大的区别,但貌似不影响测试结果)<br><img src="amWiki/images/compareOfPartition.png" alt="compareOfPartition" title="compareOfPartition"></li></ul><hr><ul><li>填充手机的方法:<br><br> <font size="5"> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if=/dev/zero of=1M.txt bs=1M count=1</span><br></pre></td></tr></table></figure></font></li></ul><p><br><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if=/dev/zero of=100M.txt bs=100M count=1</span><br></pre></td></tr></table></figure></p><p><br><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if=/dev/zero of=1000M.txt bs=1000M count=1</span><br></pre></td></tr></table></figure></p><p><br><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in $(seq 1 1000); do adb -s 1f0 push 1000M.txt /sdcard/test/1000M$i.txt;done</span><br></pre></td></tr></table></figure></p><pre><code>&lt;/font&gt;</code></pre><hr><ul><li><p>LOG:<br> 正常的LOG应该是提示: Quota exceeded<br> 不正常的LOG提示:  I/O error</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$ for i in $(seq 1 1000); do adb -s 1f0 push 1000M.txt /sdcard/test/1000M$i.txt;done</span><br><span class="line">1000M.txt: 1 file pushed. 8.7 MB/s (1048576000 bytes in 114.662s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.4 MB/s (1048576000 bytes in 119.634s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 120.693s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 121.093s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 120.021s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 120.392s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 119.923s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 120.184s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 120.583s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.3 MB/s (1048576000 bytes in 120.764s)</span><br><span class="line">1000M.txt: 1 file pushed. 8.0 MB/s (1048576000 bytes in 124.633s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M12.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">1000M.txt: 0 files pushed. 8.6 MB/s (302673832 bytes in 33.740s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M13.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">1000M.txt: 0 files pushed. 9.7 MB/s (298021344 bytes in 29.364s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M14.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">1000M.txt: 0 files pushed. 9.2 MB/s (300970104 bytes in 31.357s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M15.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">1000M.txt: 0 files pushed. 8.2 MB/s (300445880 bytes in 35.017s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M16.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">1000M.txt: 0 files pushed. 9.8 MB/s (297300536 bytes in 29.071s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M17.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">1000M.txt: 0 files pushed. 9.7 MB/s (297890288 bytes in 29.415s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M18.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">1000M.txt: 0 files pushed. 9.7 MB/s (297235008 bytes in 29.371s)</span><br><span class="line"></span><br><span class="line">android@U-NSGWD180020:/data/workspace/log$ for i in $(seq 8 1000); do adb -s 1e4fd635 push 100M.txt /sdcard/test/100M$i.txt;done</span><br><span class="line">adb: error: failed to copy &apos;100M.txt&apos; to &apos;/sdcard/test/100M8.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">100M.txt: 0 files pushed. 13.9 MB/s (99405976 bytes in 6.836s)</span><br><span class="line">adb: error: failed to copy &apos;100M.txt&apos; to &apos;/sdcard/test/100M9.txt&apos;: remote write failed: Quota exceeded</span><br><span class="line">100M.txt: 0 files pushed. 17.8 MB/s (99799144 bytes in 5.354s)</span><br><span class="line">[ 18%] /sdcard/test/100M10.txt^C</span><br><span class="line"></span><br><span class="line">error</span><br><span class="line">1000M.txt: 0 files pushed. 245.3 MB/s (2752176 bytes in 0.011s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M153.txt&apos;: remote couldn&apos;t create file: I/O error</span><br><span class="line">1000M.txt: 0 files pushed. 247.7 MB/s (2752176 bytes in 0.011s)</span><br><span class="line">adb: error: failed to copy &apos;1000M.txt&apos; to &apos;/sdcard/test/1000M154.txt&apos;: remote couldn&apos;t create file: I/O error</span><br><span class="line">1000M.txt: 0 files pushed. 184.7 MB/s (2883232 bytes in 0.015s)</span><br></pre></td></tr></table></figure><h1 id="问题点"><a href="#问题点" class="headerlink" title="问题点"></a>问题点</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$ adb -s 1f0 shell df -a</span><br><span class="line">Filesystem            1K-blocks     Used Available Use% Mounted on</span><br><span class="line">rootfs                   439876     1668    438208   1% /</span><br><span class="line">tmpfs                    452888      688    452200   1% /dev</span><br><span class="line">devpts                        0        0         0   0% /dev/pts</span><br><span class="line">proc                          0        0         0   0% /proc</span><br><span class="line">sysfs                         0        0         0   0% /sys</span><br><span class="line">selinuxfs                     0        0         0   0% /sys/fs/selinux</span><br><span class="line">/dev/block/mmcblk0p12   1401624   701420    683820  51% /system</span><br><span class="line">/dev/block/mmcblk0p37    247872   146556     96196  61% /vendor</span><br><span class="line">none                          0        0         0   0% /acct</span><br><span class="line">debugfs                       0        0         0   0% /sys/kernel/debug</span><br><span class="line">tmpfs                    452888        0    452888   0% /mnt</span><br><span class="line">none                          0        0         0   0% /config</span><br><span class="line">none                          0        0         0   0% /dev/cpuctl</span><br><span class="line">/dev/block/mmcblk0p38  13356808 12082296    799376  94% /data</span><br><span class="line">/dev/block/mmcblk0p14    253920      148    248532   1% /cache</span><br><span class="line">/dev/block/mmcblk0p13     28144      236     27256   1% /persist</span><br><span class="line">/dev/block/mmcblk0p8      65488    56896      8592  87% /firmware</span><br><span class="line">tmpfs                    452888        0    452888   0% /storage</span><br><span class="line">tracefs                       0        0         0   0% /sys/kernel/debug/tracing</span><br><span class="line">adb                           0        0         0   0% /dev/usb-ffs/adb</span><br><span class="line">/data/media            13356808 12082296    799376  94% /storage/emulated</span><br><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$</span><br></pre></td></tr></table></figure></li></ul><h1 id="恢复出厂设置之后"><a href="#恢复出厂设置之后" class="headerlink" title="恢复出厂设置之后:"></a>恢复出厂设置之后:</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$ adb -s 1f0 shell df -a</span><br><span class="line">Filesystem            1K-blocks   Used Available Use% Mounted on</span><br><span class="line">rootfs                   439876   1668    438208   1% /</span><br><span class="line">tmpfs                    452888    688    452200   1% /dev</span><br><span class="line">devpts                        0      0         0   0% /dev/pts</span><br><span class="line">proc                          0      0         0   0% /proc</span><br><span class="line">sysfs                         0      0         0   0% /sys</span><br><span class="line">selinuxfs                     0      0         0   0% /sys/fs/selinux</span><br><span class="line">/dev/block/mmcblk0p12   1401624 701420    683820  51% /system</span><br><span class="line">/dev/block/mmcblk0p37    247872 146556     96196  61% /vendor</span><br><span class="line">none                          0      0         0   0% /acct</span><br><span class="line">debugfs                       0      0         0   0% /sys/kernel/debug</span><br><span class="line">tmpfs                    452888      0    452888   0% /mnt</span><br><span class="line">none                          0      0         0   0% /config</span><br><span class="line">none                          0      0         0   0% /dev/cpuctl</span><br><span class="line">/dev/block/mmcblk0p38  12845524 377124  12001456   4% /data</span><br><span class="line">/dev/block/mmcblk0p14    237536    392    229284   1% /cache</span><br><span class="line">/dev/block/mmcblk0p13     28144    232     27260   1% /persist</span><br><span class="line">/dev/block/mmcblk0p8      65488  56896      8592  87% /firmware</span><br><span class="line">tmpfs                    452888      0    452888   0% /storage</span><br><span class="line">tracefs                       0      0         0   0% /sys/kernel/debug/tracing</span><br><span class="line">adb                           0      0         0   0% /dev/usb-ffs/adb</span><br><span class="line">/data/media            12845524 377124  12001456   4% /storage/emulated</span><br></pre></td></tr></table></figure><h1 id="修改方案"><a href="#修改方案" class="headerlink" title="修改方案"></a>修改方案</h1><ul><li><p>修改 BoardConfig.mk 里面</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Modify by weibiao@hipad.com</span><br><span class="line">BOARD_USERDATAIMAGE_PARTITION_SIZE := 13155932160</span><br></pre></td></tr></table></figure></li><li><p>修改后第一开机的df情况  </p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$ adb shell df -a</span><br><span class="line">Filesystem            1K-blocks   Used Available Use% Mounted on</span><br><span class="line">rootfs                   440392   1668    438724   1% /</span><br><span class="line">tmpfs                    453400    688    452712   1% /dev</span><br><span class="line">devpts                        0      0         0   0% /dev/pts</span><br><span class="line">proc                          0      0         0   0% /proc</span><br><span class="line">sysfs                         0      0         0   0% /sys</span><br><span class="line">selinuxfs                     0      0         0   0% /sys/fs/selinux</span><br><span class="line">/dev/block/dm-0         1399728 706292    677052  52% /system</span><br><span class="line">/dev/block/dm-1          243892 148496     90360  63% /vendor</span><br><span class="line">none                          0      0         0   0% /acct</span><br><span class="line">debugfs                       0      0         0   0% /sys/kernel/debug</span><br><span class="line">tmpfs                    453400      0    453400   0% /mnt</span><br><span class="line">none                          0      0         0   0% /config</span><br><span class="line">none                          0      0         0   0% /dev/cpuctl</span><br><span class="line">/dev/block/mmcblk0p38  12845540 382924  11995672   4% /data</span><br><span class="line">/dev/block/mmcblk0p14    253920    148    248532   1% /cache</span><br><span class="line">/dev/block/mmcblk0p13     28144    236     27256   1% /persist</span><br><span class="line">/dev/block/mmcblk0p8      65488  57024      8464  88% /firmware</span><br><span class="line">tmpfs                    453400      0    453400   0% /storage</span><br><span class="line">tracefs                       0      0         0   0% /sys/kernel/debug/tracing</span><br><span class="line">adb                           0      0         0   0% /dev/usb-ffs/adb</span><br><span class="line">/data/media            12845540 382924  11995672   4% /storage/emulated</span><br></pre></td></tr></table></figure><ul><li>修改后第一次开机未重启的,最大填充. 433148 字节未填充满.  </li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$ adb -s 1f0 shell df -a</span><br><span class="line">Filesystem            1K-blocks     Used Available Use% Mounted on</span><br><span class="line">rootfs                   440392     1668    438724   1% /</span><br><span class="line">tmpfs                    453400      688    452712   1% /dev</span><br><span class="line">devpts                        0        0         0   0% /dev/pts</span><br><span class="line">proc                          0        0         0   0% /proc</span><br><span class="line">sysfs                         0        0         0   0% /sys</span><br><span class="line">selinuxfs                     0        0         0   0% /sys/fs/selinux</span><br><span class="line">/dev/block/dm-0         1399728   706292    677052  52% /system</span><br><span class="line">/dev/block/dm-1          243892   148496     90360  63% /vendor</span><br><span class="line">none                          0        0         0   0% /acct</span><br><span class="line">debugfs                       0        0         0   0% /sys/kernel/debug</span><br><span class="line">tmpfs                    453400        0    453400   0% /mnt</span><br><span class="line">none                          0        0         0   0% /config</span><br><span class="line">none                          0        0         0   0% /dev/cpuctl</span><br><span class="line">/dev/block/mmcblk0p38  12845540 11945448    433148  97% /data</span><br><span class="line">/dev/block/mmcblk0p14    253920      148    248532   1% /cache</span><br><span class="line">/dev/block/mmcblk0p13     28144      236     27256   1% /persist</span><br><span class="line">/dev/block/mmcblk0p8      65488    57024      8464  88% /firmware</span><br><span class="line">tmpfs                    453400        0    453400   0% /storage</span><br><span class="line">tracefs                       0        0         0   0% /sys/kernel/debug/tracing</span><br><span class="line">adb                           0        0         0   0% /dev/usb-ffs/adb</span><br><span class="line">/data/media            12845540 11945448    433148  97% /storage/emulated</span><br></pre></td></tr></table></figure><ul><li>修改后第一次开机重启之后,最大填充. 与上面的数据有出入  </li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$ adb -s 1f0 shell df -a</span><br><span class="line">Filesystem            1K-blocks     Used Available Use% Mounted on</span><br><span class="line">rootfs                   440392     1668    438724   1% /</span><br><span class="line">tmpfs                    453400      688    452712   1% /dev</span><br><span class="line">devpts                        0        0         0   0% /dev/pts</span><br><span class="line">proc                          0        0         0   0% /proc</span><br><span class="line">sysfs                         0        0         0   0% /sys</span><br><span class="line">selinuxfs                     0        0         0   0% /sys/fs/selinux</span><br><span class="line">/dev/block/dm-0         1399728   706292    677052  52% /system</span><br><span class="line">/dev/block/dm-1          243892   148496     90360  63% /vendor</span><br><span class="line">none                          0        0         0   0% /acct</span><br><span class="line">debugfs                       0        0         0   0% /sys/kernel/debug</span><br><span class="line">tmpfs                    453400        0    453400   0% /mnt</span><br><span class="line">none                          0        0         0   0% /config</span><br><span class="line">none                          0        0         0   0% /dev/cpuctl</span><br><span class="line">/dev/block/mmcblk0p38  12845540 11945304    433292  97% /data</span><br><span class="line">/dev/block/mmcblk0p14    253920      148    248532   1% /cache</span><br><span class="line">/dev/block/mmcblk0p13     28144      236     27256   1% /persist</span><br><span class="line">/dev/block/mmcblk0p8      65488    57024      8464  88% /firmware</span><br><span class="line">tmpfs                    453400        0    453400   0% /storage</span><br><span class="line">tracefs                       0        0         0   0% /sys/kernel/debug/tracing</span><br><span class="line">adb                           0        0         0   0% /dev/usb-ffs/adb</span><br></pre></td></tr></table></figure><ul><li>恢复出厂设置之后</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android@NSGWD180021:/data/workspace/temp/0329/ioerror$ adb -s 1f0 shell df -a</span><br><span class="line">Filesystem            1K-blocks   Used Available Use% Mounted on</span><br><span class="line">rootfs                   440392   1668    438724   1% /</span><br><span class="line">tmpfs                    453400    688    452712   1% /dev</span><br><span class="line">devpts                        0      0         0   0% /dev/pts</span><br><span class="line">proc                          0      0         0   0% /proc</span><br><span class="line">sysfs                         0      0         0   0% /sys</span><br><span class="line">selinuxfs                     0      0         0   0% /sys/fs/selinux</span><br><span class="line">/dev/block/dm-0         1399728 706292    677052  52% /system</span><br><span class="line">/dev/block/dm-1          243892 148496     90360  63% /vendor</span><br><span class="line">none                          0      0         0   0% /acct</span><br><span class="line">debugfs                       0      0         0   0% /sys/kernel/debug</span><br><span class="line">tmpfs                    453400      0    453400   0% /mnt</span><br><span class="line">none                          0      0         0   0% /config</span><br><span class="line">none                          0      0         0   0% /dev/cpuctl</span><br><span class="line">/dev/block/mmcblk0p38  12845524 381700  11996880   4% /data</span><br><span class="line">/dev/block/mmcblk0p14    237536    392    229284   1% /cache</span><br><span class="line">/dev/block/mmcblk0p13     28144    236     27256   1% /persist</span><br><span class="line">/dev/block/mmcblk0p8      65488  57024      8464  88% /firmware</span><br><span class="line">tmpfs                    453400      0    453400   0% /storage</span><br><span class="line">tracefs                       0      0         0   0% /sys/kernel/debug/tracing</span><br><span class="line">adb                           0      0         0   0% /dev/usb-ffs/adb</span><br><span class="line">/data/media            12845524 381700  11996880   4% /storage/emulated</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h2&gt;&lt;pre name=&quot;code&quot; class=&quot;Shell&quot;&gt;
[  120.430581] sps:BAM 0x04044000 (va:0x0
      
    
    </summary>
    
      <category term="BUG解析" scheme="https://ifonly.me/categories/BUG%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>学习资料</title>
    <link href="https://ifonly.me/2018/12/13/react-xue-xi/001-xue-xi-wang-zhi/"/>
    <id>https://ifonly.me/2018/12/13/react-xue-xi/001-xue-xi-wang-zhi/</id>
    <published>2018-12-13T07:40:28.576Z</published>
    <updated>2018-12-13T07:40:28.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h1><p><a href="https://reactjs.org/tutorial/tutorial.html" target="_blank" rel="noopener">https://reactjs.org/tutorial/tutorial.html</a><br><a href="https://reactjs.org/tutorial/tutorial.html#setup-for-the-tutorial" target="_blank" rel="noopener">https://reactjs.org/tutorial/tutorial.html#setup-for-the-tutorial</a><br><a href="http://huziketang.mangojuice.top" target="_blank" rel="noopener">http://huziketang.mangojuice.top</a><br><a href="https://blog.csdn.net/u014541501/article/details/78954526" target="_blank" rel="noopener">https://blog.csdn.net/u014541501/article/details/78954526</a><br><a href="http://www.redux.org.cn/docs/recipes/MigratingToRedux.html" target="_blank" rel="noopener">http://www.redux.org.cn/docs/recipes/MigratingToRedux.html</a></p><p><a href="https://www.npmjs.com/package/react-native-sockets" target="_blank" rel="noopener">https://www.npmjs.com/package/react-native-sockets</a></p><p><a href="https://hackernoon.com/a-simple-messaging-app-with-react-native-and-socket-io-e1cae3df7bda" target="_blank" rel="noopener">https://hackernoon.com/a-simple-messaging-app-with-react-native-and-socket-io-e1cae3df7bda</a></p><p><a href="https://facebook.github.io/react-native/docs/network" target="_blank" rel="noopener">https://facebook.github.io/react-native/docs/network</a></p><p><a href="https://www.npmjs.com/package/react-native-sockets" target="_blank" rel="noopener">https://www.npmjs.com/package/react-native-sockets</a><br><a href="https://reactnative.cn/docs/running-on-device/" target="_blank" rel="noopener">https://reactnative.cn/docs/running-on-device/</a><br><a href="https://reactnative.cn/docs/tutorial/" target="_blank" rel="noopener">https://reactnative.cn/docs/tutorial/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;学习资料&quot;&gt;&lt;a href=&quot;#学习资料&quot; class=&quot;headerlink&quot; title=&quot;学习资料&quot;&gt;&lt;/a&gt;学习资料&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot; target=&quot;_
      
    
    </summary>
    
      <category term="React学习" scheme="https://ifonly.me/categories/React%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/ke-xue-shang-wang/"/>
    <id>https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/ke-xue-shang-wang/</id>
    <published>2018-12-13T06:36:46.232Z</published>
    <updated>2018-12-07T01:57:27.026Z</updated>
    
    <content type="html"><![CDATA[<p>让终端走代理的几种方法<br>Macproxyterminal<br>（2017.9.17更新）</p><p>方法1:<br>在终端中直接运行命令</p><p>export http_proxy=”socks5://127.0.0.1:1080”<br>export https_proxy=”socks5://127.0.0.1:1080”</p><p>1<br>export http_proxy=<a href="http://proxyAddress:port" target="_blank" rel="noopener">http://proxyAddress:port</a><br>这个办法的好处是简单直接，并且影响面很小（只对当前终端有效，退出就不行了）。</p><p>如果你用的是ss代理，在当前终端运行以下命令，那么wget curl 这类网络命令都会经过ss代理</p><p>1<br>export ALL_PROXY=socks5://127.0.0.1:1080<br>方法2:<br>把代理服务器地址写入shell配置文件.bashrc或者.zshrc</p><p>直接在.bashrc或者.zshrc添加下面内容</p><p>1<br>2<br>export http_proxy=”<a href="http://localhost:port&quot;" target="_blank" rel="noopener">http://localhost:port&quot;</a><br>export https_proxy=”<a href="http://localhost:port&quot;" target="_blank" rel="noopener">http://localhost:port&quot;</a><br>以使用shadowsocks代理为例，ss的代理端口为1080,那么应该设置为</p><p>1<br>2<br>export http_proxy=”socks5://127.0.0.1:1080”<br>export https_proxy=”socks5://127.0.0.1:1080”<br>或者直接设置ALL_PROXY</p><p>1<br>export ALL_PROXY=socks5://127.0.0.1:1080<br>localhost就是一个域名，域名默认指向 127.0.0.1，两者是一样的。</p><p>然后ESC后:wq保存文件，接着在终端中执行<br>source ~/.bashrc</p><p>或者退出当前终端再起一个终端。 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。</p><p>或者通过设置alias简写来简化操作，每次要用的时候输入setproxy，不用了就unsetproxy。</p><p>1<br>2<br>3<br>alias setproxy=”export ALL_PROXY=socks5://127.0.0.1:1080”<br>alias unsetproxy=”unset ALL_PROXY”<br>alias ip=”curl -i <a href="http://ip.cn&quot;" target="_blank" rel="noopener">http://ip.cn&quot;</a><br>方法3:<br>改相应工具的配置，比如apt的配置</p><p>1<br>sudo vim /etc/apt/apt.conf<br>在文件末尾加入下面这行</p><p>1<br>Acquire::http::Proxy “<a href="http://proxyAddress:port&quot;" target="_blank" rel="noopener">http://proxyAddress:port&quot;</a><br>保存apt.conf文件即可。<br>关于apt的代理设置可以参考这里</p><p>关于git的代理设置看这里:用shadowsocks加速git clone</p><p>方法4(推荐):<br>利用proxychains在终端使用socks5代理</p><p>补充：<br>如果代理服务器需要登陆，这时可以直接把用户名和密码写进去</p><p>1<br>http_proxy=<a href="http://userName:password@proxyAddress:port" target="_blank" rel="noopener">http://userName:password@proxyAddress:port</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;让终端走代理的几种方法&lt;br&gt;Macproxyterminal&lt;br&gt;（2017.9.17更新）&lt;/p&gt;
&lt;p&gt;方法1:&lt;br&gt;在终端中直接运行命令&lt;/p&gt;
&lt;p&gt;export http_proxy=”socks5://127.0.0.1:1080”&lt;br&gt;export h
      
    
    </summary>
    
      <category term="工作小贴士" scheme="https://ifonly.me/categories/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>黑屏分析</title>
    <link href="https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/hei-ping-fen-xi/"/>
    <id>https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/hei-ping-fen-xi/</id>
    <published>2018-12-13T06:36:46.232Z</published>
    <updated>2018-12-07T01:57:42.638Z</updated>
    
    <content type="html"><![CDATA[<h1 id="黑屏分析"><a href="#黑屏分析" class="headerlink" title="黑屏分析"></a>黑屏分析</h1><h2 id="首先-分析各进程状态"><a href="#首先-分析各进程状态" class="headerlink" title="首先,分析各进程状态"></a>首先,分析各进程状态</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell ps |grep -i surfaceflinger</span><br><span class="line">adb shell ps |grep -i system_server</span><br></pre></td></tr></table></figure><p>都正常的存在</p><h2 id="产生system-server-btraces文件"><a href="#产生system-server-btraces文件" class="headerlink" title="产生system_server btraces文件"></a>产生system_server btraces文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell kill -3 913</span><br><span class="line">adb pull /data/anr/</span><br></pre></td></tr></table></figure><p>trace_00<br>结果正常</p><h2 id="产生system-server-btraces文件-1"><a href="#产生system-server-btraces文件-1" class="headerlink" title="产生system_server btraces文件"></a>产生system_server btraces文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell debuggerd -b 385 |tee surfaceflinger_385_05.log</span><br><span class="line">for i in &#123;1..100&#125;; do adb shell debuggerd -b 385 &gt;  surfaceflinger_385_$i.log;sleep 1;done</span><br></pre></td></tr></table></figure><p>用对比工具做对比发现调用堆栈,内容基本不变,无论做什么操作.看似正常.</p><h2 id="查看binder状态"><a href="#查看binder状态" class="headerlink" title="查看binder状态"></a>查看binder状态</h2><p>adb pull /sys/kernel/debug/binder/</p><p>下面是感觉不太正常的 pid<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proc 385</span><br><span class="line">context binder</span><br><span class="line">  node 5612880: u00000000ac61cf40 c00000000ae8963b4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 947</span><br><span class="line">  node 12654566: u00000000ac61cf60 c00000000ae896954 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 3098</span><br><span class="line">  node 12654595: u00000000ac6241e0 c00000000ac649374 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5612888: u00000000ac624ef0 c00000000ae8965f4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 947</span><br><span class="line">  node 12654684: u00000000ac62b010 c00000000ae893b88 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5612913: u00000000ac62b630 c00000000ae896684 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 947</span><br><span class="line">  node 5612948: u00000000ac62b640 c00000000ac6490a4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 12654686: u00000000ac62b770 c00000000ae893dbc pri 0:139 hs 1 hw 1 ls 0 lw 0 is 2 iw 2 tr 1 proc 3098 913</span><br><span class="line">  node 16754: u00000000ac6a93b0 c00000000ae894dd4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 2 iw 2 tr 1 proc 2231 913</span><br><span class="line">  node 16752: u00000000ac6a93e0 c00000000ae894e20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10880475: u00000000ac6a9420 c00000000ae896594 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 2226</span><br><span class="line">  node 10880481: u00000000ac6a9490 c00000000ae8966b4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 2226</span><br><span class="line">  node 17259: u00000000ac6a9510 c00000000ac6ab0f0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 17261: u00000000ac6a9910 c00000000ac6ab0a4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 2 iw 2 tr 1 proc 2231 913</span><br><span class="line">  node 10880508: u00000000ac6a9980 c00000000ae8967d4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 2226</span><br><span class="line">  node 10880527: u00000000ac6a99f0 c00000000ac649414 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9914726: u00000000ac6a9a00 c00000000ae8964d4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 1156</span><br><span class="line">  node 12654345: u00000000ac6a9a30 c00000000ae8968f4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 3098</span><br><span class="line">  node 98067: u00000000ac6a9a60 c00000000ae893110 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2033921: u00000000ac6a9a70 c00000000ae893e80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 98069: u00000000ac6a9e80 c00000000ae89269c pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 27312: u00000000ac6a9ee0 c00000000ae8960e4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 27319: u00000000ac6a9f20 c00000000ae8963e4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 12654351: u00000000ac6a9fe0 c00000000ae896924 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 3098</span><br><span class="line">  node 12653178: u00000000ac6bc020 c00000000ae896534 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 3733</span><br><span class="line">  node 12653184: u00000000ac6bc030 c00000000ae896624 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 3733</span><br><span class="line">  node 9914732: u00000000ac6bc040 c00000000ae896564 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 1156</span><br><span class="line">  node 2033923: u00000000ac6bca90 c00000000ae893c7c pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 821: u00000000ac6f6400 c00000000ac67c244 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 253</span><br><span class="line">  node 96256: u00000000ac6f6450 c00000000ae8a4034 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2046: u00000000ac6f6950 c00000000ae896144 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2052: u00000000ac6f6960 c00000000ae8961a4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2904: u00000000ac6f6970 c00000000ae8a3ef4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2911: u00000000ac6f6980 c00000000ae8961d4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2917: u00000000ac6f6990 c00000000ae896204 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2923: u00000000ac6f69a0 c00000000ae896234 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 2929: u00000000ac6f69b0 c00000000ae896264 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 4374: u00000000ac6f69c0 c00000000ae896294 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 4380: u00000000ac6f69d0 c00000000ae896174 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8427: u00000000ac6f69e0 c00000000ae8962c4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 2231</span><br><span class="line">  node 8434: u00000000ac6f69f0 c00000000ae8962f4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 2231</span><br><span class="line">  node 8679: u00000000ac6f6a20 c00000000ae8a3cc4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 96756: u00000000ac6f6a40 c00000000ae896654 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 99151: u00000000ac6f6ed0 c00000000ae896744 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 99158: u00000000ac6f6f10 c00000000ae8967a4 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 817: u00000000ae88ef90 c00000000ae8b6004 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 8 iw 8 tr 1 proc 3098 3733 2226 1156 947 2231 913 253</span><br><span class="line">  node 2058: u00000000ae8c05d0 c00000000ae889188 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8604: u00000000ae8c0c50 c00000000ae896324 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 2231</span><br><span class="line"></span><br><span class="line">proc 2231</span><br><span class="line">context binder</span><br><span class="line">  node 5414037: u0000000094b52050 c000000009285e9a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5414039: u0000000094b520a0 c000000009285ea60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5413886: u0000000094f6aa20 c00000000928ff400 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5413895: u0000000094f6aab0 c00000000928ff460 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 23830: u0000000095a9d5e0 c0000000095466de0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 16922: u0000000096338120 c000000009631fd20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 17001: u00000000963385d0 c0000000095ea2a28 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 385</span><br><span class="line">  node 17169: u0000000096338610 c0000000095ea2a60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 17220: u0000000096338650 c0000000095ea2a80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 17617: u00000000963387e0 c0000000095ea2da0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 17637: u0000000096338810 c0000000095ea2dc0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14681: u0000000096b0d020 c0000000096b7eb60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14715: u0000000096b0d030 c0000000096b7eb80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14725: u0000000096b0d060 c0000000096b7eba0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14735: u0000000096b0d070 c0000000096b7ebc0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14750: u0000000096b0d090 c0000000096b7ebe0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14762: u0000000096b0d0c0 c0000000096b7ec00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14774: u0000000096b0d0e0 c0000000096b7ec20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14781: u0000000096b0d100 c0000000096b7ec40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14817: u0000000096b0d120 c0000000096b7ec60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14825: u0000000096b0d140 c0000000096b7ec80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14864: u0000000096b0d170 c0000000096b7eca0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14869: u0000000096b0d180 c0000000096b7ecc0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14893: u0000000096b0d1a0 c0000000096b7ece0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14908: u0000000096b0d200 c0000000096b7ed00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14938: u0000000096b0d220 c0000000096b7ed40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14927: u0000000096b0d230 c0000000096b7ed20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15056: u0000000096b0d260 c0000000096b7ed80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15059: u0000000096b0d280 c0000000096b7eda0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15095: u0000000096b0d2d0 c0000000096b7edc0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15104: u0000000096b0d300 c0000000096b7ede0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15112: u0000000096b0d320 c0000000096b7ee00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15124: u0000000096b0d350 c0000000096b7ee20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15148: u0000000096b0d3d0 c0000000096b7ee40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15163: u0000000096b0d410 c0000000096b7ee60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15182: u0000000096b0d420 c0000000096b7eea0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15174: u0000000096b0d430 c0000000096b7ee80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15298: u0000000096b0d480 c0000000096b7ef00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15251: u0000000096b0d4b0 c0000000096b7eec0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15264: u0000000096b0d570 c0000000096b7eee0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15397: u0000000096b0d650 c0000000096b11280 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15407: u0000000096b0d680 c0000000096b112a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15414: u0000000096b0d6a0 c0000000096b112c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15445: u0000000096b0d6b0 c0000000096b112e0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15488: u0000000096b0d700 c0000000096b11340 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15502: u0000000096b0d720 c0000000096b11360 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15508: u0000000096b0d7b0 c0000000096b113c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15475: u0000000096b0d7d0 c0000000096b11300 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15523: u0000000096b0d7f0 c0000000096b113e0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15542: u0000000096b0d820 c0000000096b11400 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15482: u0000000096b0dab0 c0000000096b11320 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15768: u0000000096b0db70 c0000000096b115a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15778: u0000000096b0db80 c0000000096b115c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 15788: u0000000096b0dbb0 c0000000096b115e0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 16330: u0000000096b0ddb0 c000000009631fa80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 16625: u0000000096b0dde0 c000000009631faa0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10118: u0000000096bf3380 c0000000096bf7d60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10188: u0000000096bf3410 c0000000096bf7de0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10196: u0000000096bf3430 c0000000096bf7e00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10234: u0000000096bf3450 c0000000096bf7e20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10268: u0000000096bf3490 c0000000096bf7e40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10798: u0000000096bf37a0 c00000000a4ac6ca0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 11297: u0000000096bf3810 c00000000973b8240 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 11299: u0000000096bf3830 c00000000973b8280 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 12241: u0000000096bf3a90 c00000000973b8740 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 412</span><br><span class="line">  node 14183: u0000000096bf3d40 c0000000096b7e980 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14224: u0000000096bf3d90 c0000000096b7ea00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14241: u0000000096bf3e10 c0000000096b7ea20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14514: u0000000096bf3e50 c0000000096b7ea60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14550: u0000000096bf3ea0 c0000000096b7ea80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14594: u0000000096bf3f40 c0000000096b7eaa0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14631: u0000000096bf3fb0 c0000000096b7eb00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14644: u0000000096bf3fe0 c0000000096b7eb20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 14658: u0000000096bf3ff0 c0000000096b7eb40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8339: u00000000976ef0a0 c00000000976e5920 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8357: u00000000976ef720 c00000000af4e9500 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8511: u00000000976ef760 c00000000976e5b00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8513: u00000000976ef770 c00000000976e5b20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8365: u00000000976ef780 c00000000976e5940 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 7975: u00000000976ef810 c00000000afc1d5a8 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 411</span><br><span class="line">  node 7989: u00000000976ef8a0 c00000000976e59c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9231: u00000000976efa10 c00000000976e5a60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9274: u00000000976efa70 c00000000976e5c80 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8508: u00000000976efc00 c00000000976e59a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8621: u00000000976efd00 c00000000976e5bc0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9290: u00000000976efd40 c00000000976e5d40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 8693: u00000000976efde0 c00000000976e5c40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9281: u00000000976efdf0 c00000000976e5ce0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9308: u00000000976efe80 c00000000976e5d60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6538: u00000000a5d69840 c00000000af4e98e0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6563: u00000000a5d69860 c00000000af4e9900 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6580: u00000000a5d69880 c00000000af4e9920 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 202529: u00000000a5d69a40 c0000000096b57640 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6770: u00000000a5d69be0 c00000000af4e9ca0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6800: u00000000a5d69c20 c00000000af4e9cc0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6889: u00000000a5d69d20 c00000000af4e9ec0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6932: u00000000a5d69d60 c00000000af4e9f00 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6938: u00000000a5d69d80 c00000000af4e9fe0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6944: u00000000a5d69da0 c00000000a6fc07a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6967: u00000000a5d69dd0 c00000000a6fc08c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 202549: u00000000a5d69e00 c0000000096b57660 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5869: u00000000a6fec3c0 c00000000af4e9240 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5904: u00000000a6fec4f0 c00000000af4e9260 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5916: u00000000a6fec510 c00000000af4e92a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5909: u00000000a6fec550 c00000000af4e9280 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5920: u00000000a6fec570 c00000000af4e92c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5953: u00000000a6fec5c0 c00000000af4e92e0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5964: u00000000a6fec5e0 c00000000af4e9300 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5971: u00000000a6fec630 c00000000af4e9320 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5975: u00000000a6fec650 c00000000af4e9340 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5979: u00000000a6fec670 c00000000af4e9360 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5986: u00000000a6fec6e0 c00000000af4e9380 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6040: u00000000a6fec810 c00000000af4e93a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6141: u00000000a6fec8e0 c00000000af4e93c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6147: u00000000a6fec900 c00000000af4e93e0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6163: u00000000a6fec920 c00000000af4e9400 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6294: u00000000a6fecb30 c00000000af4e9460 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 6301: u00000000a6fecb80 c00000000af4e9420 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 4929: u00000000af483ef0 c00000000a6ffa2a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9405: u00000000af4ea010 c00000000af4e96c0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 18154: u00000000af4ea0f0 c00000000af4e94a0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9366: u00000000af4ea100 c00000000976e5a40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 18162: u00000000af4ea140 c00000000af4e9620 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9453: u00000000af4ea180 c00000000976e5e20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 18178: u00000000af4ea1c0 c00000000af4e9660 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 10084: u00000000af4ea290 c0000000096bf7d40 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 9540: u00000000af4ea3f0 c00000000976e5d20 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 18446: u00000000af4ea860 c00000000af4ebf58 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 411</span><br><span class="line">  node 18927: u00000000af4eac80 c00000000976f4e60 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 202510: u00000000af4ead40 c0000000096b57600 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5015: u00000000af4f30c0 c00000000a6ffa500 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5808: u00000000af4f31d0 c00000000af4e91e0 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  node 5829: u00000000af4f3250 c00000000af4e9220 pri 0:139 hs 1 hw 1 ls 0 lw 0 is 1 iw 1 tr 1 proc 913</span><br><span class="line">  buffer 9970: 00000000 size 0:0:0 delivered</span><br><span class="line">  buffer 5414280: 00000000 size 4:0:0 delivered</span><br><span class="line">  buffer 12850338: 00000000 size 8:0:0 delivered</span><br><span class="line">  buffer 12907701: 00000000 size 68:0:0 delivered</span><br></pre></td></tr></table></figure></p><h2 id="关注一开始-没有注意到的systemui"><a href="#关注一开始-没有注意到的systemui" class="headerlink" title="关注一开始,没有注意到的systemui"></a>关注一开始,没有注意到的systemui</h2><p>其他很多应用由和sysetmui一样的现象,先不做分析</p><h2 id="kill-system-server-看能否恢复"><a href="#kill-system-server-看能否恢复" class="headerlink" title="kill system_server 看能否恢复"></a>kill system_server 看能否恢复</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell kill -9 913 (system_server)</span><br></pre></td></tr></table></figure><p>观察到黑屏现象,还继续存在.<br>说明问题出在下层.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell cat /sys/class/graphics/fb0/msm_fb_panel_info &gt; msm_fb_panel_info_02.log</span><br><span class="line">adb shell cat /sys/class/leds/lcd-backlight/brightness</span><br></pre></td></tr></table></figure><h1 id="最后发现是QCOM-图形库的问题"><a href="#最后发现是QCOM-图形库的问题" class="headerlink" title="最后发现是QCOM 图形库的问题"></a>最后发现是QCOM 图形库的问题</h1><p>更新SBA搞定.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;黑屏分析&quot;&gt;&lt;a href=&quot;#黑屏分析&quot; class=&quot;headerlink&quot; title=&quot;黑屏分析&quot;&gt;&lt;/a&gt;黑屏分析&lt;/h1&gt;&lt;h2 id=&quot;首先-分析各进程状态&quot;&gt;&lt;a href=&quot;#首先-分析各进程状态&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="工作小贴士" scheme="https://ifonly.me/categories/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>批量替换代码中的字符串</title>
    <link href="https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/pi-liang-shan-chu-dai-ma-zhong-de-zi-fu-chuan/"/>
    <id>https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/pi-liang-shan-chu-dai-ma-zhong-de-zi-fu-chuan/</id>
    <published>2018-12-13T06:36:46.232Z</published>
    <updated>2018-12-07T01:58:25.273Z</updated>
    
    <content type="html"><![CDATA[<h1 id="批量替换代码中的字符串"><a href="#批量替换代码中的字符串" class="headerlink" title="批量替换代码中的字符串"></a>批量替换代码中的字符串</h1><ul><li>下面command 的意思是： 找出所有含有xxx.字符串的文件,并且把xxx换成han<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep -r &apos;xxx\.&apos; . |awk -F&apos;:&apos; &apos;&#123;print $1&#125;&apos; | xargs sed -i &apos;s/xxx\./han\./&apos;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;批量替换代码中的字符串&quot;&gt;&lt;a href=&quot;#批量替换代码中的字符串&quot; class=&quot;headerlink&quot; title=&quot;批量替换代码中的字符串&quot;&gt;&lt;/a&gt;批量替换代码中的字符串&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;下面command 的意思是： 找出所有含有xxx.字符
      
    
    </summary>
    
      <category term="工作小贴士" scheme="https://ifonly.me/categories/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>把所有CPU拉到最高</title>
    <link href="https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/la-qi-suo-you-cpu/"/>
    <id>https://ifonly.me/2018/12/13/gong-zuo-xiao-tie-shi/la-qi-suo-you-cpu/</id>
    <published>2018-12-13T06:36:46.232Z</published>
    <updated>2018-12-07T01:58:05.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="把所有CPU拉到最高"><a href="#把所有CPU拉到最高" class="headerlink" title="把所有CPU拉到最高"></a>把所有CPU拉到最高</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb shell setenforce 0</span><br><span class="line">adb remount</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu0/online&quot;</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu1/online&quot;</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu2/online&quot;</span><br><span class="line">adb shell &quot;echo 1 &gt; /sys/devices/system/cpu/cpu3/online&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor&quot;</span><br><span class="line">adb shell &quot;echo performance &gt; /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">adb shell cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq</span><br><span class="line">adb shell cat /sys/devices/system/cpu/cpu1/cpufreq/cpuinfo_cur_freq</span><br><span class="line">adb shell cat /sys/devices/system/cpu/cpu2/cpufreq/cpuinfo_cur_freq</span><br><span class="line">adb shell cat /sys/devices/system/cpu/cpu3/cpufreq/cpuinfo_cur_freq</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;把所有CPU拉到最高&quot;&gt;&lt;a href=&quot;#把所有CPU拉到最高&quot; class=&quot;headerlink&quot; title=&quot;把所有CPU拉到最高&quot;&gt;&lt;/a&gt;把所有CPU拉到最高&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="工作小贴士" scheme="https://ifonly.me/categories/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
  </entry>
  
</feed>
